(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function po(n){const e=Object.create(null);for(const t of n.split(","))e[t]=1;return t=>t in e}const L2={},U0=[],ge=()=>{},ol=()=>!1,Tr=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),mo=n=>n.startsWith("onUpdate:"),m3=Object.assign,_o=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},l5=Object.prototype.hasOwnProperty,M2=(n,e)=>l5.call(n,e),t2=Array.isArray,F0=n=>wr(n)==="[object Map]",ll=n=>wr(n)==="[object Set]",a2=n=>typeof n=="function",$2=n=>typeof n=="string",Pt=n=>typeof n=="symbol",I2=n=>n!==null&&typeof n=="object",cl=n=>(I2(n)||a2(n))&&a2(n.then)&&a2(n.catch),ul=Object.prototype.toString,wr=n=>ul.call(n),c5=n=>wr(n).slice(8,-1),hl=n=>wr(n)==="[object Object]",go=n=>$2(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,An=po(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ar=n=>{const e=Object.create(null);return(t=>e[t]||(e[t]=n(t)))},u5=/-\w/g,bt=Ar(n=>n.replace(u5,e=>e.slice(1).toUpperCase())),h5=/\B([A-Z])/g,c0=Ar(n=>n.replace(h5,"-$1").toLowerCase()),fl=Ar(n=>n.charAt(0).toUpperCase()+n.slice(1)),$r=Ar(n=>n?`on${fl(n)}`:""),xt=(n,e)=>!Object.is(n,e),Yr=(n,...e)=>{for(let t=0;t<n.length;t++)n[t](...e)},dl=(n,e,t,i=!1)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,writable:i,value:t})},f5=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let u4;const Cr=()=>u4||(u4=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function W3(n){if(t2(n)){const e={};for(let t=0;t<n.length;t++){const i=n[t],r=$2(i)?_5(i):W3(i);if(r)for(const s in r)e[s]=r[s]}return e}else if($2(n)||I2(n))return n}const d5=/;(?![^(]*\))/g,p5=/:([^]+)/,m5=/\/\*[^]*?\*\//g;function _5(n){const e={};return n.replace(m5,"").split(d5).forEach(t=>{if(t){const i=t.split(p5);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function O0(n){let e="";if($2(n))e=n;else if(t2(n))for(let t=0;t<n.length;t++){const i=O0(n[t]);i&&(e+=i+" ")}else if(I2(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const g5="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",v5=po(g5);function pl(n){return!!n||n===""}const ml=n=>!!(n&&n.__v_isRef===!0),_l=n=>$2(n)?n:n==null?"":t2(n)||I2(n)&&(n.toString===ul||!a2(n.toString))?ml(n)?_l(n.value):JSON.stringify(n,gl,2):String(n),gl=(n,e)=>ml(e)?gl(n,e.value):F0(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[i,r],s)=>(t[jr(i,s)+" =>"]=r,t),{})}:ll(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>jr(t))}:Pt(e)?jr(e):I2(e)&&!t2(e)&&!hl(e)?String(e):e,jr=(n,e="")=>{var t;return Pt(n)?`Symbol(${(t=n.description)!=null?t:e})`:n};function x5(n){return n==null?"initial":typeof n=="string"?n===""?" ":n:String(n)}/**
* @vue/reactivity v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let A3;class y5{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=A3,!e&&A3&&(this.index=(A3.scopes||(A3.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=A3;try{return A3=this,e()}finally{A3=t}}}on(){++this._on===1&&(this.prevScope=A3,A3=this)}off(){this._on>0&&--this._on===0&&(A3=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(this.effects.length=0,t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function M5(){return A3}let R2;const Kr=new WeakSet;class vl{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,A3&&A3.active&&A3.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Kr.has(this)&&(Kr.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||yl(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,h4(this),Ml(this);const e=R2,t=ve;R2=this,ve=!0;try{return this.fn()}finally{Sl(this),R2=e,ve=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)yo(e);this.deps=this.depsTail=void 0,h4(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Kr.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Ks(this)&&this.run()}get dirty(){return Ks(this)}}let xl=0,Cn,Rn;function yl(n,e=!1){if(n.flags|=8,e){n.next=Rn,Rn=n;return}n.next=Cn,Cn=n}function vo(){xl++}function xo(){if(--xl>0)return;if(Rn){let e=Rn;for(Rn=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let n;for(;Cn;){let e=Cn;for(Cn=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){n||(n=i)}e=t}}if(n)throw n}function Ml(n){for(let e=n.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function Sl(n){let e,t=n.depsTail,i=t;for(;i;){const r=i.prevDep;i.version===-1?(i===t&&(t=r),yo(i),S5(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=r}n.deps=e,n.depsTail=t}function Ks(n){for(let e=n.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(El(e.dep.computed)||e.dep.version!==e.version))return!0;return!!n._dirty}function El(n){if(n.flags&4&&!(n.flags&16)||(n.flags&=-17,n.globalVersion===Nn)||(n.globalVersion=Nn,!n.isSSR&&n.flags&128&&(!n.deps&&!n._dirty||!Ks(n))))return;n.flags|=2;const e=n.dep,t=R2,i=ve;R2=n,ve=!0;try{Ml(n);const r=n.fn(n._value);(e.version===0||xt(r,n._value))&&(n.flags|=128,n._value=r,e.version++)}catch(r){throw e.version++,r}finally{R2=t,ve=i,Sl(n),n.flags&=-3}}function yo(n,e=!1){const{dep:t,prevSub:i,nextSub:r}=n;if(i&&(i.nextSub=r,n.prevSub=void 0),r&&(r.prevSub=i,n.nextSub=void 0),t.subs===n&&(t.subs=i,!i&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)yo(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function S5(n){const{prevDep:e,nextDep:t}=n;e&&(e.nextDep=t,n.prevDep=void 0),t&&(t.prevDep=e,n.nextDep=void 0)}let ve=!0;const bl=[];function et(){bl.push(ve),ve=!1}function tt(){const n=bl.pop();ve=n===void 0?!0:n}function h4(n){const{cleanup:e}=n;if(n.cleanup=void 0,e){const t=R2;R2=void 0;try{e()}finally{R2=t}}}let Nn=0;class E5{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Mo{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!R2||!ve||R2===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==R2)t=this.activeLink=new E5(R2,this),R2.deps?(t.prevDep=R2.depsTail,R2.depsTail.nextDep=t,R2.depsTail=t):R2.deps=R2.depsTail=t,Tl(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const i=t.nextDep;i.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=i),t.prevDep=R2.depsTail,t.nextDep=void 0,R2.depsTail.nextDep=t,R2.depsTail=t,R2.deps===t&&(R2.deps=i)}return t}trigger(e){this.version++,Nn++,this.notify(e)}notify(e){vo();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{xo()}}}function Tl(n){if(n.dep.sc++,n.sub.flags&4){const e=n.dep.computed;if(e&&!n.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)Tl(i)}const t=n.dep.subs;t!==n&&(n.prevSub=t,t&&(t.nextSub=n)),n.dep.subs=n}}const Qi=new WeakMap,t0=Symbol(""),Zs=Symbol(""),Bn=Symbol("");function h3(n,e,t){if(ve&&R2){let i=Qi.get(n);i||Qi.set(n,i=new Map);let r=i.get(t);r||(i.set(t,r=new Mo),r.map=i,r.key=t),r.track()}}function Ke(n,e,t,i,r,s){const a=Qi.get(n);if(!a){Nn++;return}const o=l=>{l&&l.trigger()};if(vo(),e==="clear")a.forEach(o);else{const l=t2(n),c=l&&go(t);if(l&&t==="length"){const u=Number(i);a.forEach((h,f)=>{(f==="length"||f===Bn||!Pt(f)&&f>=u)&&o(h)})}else switch((t!==void 0||a.has(void 0))&&o(a.get(t)),c&&o(a.get(Bn)),e){case"add":l?c&&o(a.get("length")):(o(a.get(t0)),F0(n)&&o(a.get(Zs)));break;case"delete":l||(o(a.get(t0)),F0(n)&&o(a.get(Zs)));break;case"set":F0(n)&&o(a.get(t0));break}}xo()}function b5(n,e){const t=Qi.get(n);return t&&t.get(e)}function p0(n){const e=x2(n);return e===n?e:(h3(e,"iterate",Bn),se(n)?e:e.map(i3))}function Rr(n){return h3(n=x2(n),"iterate",Bn),n}const T5={__proto__:null,[Symbol.iterator](){return Zr(this,Symbol.iterator,i3)},concat(...n){return p0(this).concat(...n.map(e=>t2(e)?p0(e):e))},entries(){return Zr(this,"entries",n=>(n[1]=i3(n[1]),n))},every(n,e){return ke(this,"every",n,e,void 0,arguments)},filter(n,e){return ke(this,"filter",n,e,t=>t.map(i3),arguments)},find(n,e){return ke(this,"find",n,e,i3,arguments)},findIndex(n,e){return ke(this,"findIndex",n,e,void 0,arguments)},findLast(n,e){return ke(this,"findLast",n,e,i3,arguments)},findLastIndex(n,e){return ke(this,"findLastIndex",n,e,void 0,arguments)},forEach(n,e){return ke(this,"forEach",n,e,void 0,arguments)},includes(...n){return Jr(this,"includes",n)},indexOf(...n){return Jr(this,"indexOf",n)},join(n){return p0(this).join(n)},lastIndexOf(...n){return Jr(this,"lastIndexOf",n)},map(n,e){return ke(this,"map",n,e,void 0,arguments)},pop(){return pn(this,"pop")},push(...n){return pn(this,"push",n)},reduce(n,...e){return f4(this,"reduce",n,e)},reduceRight(n,...e){return f4(this,"reduceRight",n,e)},shift(){return pn(this,"shift")},some(n,e){return ke(this,"some",n,e,void 0,arguments)},splice(...n){return pn(this,"splice",n)},toReversed(){return p0(this).toReversed()},toSorted(n){return p0(this).toSorted(n)},toSpliced(...n){return p0(this).toSpliced(...n)},unshift(...n){return pn(this,"unshift",n)},values(){return Zr(this,"values",i3)}};function Zr(n,e,t){const i=Rr(n),r=i[e]();return i!==n&&!se(n)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.done||(s.value=t(s.value)),s}),r}const w5=Array.prototype;function ke(n,e,t,i,r,s){const a=Rr(n),o=a!==n&&!se(n),l=a[e];if(l!==w5[e]){const h=l.apply(n,s);return o?i3(h):h}let c=t;a!==n&&(o?c=function(h,f){return t.call(this,i3(h),f,n)}:t.length>2&&(c=function(h,f){return t.call(this,h,f,n)}));const u=l.call(a,c,i);return o&&r?r(u):u}function f4(n,e,t,i){const r=Rr(n);let s=t;return r!==n&&(se(n)?t.length>3&&(s=function(a,o,l){return t.call(this,a,o,l,n)}):s=function(a,o,l){return t.call(this,a,i3(o),l,n)}),r[e](s,...i)}function Jr(n,e,t){const i=x2(n);h3(i,"iterate",Bn);const r=i[e](...t);return(r===-1||r===!1)&&To(t[0])?(t[0]=x2(t[0]),i[e](...t)):r}function pn(n,e,t=[]){et(),vo();const i=x2(n)[e].apply(n,t);return xo(),tt(),i}const A5=po("__proto__,__v_isRef,__isVue"),wl=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(Pt));function C5(n){Pt(n)||(n=String(n));const e=x2(this);return h3(e,"has",n),e.hasOwnProperty(n)}class Al{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,i){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return i===(r?s?B5:Pl:s?Ll:Rl).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const a=t2(e);if(!r){let l;if(a&&(l=T5[t]))return l;if(t==="hasOwnProperty")return C5}const o=Reflect.get(e,t,r3(e)?e:i);if((Pt(t)?wl.has(t):A5(t))||(r||h3(e,"get",t),s))return o;if(r3(o)){const l=a&&go(t)?o:o.value;return r&&I2(l)?Qs(l):l}return I2(o)?r?Qs(o):Eo(o):o}}class Cl extends Al{constructor(e=!1){super(!1,e)}set(e,t,i,r){let s=e[t];if(!this._isShallow){const l=Tt(s);if(!se(i)&&!Tt(i)&&(s=x2(s),i=x2(i)),!t2(e)&&r3(s)&&!r3(i))return l||(s.value=i),!0}const a=t2(e)&&go(t)?Number(t)<e.length:M2(e,t),o=Reflect.set(e,t,i,r3(e)?e:r);return e===x2(r)&&(a?xt(i,s)&&Ke(e,"set",t,i):Ke(e,"add",t,i)),o}deleteProperty(e,t){const i=M2(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&Ke(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!Pt(t)||!wl.has(t))&&h3(e,"has",t),i}ownKeys(e){return h3(e,"iterate",t2(e)?"length":t0),Reflect.ownKeys(e)}}class R5 extends Al{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const L5=new Cl,P5=new R5,I5=new Cl(!0);const Js=n=>n,fi=n=>Reflect.getPrototypeOf(n);function D5(n,e,t){return function(...i){const r=this.__v_raw,s=x2(r),a=F0(s),o=n==="entries"||n===Symbol.iterator&&a,l=n==="keys"&&a,c=r[n](...i),u=t?Js:e?er:i3;return!e&&h3(s,"iterate",l?Zs:t0),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:o?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function di(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function U5(n,e){const t={get(r){const s=this.__v_raw,a=x2(s),o=x2(r);n||(xt(r,o)&&h3(a,"get",r),h3(a,"get",o));const{has:l}=fi(a),c=e?Js:n?er:i3;if(l.call(a,r))return c(s.get(r));if(l.call(a,o))return c(s.get(o));s!==a&&s.get(r)},get size(){const r=this.__v_raw;return!n&&h3(x2(r),"iterate",t0),r.size},has(r){const s=this.__v_raw,a=x2(s),o=x2(r);return n||(xt(r,o)&&h3(a,"has",r),h3(a,"has",o)),r===o?s.has(r):s.has(r)||s.has(o)},forEach(r,s){const a=this,o=a.__v_raw,l=x2(o),c=e?Js:n?er:i3;return!n&&h3(l,"iterate",t0),o.forEach((u,h)=>r.call(s,c(u),c(h),a))}};return m3(t,n?{add:di("add"),set:di("set"),delete:di("delete"),clear:di("clear")}:{add(r){!e&&!se(r)&&!Tt(r)&&(r=x2(r));const s=x2(this);return fi(s).has.call(s,r)||(s.add(r),Ke(s,"add",r,r)),this},set(r,s){!e&&!se(s)&&!Tt(s)&&(s=x2(s));const a=x2(this),{has:o,get:l}=fi(a);let c=o.call(a,r);c||(r=x2(r),c=o.call(a,r));const u=l.call(a,r);return a.set(r,s),c?xt(s,u)&&Ke(a,"set",r,s):Ke(a,"add",r,s),this},delete(r){const s=x2(this),{has:a,get:o}=fi(s);let l=a.call(s,r);l||(r=x2(r),l=a.call(s,r)),o&&o.call(s,r);const c=s.delete(r);return l&&Ke(s,"delete",r,void 0),c},clear(){const r=x2(this),s=r.size!==0,a=r.clear();return s&&Ke(r,"clear",void 0,void 0),a}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=D5(r,n,e)}),t}function So(n,e){const t=U5(n,e);return(i,r,s)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?i:Reflect.get(M2(t,r)&&r in i?t:i,r,s)}const F5={get:So(!1,!1)},O5={get:So(!1,!0)},N5={get:So(!0,!1)};const Rl=new WeakMap,Ll=new WeakMap,Pl=new WeakMap,B5=new WeakMap;function z5(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function k5(n){return n.__v_skip||!Object.isExtensible(n)?0:z5(c5(n))}function Eo(n){return Tt(n)?n:bo(n,!1,L5,F5,Rl)}function H5(n){return bo(n,!1,I5,O5,Ll)}function Qs(n){return bo(n,!0,P5,N5,Pl)}function bo(n,e,t,i,r){if(!I2(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const s=k5(n);if(s===0)return n;const a=r.get(n);if(a)return a;const o=new Proxy(n,s===2?i:t);return r.set(n,o),o}function N0(n){return Tt(n)?N0(n.__v_raw):!!(n&&n.__v_isReactive)}function Tt(n){return!!(n&&n.__v_isReadonly)}function se(n){return!!(n&&n.__v_isShallow)}function To(n){return n?!!n.__v_raw:!1}function x2(n){const e=n&&n.__v_raw;return e?x2(e):n}function V5(n){return!M2(n,"__v_skip")&&Object.isExtensible(n)&&dl(n,"__v_skip",!0),n}const i3=n=>I2(n)?Eo(n):n,er=n=>I2(n)?Qs(n):n;function r3(n){return n?n.__v_isRef===!0:!1}function k3(n){return G5(n,!1)}function G5(n,e){return r3(n)?n:new W5(n,e)}class W5{constructor(e,t){this.dep=new Mo,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:x2(e),this._value=t?e:i3(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,i=this.__v_isShallow||se(e)||Tt(e);e=i?e:x2(e),xt(e,t)&&(this._rawValue=e,this._value=i?e:i3(e),this.dep.trigger())}}function Il(n){return r3(n)?n.value:n}const X5={get:(n,e,t)=>e==="__v_raw"?n:Il(Reflect.get(n,e,t)),set:(n,e,t,i)=>{const r=n[e];return r3(r)&&!r3(t)?(r.value=t,!0):Reflect.set(n,e,t,i)}};function Dl(n){return N0(n)?n:new Proxy(n,X5)}function q5(n){const e=t2(n)?new Array(n.length):{};for(const t in n)e[t]=Y5(n,t);return e}class $5{constructor(e,t,i){this._object=e,this._key=t,this._defaultValue=i,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return b5(x2(this._object),this._key)}}function Y5(n,e,t){const i=n[e];return r3(i)?i:new $5(n,e,t)}class j5{constructor(e,t,i){this.fn=e,this.setter=t,this._value=void 0,this.dep=new Mo(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Nn-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&R2!==this)return yl(this,!0),!0}get value(){const e=this.dep.track();return El(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function K5(n,e,t=!1){let i,r;return a2(n)?i=n:(i=n.get,r=n.set),new j5(i,r,t)}const pi={},tr=new WeakMap;let Wt;function Z5(n,e=!1,t=Wt){if(t){let i=tr.get(t);i||tr.set(t,i=[]),i.push(n)}}function J5(n,e,t=L2){const{immediate:i,deep:r,once:s,scheduler:a,augmentJob:o,call:l}=t,c=y=>r?y:se(y)||r===!1||r===0?pt(y,1):pt(y);let u,h,f,p,v=!1,_=!1;if(r3(n)?(h=()=>n.value,v=se(n)):N0(n)?(h=()=>c(n),v=!0):t2(n)?(_=!0,v=n.some(y=>N0(y)||se(y)),h=()=>n.map(y=>{if(r3(y))return y.value;if(N0(y))return c(y);if(a2(y))return l?l(y,2):y()})):a2(n)?e?h=l?()=>l(n,2):n:h=()=>{if(f){et();try{f()}finally{tt()}}const y=Wt;Wt=u;try{return l?l(n,3,[p]):n(p)}finally{Wt=y}}:h=ge,e&&r){const y=h,w=r===!0?1/0:r;h=()=>pt(y(),w)}const m=M5(),d=()=>{u.stop(),m&&m.active&&_o(m.effects,u)};if(s&&e){const y=e;e=(...w)=>{y(...w),d()}}let b=_?new Array(n.length).fill(pi):pi;const T=y=>{if(!(!(u.flags&1)||!u.dirty&&!y))if(e){const w=u.run();if(r||v||(_?w.some((I,D)=>xt(I,b[D])):xt(w,b))){f&&f();const I=Wt;Wt=u;try{const D=[w,b===pi?void 0:_&&b[0]===pi?[]:b,p];b=w,l?l(e,3,D):e(...D)}finally{Wt=I}}}else u.run()};return o&&o(T),u=new vl(h),u.scheduler=a?()=>a(T,!1):T,p=y=>Z5(y,!1,u),f=u.onStop=()=>{const y=tr.get(u);if(y){if(l)l(y,4);else for(const w of y)w();tr.delete(u)}},e?i?T(!0):b=u.run():a?a(T.bind(null,!0),!0):u.run(),d.pause=u.pause.bind(u),d.resume=u.resume.bind(u),d.stop=d,d}function pt(n,e=1/0,t){if(e<=0||!I2(n)||n.__v_skip||(t=t||new Map,(t.get(n)||0)>=e))return n;if(t.set(n,e),e--,r3(n))pt(n.value,e,t);else if(t2(n))for(let i=0;i<n.length;i++)pt(n[i],e,t);else if(ll(n)||F0(n))n.forEach(i=>{pt(i,e,t)});else if(hl(n)){for(const i in n)pt(n[i],e,t);for(const i of Object.getOwnPropertySymbols(n))Object.prototype.propertyIsEnumerable.call(n,i)&&pt(n[i],e,t)}return n}/**
* @vue/runtime-core v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ei(n,e,t,i){try{return i?n(...i):n()}catch(r){Lr(r,e,t)}}function Ie(n,e,t,i){if(a2(n)){const r=ei(n,e,t,i);return r&&cl(r)&&r.catch(s=>{Lr(s,e,t)}),r}if(t2(n)){const r=[];for(let s=0;s<n.length;s++)r.push(Ie(n[s],e,t,i));return r}}function Lr(n,e,t,i=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:a}=e&&e.appContext.config||L2;if(e){let o=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;o;){const u=o.ec;if(u){for(let h=0;h<u.length;h++)if(u[h](n,l,c)===!1)return}o=o.parent}if(s){et(),ei(s,null,10,[n,l,c]),tt();return}}Q5(n,t,r,i,a)}function Q5(n,e,t,i=!0,r=!1){if(r)throw n;console.error(n)}const v3=[];let Ee=-1;const B0=[];let ft=null,L0=0;const Ul=Promise.resolve();let nr=null;function eu(n){const e=nr||Ul;return n?e.then(this?n.bind(this):n):e}function tu(n){let e=Ee+1,t=v3.length;for(;e<t;){const i=e+t>>>1,r=v3[i],s=zn(r);s<n||s===n&&r.flags&2?e=i+1:t=i}return e}function wo(n){if(!(n.flags&1)){const e=zn(n),t=v3[v3.length-1];!t||!(n.flags&2)&&e>=zn(t)?v3.push(n):v3.splice(tu(e),0,n),n.flags|=1,Fl()}}function Fl(){nr||(nr=Ul.then(Bl))}function Ol(n){t2(n)?B0.push(...n):ft&&n.id===-1?ft.splice(L0+1,0,n):n.flags&1||(B0.push(n),n.flags|=1),Fl()}function d4(n,e,t=Ee+1){for(;t<v3.length;t++){const i=v3[t];if(i&&i.flags&2){if(n&&i.id!==n.uid)continue;v3.splice(t,1),t--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function Nl(n){if(B0.length){const e=[...new Set(B0)].sort((t,i)=>zn(t)-zn(i));if(B0.length=0,ft){ft.push(...e);return}for(ft=e,L0=0;L0<ft.length;L0++){const t=ft[L0];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}ft=null,L0=0}}const zn=n=>n.id==null?n.flags&2?-1:1/0:n.id;function Bl(n){try{for(Ee=0;Ee<v3.length;Ee++){const e=v3[Ee];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),ei(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Ee<v3.length;Ee++){const e=v3[Ee];e&&(e.flags&=-2)}Ee=-1,v3.length=0,Nl(),nr=null,(v3.length||B0.length)&&Bl()}}let Ce=null,zl=null;function ir(n){const e=Ce;return Ce=n,zl=n&&n.type.__scopeId||null,e}function nu(n,e=Ce,t){if(!e||n._n)return n;const i=(...r)=>{i._d&&ar(-1);const s=ir(e);let a;try{a=n(...r)}finally{ir(s),i._d&&ar(1)}return a};return i._n=!0,i._c=!0,i._d=!0,i}function Ut(n,e,t,i){const r=n.dirs,s=e&&e.dirs;for(let a=0;a<r.length;a++){const o=r[a];s&&(o.oldValue=s[a].value);let l=o.dir[i];l&&(et(),Ie(l,t,8,[n.el,o,n,e]),tt())}}const iu=Symbol("_vte"),ru=n=>n.__isTeleport,su=Symbol("_leaveCb");function Ao(n,e){n.shapeFlag&6&&n.component?(n.transition=e,Ao(n.component.subTree,e)):n.shapeFlag&128?(n.ssContent.transition=e.clone(n.ssContent),n.ssFallback.transition=e.clone(n.ssFallback)):n.transition=e}function au(n,e){return a2(n)?m3({name:n.name},e,{setup:n}):n}function kl(n){n.ids=[n.ids[0]+n.ids[2]+++"-",0,0]}const rr=new WeakMap;function Ln(n,e,t,i,r=!1){if(t2(n)){n.forEach((v,_)=>Ln(v,e&&(t2(e)?e[_]:e),t,i,r));return}if(Pn(i)&&!r){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&Ln(n,e,t,i.component.subTree);return}const s=i.shapeFlag&4?Po(i.component):i.el,a=r?null:s,{i:o,r:l}=n,c=e&&e.r,u=o.refs===L2?o.refs={}:o.refs,h=o.setupState,f=x2(h),p=h===L2?ol:v=>M2(f,v);if(c!=null&&c!==l){if(p4(e),$2(c))u[c]=null,p(c)&&(h[c]=null);else if(r3(c)){c.value=null;const v=e;v.k&&(u[v.k]=null)}}if(a2(l))ei(l,o,12,[a,u]);else{const v=$2(l),_=r3(l);if(v||_){const m=()=>{if(n.f){const d=v?p(l)?h[l]:u[l]:l.value;if(r)t2(d)&&_o(d,s);else if(t2(d))d.includes(s)||d.push(s);else if(v)u[l]=[s],p(l)&&(h[l]=u[l]);else{const b=[s];l.value=b,n.k&&(u[n.k]=b)}}else v?(u[l]=a,p(l)&&(h[l]=a)):_&&(l.value=a,n.k&&(u[n.k]=a))};if(a){const d=()=>{m(),rr.delete(n)};d.id=-1,rr.set(n,d),B3(d,t)}else p4(n),m()}}}function p4(n){const e=rr.get(n);e&&(e.flags|=8,rr.delete(n))}Cr().requestIdleCallback;Cr().cancelIdleCallback;const Pn=n=>!!n.type.__asyncLoader,Hl=n=>n.type.__isKeepAlive;function ou(n,e){Vl(n,"a",e)}function lu(n,e){Vl(n,"da",e)}function Vl(n,e,t=y3){const i=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(Pr(e,i,t),t){let r=t.parent;for(;r&&r.parent;)Hl(r.parent.vnode)&&cu(i,e,t,r),r=r.parent}}function cu(n,e,t,i){const r=Pr(e,n,i,!0);Ir(()=>{_o(i[e],r)},t)}function Pr(n,e,t=y3,i=!1){if(t){const r=t[n]||(t[n]=[]),s=e.__weh||(e.__weh=(...a)=>{et();const o=ti(t),l=Ie(e,t,n,a);return o(),tt(),l});return i?r.unshift(s):r.push(s),s}}const rt=n=>(e,t=y3)=>{(!Hn||n==="sp")&&Pr(n,(...i)=>e(...i),t)},uu=rt("bm"),an=rt("m"),Gl=rt("bu"),hu=rt("u"),Wl=rt("bum"),Ir=rt("um"),fu=rt("sp"),du=rt("rtg"),pu=rt("rtc");function mu(n,e=y3){Pr("ec",n,e)}const _u=Symbol.for("v-ndc");function gu(n,e,t,i){let r;const s=t,a=t2(n);if(a||$2(n)){const o=a&&N0(n);let l=!1,c=!1;o&&(l=!se(n),c=Tt(n),n=Rr(n)),r=new Array(n.length);for(let u=0,h=n.length;u<h;u++)r[u]=e(l?c?er(i3(n[u])):i3(n[u]):n[u],u,void 0,s)}else if(typeof n=="number"){r=new Array(n);for(let o=0;o<n;o++)r[o]=e(o+1,o,void 0,s)}else if(I2(n))if(n[Symbol.iterator])r=Array.from(n,(o,l)=>e(o,l,void 0,s));else{const o=Object.keys(n);r=new Array(o.length);for(let l=0,c=o.length;l<c;l++){const u=o[l];r[l]=e(n[u],u,l,s)}}else r=[];return r}const ea=n=>n?hc(n)?Po(n):ea(n.parent):null,In=m3(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>ea(n.parent),$root:n=>ea(n.root),$host:n=>n.ce,$emit:n=>n.emit,$options:n=>ql(n),$forceUpdate:n=>n.f||(n.f=()=>{wo(n.update)}),$nextTick:n=>n.n||(n.n=eu.bind(n.proxy)),$watch:n=>zu.bind(n)}),Qr=(n,e)=>n!==L2&&!n.__isScriptSetup&&M2(n,e),vu={get({_:n},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:i,data:r,props:s,accessCache:a,type:o,appContext:l}=n;let c;if(e[0]!=="$"){const p=a[e];if(p!==void 0)switch(p){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(Qr(i,e))return a[e]=1,i[e];if(r!==L2&&M2(r,e))return a[e]=2,r[e];if((c=n.propsOptions[0])&&M2(c,e))return a[e]=3,s[e];if(t!==L2&&M2(t,e))return a[e]=4,t[e];ta&&(a[e]=0)}}const u=In[e];let h,f;if(u)return e==="$attrs"&&h3(n.attrs,"get",""),u(n);if((h=o.__cssModules)&&(h=h[e]))return h;if(t!==L2&&M2(t,e))return a[e]=4,t[e];if(f=l.config.globalProperties,M2(f,e))return f[e]},set({_:n},e,t){const{data:i,setupState:r,ctx:s}=n;return Qr(r,e)?(r[e]=t,!0):i!==L2&&M2(i,e)?(i[e]=t,!0):M2(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(s[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:s,type:a}},o){let l,c;return!!(t[o]||n!==L2&&o[0]!=="$"&&M2(n,o)||Qr(e,o)||(l=s[0])&&M2(l,o)||M2(i,o)||M2(In,o)||M2(r.config.globalProperties,o)||(c=a.__cssModules)&&c[o])},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:M2(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function m4(n){return t2(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let ta=!0;function xu(n){const e=ql(n),t=n.proxy,i=n.ctx;ta=!1,e.beforeCreate&&_4(e.beforeCreate,n,"bc");const{data:r,computed:s,methods:a,watch:o,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:p,updated:v,activated:_,deactivated:m,beforeDestroy:d,beforeUnmount:b,destroyed:T,unmounted:y,render:w,renderTracked:I,renderTriggered:D,errorCaptured:L,serverPrefetch:E,expose:C,inheritAttrs:O,components:G,directives:X,filters:s1}=e;if(c&&yu(c,i,null),a)for(const Q in a){const V=a[Q];a2(V)&&(i[Q]=V.bind(t))}if(r){const Q=r.call(t,t);I2(Q)&&(n.data=Eo(Q))}if(ta=!0,s)for(const Q in s){const V=s[Q],p1=a2(V)?V.bind(t,t):a2(V.get)?V.get.bind(t,t):ge,E1=!a2(V)&&a2(V.set)?V.set.bind(t):ge,L1=Io({get:p1,set:E1});Object.defineProperty(i,Q,{enumerable:!0,configurable:!0,get:()=>L1.value,set:B1=>L1.value=B1})}if(o)for(const Q in o)Xl(o[Q],i,t,Q);if(l){const Q=a2(l)?l.call(t):l;Reflect.ownKeys(Q).forEach(V=>{wu(V,Q[V])})}u&&_4(u,n,"c");function Z(Q,V){t2(V)?V.forEach(p1=>Q(p1.bind(t))):V&&Q(V.bind(t))}if(Z(uu,h),Z(an,f),Z(Gl,p),Z(hu,v),Z(ou,_),Z(lu,m),Z(mu,L),Z(pu,I),Z(du,D),Z(Wl,b),Z(Ir,y),Z(fu,E),t2(C))if(C.length){const Q=n.exposed||(n.exposed={});C.forEach(V=>{Object.defineProperty(Q,V,{get:()=>t[V],set:p1=>t[V]=p1,enumerable:!0})})}else n.exposed||(n.exposed={});w&&n.render===ge&&(n.render=w),O!=null&&(n.inheritAttrs=O),G&&(n.components=G),X&&(n.directives=X),E&&kl(n)}function yu(n,e,t=ge){t2(n)&&(n=na(n));for(const i in n){const r=n[i];let s;I2(r)?"default"in r?s=Hi(r.from||i,r.default,!0):s=Hi(r.from||i):s=Hi(r),r3(s)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:a=>s.value=a}):e[i]=s}}function _4(n,e,t){Ie(t2(n)?n.map(i=>i.bind(e.proxy)):n.bind(e.proxy),e,t)}function Xl(n,e,t,i){let r=i.includes(".")?sc(t,i):()=>t[i];if($2(n)){const s=e[n];a2(s)&&N2(r,s)}else if(a2(n))N2(r,n.bind(t));else if(I2(n))if(t2(n))n.forEach(s=>Xl(s,e,t,i));else{const s=a2(n.handler)?n.handler.bind(t):e[n.handler];a2(s)&&N2(r,s,n)}}function ql(n){const e=n.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:a}}=n.appContext,o=s.get(e);let l;return o?l=o:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(c=>sr(l,c,a,!0)),sr(l,e,a)),I2(e)&&s.set(e,l),l}function sr(n,e,t,i=!1){const{mixins:r,extends:s}=e;s&&sr(n,s,t,!0),r&&r.forEach(a=>sr(n,a,t,!0));for(const a in e)if(!(i&&a==="expose")){const o=Mu[a]||t&&t[a];n[a]=o?o(n[a],e[a]):e[a]}return n}const Mu={data:g4,props:v4,emits:v4,methods:En,computed:En,beforeCreate:_3,created:_3,beforeMount:_3,mounted:_3,beforeUpdate:_3,updated:_3,beforeDestroy:_3,beforeUnmount:_3,destroyed:_3,unmounted:_3,activated:_3,deactivated:_3,errorCaptured:_3,serverPrefetch:_3,components:En,directives:En,watch:Eu,provide:g4,inject:Su};function g4(n,e){return e?n?function(){return m3(a2(n)?n.call(this,this):n,a2(e)?e.call(this,this):e)}:e:n}function Su(n,e){return En(na(n),na(e))}function na(n){if(t2(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function _3(n,e){return n?[...new Set([].concat(n,e))]:e}function En(n,e){return n?m3(Object.create(null),n,e):e}function v4(n,e){return n?t2(n)&&t2(e)?[...new Set([...n,...e])]:m3(Object.create(null),m4(n),m4(e??{})):e}function Eu(n,e){if(!n)return e;if(!e)return n;const t=m3(Object.create(null),n);for(const i in e)t[i]=_3(n[i],e[i]);return t}function $l(){return{app:null,config:{isNativeTag:ol,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let bu=0;function Tu(n,e){return function(i,r=null){a2(i)||(i=m3({},i)),r!=null&&!I2(r)&&(r=null);const s=$l(),a=new WeakSet,o=[];let l=!1;const c=s.app={_uid:bu++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:oh,get config(){return s.config},set config(u){},use(u,...h){return a.has(u)||(u&&a2(u.install)?(a.add(u),u.install(c,...h)):a2(u)&&(a.add(u),u(c,...h))),c},mixin(u){return s.mixins.includes(u)||s.mixins.push(u),c},component(u,h){return h?(s.components[u]=h,c):s.components[u]},directive(u,h){return h?(s.directives[u]=h,c):s.directives[u]},mount(u,h,f){if(!l){const p=c._ceVNode||d3(i,r);return p.appContext=s,f===!0?f="svg":f===!1&&(f=void 0),n(p,u,f),l=!0,c._container=u,u.__vue_app__=c,Po(p.component)}},onUnmount(u){o.push(u)},unmount(){l&&(Ie(o,c._instance,16),n(null,c._container),delete c._container.__vue_app__)},provide(u,h){return s.provides[u]=h,c},runWithContext(u){const h=z0;z0=c;try{return u()}finally{z0=h}}};return c}}let z0=null;function wu(n,e){if(y3){let t=y3.provides;const i=y3.parent&&y3.parent.provides;i===t&&(t=y3.provides=Object.create(i)),t[n]=e}}function Hi(n,e,t=!1){const i=uc();if(i||z0){let r=z0?z0._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(r&&n in r)return r[n];if(arguments.length>1)return t&&a2(e)?e.call(i&&i.proxy):e}}const Yl={},jl=()=>Object.create(Yl),Kl=n=>Object.getPrototypeOf(n)===Yl;function Au(n,e,t,i=!1){const r={},s=jl();n.propsDefaults=Object.create(null),Zl(n,e,r,s);for(const a in n.propsOptions[0])a in r||(r[a]=void 0);t?n.props=i?r:H5(r):n.type.props?n.props=r:n.props=s,n.attrs=s}function Cu(n,e,t,i){const{props:r,attrs:s,vnode:{patchFlag:a}}=n,o=x2(r),[l]=n.propsOptions;let c=!1;if((i||a>0)&&!(a&16)){if(a&8){const u=n.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(Dr(n.emitsOptions,f))continue;const p=e[f];if(l)if(M2(s,f))p!==s[f]&&(s[f]=p,c=!0);else{const v=bt(f);r[v]=ia(l,o,v,p,n,!1)}else p!==s[f]&&(s[f]=p,c=!0)}}}else{Zl(n,e,r,s)&&(c=!0);let u;for(const h in o)(!e||!M2(e,h)&&((u=c0(h))===h||!M2(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=ia(l,o,h,void 0,n,!0)):delete r[h]);if(s!==o)for(const h in s)(!e||!M2(e,h))&&(delete s[h],c=!0)}c&&Ke(n.attrs,"set","")}function Zl(n,e,t,i){const[r,s]=n.propsOptions;let a=!1,o;if(e)for(let l in e){if(An(l))continue;const c=e[l];let u;r&&M2(r,u=bt(l))?!s||!s.includes(u)?t[u]=c:(o||(o={}))[u]=c:Dr(n.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,a=!0)}if(s){const l=x2(t),c=o||L2;for(let u=0;u<s.length;u++){const h=s[u];t[h]=ia(r,l,h,c[h],n,!M2(c,h))}}return a}function ia(n,e,t,i,r,s){const a=n[t];if(a!=null){const o=M2(a,"default");if(o&&i===void 0){const l=a.default;if(a.type!==Function&&!a.skipFactory&&a2(l)){const{propsDefaults:c}=r;if(t in c)i=c[t];else{const u=ti(r);i=c[t]=l.call(null,e),u()}}else i=l;r.ce&&r.ce._setProp(t,i)}a[0]&&(s&&!o?i=!1:a[1]&&(i===""||i===c0(t))&&(i=!0))}return i}const Ru=new WeakMap;function Jl(n,e,t=!1){const i=t?Ru:e.propsCache,r=i.get(n);if(r)return r;const s=n.props,a={},o=[];let l=!1;if(!a2(n)){const u=h=>{l=!0;const[f,p]=Jl(h,e,!0);m3(a,f),p&&o.push(...p)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!s&&!l)return I2(n)&&i.set(n,U0),U0;if(t2(s))for(let u=0;u<s.length;u++){const h=bt(s[u]);x4(h)&&(a[h]=L2)}else if(s)for(const u in s){const h=bt(u);if(x4(h)){const f=s[u],p=a[h]=t2(f)||a2(f)?{type:f}:m3({},f),v=p.type;let _=!1,m=!0;if(t2(v))for(let d=0;d<v.length;++d){const b=v[d],T=a2(b)&&b.name;if(T==="Boolean"){_=!0;break}else T==="String"&&(m=!1)}else _=a2(v)&&v.name==="Boolean";p[0]=_,p[1]=m,(_||M2(p,"default"))&&o.push(h)}}const c=[a,o];return I2(n)&&i.set(n,c),c}function x4(n){return n[0]!=="$"&&!An(n)}const Co=n=>n==="_"||n==="_ctx"||n==="$stable",Ro=n=>t2(n)?n.map(Te):[Te(n)],Lu=(n,e,t)=>{if(e._n)return e;const i=nu((...r)=>Ro(e(...r)),t);return i._c=!1,i},Ql=(n,e,t)=>{const i=n._ctx;for(const r in n){if(Co(r))continue;const s=n[r];if(a2(s))e[r]=Lu(r,s,i);else if(s!=null){const a=Ro(s);e[r]=()=>a}}},ec=(n,e)=>{const t=Ro(e);n.slots.default=()=>t},tc=(n,e,t)=>{for(const i in e)(t||!Co(i))&&(n[i]=e[i])},Pu=(n,e,t)=>{const i=n.slots=jl();if(n.vnode.shapeFlag&32){const r=e._;r?(tc(i,e,t),t&&dl(i,"_",r,!0)):Ql(e,i)}else e&&ec(n,e)},Iu=(n,e,t)=>{const{vnode:i,slots:r}=n;let s=!0,a=L2;if(i.shapeFlag&32){const o=e._;o?t&&o===1?s=!1:tc(r,e,t):(s=!e.$stable,Ql(e,r)),a=e}else e&&(ec(n,e),a={default:1});if(s)for(const o in r)!Co(o)&&a[o]==null&&delete r[o]},B3=$u;function Du(n){return Uu(n)}function Uu(n,e){const t=Cr();t.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:a,createText:o,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:p=ge,insertStaticContent:v}=n,_=(F,M,j,i1=null,$=null,q=null,h1=void 0,k=null,l1=!!M.dynamicChildren)=>{if(F===M)return;F&&!mn(F,M)&&(i1=u1(F),B1(F,$,q,!0),F=null),M.patchFlag===-2&&(l1=!1,M.dynamicChildren=null);const{type:c1,ref:w1,shapeFlag:A}=M;switch(c1){case Ur:m(F,M,j,i1);break;case wt:d(F,M,j,i1);break;case Vi:F==null&&b(M,j,i1,h1);break;case fe:G(F,M,j,i1,$,q,h1,k,l1);break;default:A&1?w(F,M,j,i1,$,q,h1,k,l1):A&6?X(F,M,j,i1,$,q,h1,k,l1):(A&64||A&128)&&c1.process(F,M,j,i1,$,q,h1,k,l1,O1)}w1!=null&&$?Ln(w1,F&&F.ref,q,M||F,!M):w1==null&&F&&F.ref!=null&&Ln(F.ref,null,q,F,!0)},m=(F,M,j,i1)=>{if(F==null)i(M.el=o(M.children),j,i1);else{const $=M.el=F.el;M.children!==F.children&&c($,M.children)}},d=(F,M,j,i1)=>{F==null?i(M.el=l(M.children||""),j,i1):M.el=F.el},b=(F,M,j,i1)=>{[F.el,F.anchor]=v(F.children,M,j,i1,F.el,F.anchor)},T=({el:F,anchor:M},j,i1)=>{let $;for(;F&&F!==M;)$=f(F),i(F,j,i1),F=$;i(M,j,i1)},y=({el:F,anchor:M})=>{let j;for(;F&&F!==M;)j=f(F),r(F),F=j;r(M)},w=(F,M,j,i1,$,q,h1,k,l1)=>{M.type==="svg"?h1="svg":M.type==="math"&&(h1="mathml"),F==null?I(M,j,i1,$,q,h1,k,l1):E(F,M,$,q,h1,k,l1)},I=(F,M,j,i1,$,q,h1,k)=>{let l1,c1;const{props:w1,shapeFlag:A,transition:S,dirs:N}=F;if(l1=F.el=a(F.type,q,w1&&w1.is,w1),A&8?u(l1,F.children):A&16&&L(F.children,l1,null,i1,$,es(F,q),h1,k),N&&Ut(F,null,i1,"created"),D(l1,F,F.scopeId,h1,i1),w1){for(const o1 in w1)o1!=="value"&&!An(o1)&&s(l1,o1,null,w1[o1],q,i1);"value"in w1&&s(l1,"value",null,w1.value,q),(c1=w1.onVnodeBeforeMount)&&Se(c1,i1,F)}N&&Ut(F,null,i1,"beforeMount");const Y=Fu($,S);Y&&S.beforeEnter(l1),i(l1,M,j),((c1=w1&&w1.onVnodeMounted)||Y||N)&&B3(()=>{c1&&Se(c1,i1,F),Y&&S.enter(l1),N&&Ut(F,null,i1,"mounted")},$)},D=(F,M,j,i1,$)=>{if(j&&p(F,j),i1)for(let q=0;q<i1.length;q++)p(F,i1[q]);if($){let q=$.subTree;if(M===q||oc(q.type)&&(q.ssContent===M||q.ssFallback===M)){const h1=$.vnode;D(F,h1,h1.scopeId,h1.slotScopeIds,$.parent)}}},L=(F,M,j,i1,$,q,h1,k,l1=0)=>{for(let c1=l1;c1<F.length;c1++){const w1=F[c1]=k?dt(F[c1]):Te(F[c1]);_(null,w1,M,j,i1,$,q,h1,k)}},E=(F,M,j,i1,$,q,h1)=>{const k=M.el=F.el;let{patchFlag:l1,dynamicChildren:c1,dirs:w1}=M;l1|=F.patchFlag&16;const A=F.props||L2,S=M.props||L2;let N;if(j&&Ft(j,!1),(N=S.onVnodeBeforeUpdate)&&Se(N,j,M,F),w1&&Ut(M,F,j,"beforeUpdate"),j&&Ft(j,!0),(A.innerHTML&&S.innerHTML==null||A.textContent&&S.textContent==null)&&u(k,""),c1?C(F.dynamicChildren,c1,k,j,i1,es(M,$),q):h1||V(F,M,k,null,j,i1,es(M,$),q,!1),l1>0){if(l1&16)O(k,A,S,j,$);else if(l1&2&&A.class!==S.class&&s(k,"class",null,S.class,$),l1&4&&s(k,"style",A.style,S.style,$),l1&8){const Y=M.dynamicProps;for(let o1=0;o1<Y.length;o1++){const K=Y[o1],A1=A[K],_1=S[K];(_1!==A1||K==="value")&&s(k,K,A1,_1,$,j)}}l1&1&&F.children!==M.children&&u(k,M.children)}else!h1&&c1==null&&O(k,A,S,j,$);((N=S.onVnodeUpdated)||w1)&&B3(()=>{N&&Se(N,j,M,F),w1&&Ut(M,F,j,"updated")},i1)},C=(F,M,j,i1,$,q,h1)=>{for(let k=0;k<M.length;k++){const l1=F[k],c1=M[k],w1=l1.el&&(l1.type===fe||!mn(l1,c1)||l1.shapeFlag&198)?h(l1.el):j;_(l1,c1,w1,null,i1,$,q,h1,!0)}},O=(F,M,j,i1,$)=>{if(M!==j){if(M!==L2)for(const q in M)!An(q)&&!(q in j)&&s(F,q,M[q],null,$,i1);for(const q in j){if(An(q))continue;const h1=j[q],k=M[q];h1!==k&&q!=="value"&&s(F,q,k,h1,$,i1)}"value"in j&&s(F,"value",M.value,j.value,$)}},G=(F,M,j,i1,$,q,h1,k,l1)=>{const c1=M.el=F?F.el:o(""),w1=M.anchor=F?F.anchor:o("");let{patchFlag:A,dynamicChildren:S,slotScopeIds:N}=M;N&&(k=k?k.concat(N):N),F==null?(i(c1,j,i1),i(w1,j,i1),L(M.children||[],j,w1,$,q,h1,k,l1)):A>0&&A&64&&S&&F.dynamicChildren?(C(F.dynamicChildren,S,j,$,q,h1,k),(M.key!=null||$&&M===$.subTree)&&nc(F,M,!0)):V(F,M,j,w1,$,q,h1,k,l1)},X=(F,M,j,i1,$,q,h1,k,l1)=>{M.slotScopeIds=k,F==null?M.shapeFlag&512?$.ctx.activate(M,j,i1,h1,l1):s1(M,j,i1,$,q,h1,l1):e1(F,M,l1)},s1=(F,M,j,i1,$,q,h1)=>{const k=F.component=th(F,i1,$);if(Hl(F)&&(k.ctx.renderer=O1),nh(k,!1,h1),k.asyncDep){if($&&$.registerDep(k,Z,h1),!F.el){const l1=k.subTree=d3(wt);d(null,l1,M,j),F.placeholder=l1.el}}else Z(k,F,M,j,$,q,h1)},e1=(F,M,j)=>{const i1=M.component=F.component;if(Xu(F,M,j))if(i1.asyncDep&&!i1.asyncResolved){Q(i1,M,j);return}else i1.next=M,i1.update();else M.el=F.el,i1.vnode=M},Z=(F,M,j,i1,$,q,h1)=>{const k=()=>{if(F.isMounted){let{next:A,bu:S,u:N,parent:Y,vnode:o1}=F;{const I1=ic(F);if(I1){A&&(A.el=o1.el,Q(F,A,h1)),I1.asyncDep.then(()=>{F.isUnmounted||k()});return}}let K=A,A1;Ft(F,!1),A?(A.el=o1.el,Q(F,A,h1)):A=o1,S&&Yr(S),(A1=A.props&&A.props.onVnodeBeforeUpdate)&&Se(A1,Y,A,o1),Ft(F,!0);const _1=M4(F),P1=F.subTree;F.subTree=_1,_(P1,_1,h(P1.el),u1(P1),F,$,q),A.el=_1.el,K===null&&qu(F,_1.el),N&&B3(N,$),(A1=A.props&&A.props.onVnodeUpdated)&&B3(()=>Se(A1,Y,A,o1),$)}else{let A;const{el:S,props:N}=M,{bm:Y,m:o1,parent:K,root:A1,type:_1}=F,P1=Pn(M);Ft(F,!1),Y&&Yr(Y),!P1&&(A=N&&N.onVnodeBeforeMount)&&Se(A,K,M),Ft(F,!0);{A1.ce&&A1.ce._def.shadowRoot!==!1&&A1.ce._injectChildStyle(_1);const I1=F.subTree=M4(F);_(null,I1,j,i1,F,$,q),M.el=I1.el}if(o1&&B3(o1,$),!P1&&(A=N&&N.onVnodeMounted)){const I1=M;B3(()=>Se(A,K,I1),$)}(M.shapeFlag&256||K&&Pn(K.vnode)&&K.vnode.shapeFlag&256)&&F.a&&B3(F.a,$),F.isMounted=!0,M=j=i1=null}};F.scope.on();const l1=F.effect=new vl(k);F.scope.off();const c1=F.update=l1.run.bind(l1),w1=F.job=l1.runIfDirty.bind(l1);w1.i=F,w1.id=F.uid,l1.scheduler=()=>wo(w1),Ft(F,!0),c1()},Q=(F,M,j)=>{M.component=F;const i1=F.vnode.props;F.vnode=M,F.next=null,Cu(F,M.props,i1,j),Iu(F,M.children,j),et(),d4(F),tt()},V=(F,M,j,i1,$,q,h1,k,l1=!1)=>{const c1=F&&F.children,w1=F?F.shapeFlag:0,A=M.children,{patchFlag:S,shapeFlag:N}=M;if(S>0){if(S&128){E1(c1,A,j,i1,$,q,h1,k,l1);return}else if(S&256){p1(c1,A,j,i1,$,q,h1,k,l1);return}}N&8?(w1&16&&a1(c1,$,q),A!==c1&&u(j,A)):w1&16?N&16?E1(c1,A,j,i1,$,q,h1,k,l1):a1(c1,$,q,!0):(w1&8&&u(j,""),N&16&&L(A,j,i1,$,q,h1,k,l1))},p1=(F,M,j,i1,$,q,h1,k,l1)=>{F=F||U0,M=M||U0;const c1=F.length,w1=M.length,A=Math.min(c1,w1);let S;for(S=0;S<A;S++){const N=M[S]=l1?dt(M[S]):Te(M[S]);_(F[S],N,j,null,$,q,h1,k,l1)}c1>w1?a1(F,$,q,!0,!1,A):L(M,j,i1,$,q,h1,k,l1,A)},E1=(F,M,j,i1,$,q,h1,k,l1)=>{let c1=0;const w1=M.length;let A=F.length-1,S=w1-1;for(;c1<=A&&c1<=S;){const N=F[c1],Y=M[c1]=l1?dt(M[c1]):Te(M[c1]);if(mn(N,Y))_(N,Y,j,null,$,q,h1,k,l1);else break;c1++}for(;c1<=A&&c1<=S;){const N=F[A],Y=M[S]=l1?dt(M[S]):Te(M[S]);if(mn(N,Y))_(N,Y,j,null,$,q,h1,k,l1);else break;A--,S--}if(c1>A){if(c1<=S){const N=S+1,Y=N<w1?M[N].el:i1;for(;c1<=S;)_(null,M[c1]=l1?dt(M[c1]):Te(M[c1]),j,Y,$,q,h1,k,l1),c1++}}else if(c1>S)for(;c1<=A;)B1(F[c1],$,q,!0),c1++;else{const N=c1,Y=c1,o1=new Map;for(c1=Y;c1<=S;c1++){const z1=M[c1]=l1?dt(M[c1]):Te(M[c1]);z1.key!=null&&o1.set(z1.key,c1)}let K,A1=0;const _1=S-Y+1;let P1=!1,I1=0;const g1=new Array(_1);for(c1=0;c1<_1;c1++)g1[c1]=0;for(c1=N;c1<=A;c1++){const z1=F[c1];if(A1>=_1){B1(z1,$,q,!0);continue}let U1;if(z1.key!=null)U1=o1.get(z1.key);else for(K=Y;K<=S;K++)if(g1[K-Y]===0&&mn(z1,M[K])){U1=K;break}U1===void 0?B1(z1,$,q,!0):(g1[U1-Y]=c1+1,U1>=I1?I1=U1:P1=!0,_(z1,M[U1],j,null,$,q,h1,k,l1),A1++)}const T1=P1?Ou(g1):U0;for(K=T1.length-1,c1=_1-1;c1>=0;c1--){const z1=Y+c1,U1=M[z1],b1=M[z1+1],e2=z1+1<w1?b1.el||b1.placeholder:i1;g1[c1]===0?_(null,U1,j,e2,$,q,h1,k,l1):P1&&(K<0||c1!==T1[K]?L1(U1,j,e2,2):K--)}}},L1=(F,M,j,i1,$=null)=>{const{el:q,type:h1,transition:k,children:l1,shapeFlag:c1}=F;if(c1&6){L1(F.component.subTree,M,j,i1);return}if(c1&128){F.suspense.move(M,j,i1);return}if(c1&64){h1.move(F,M,j,O1);return}if(h1===fe){i(q,M,j);for(let A=0;A<l1.length;A++)L1(l1[A],M,j,i1);i(F.anchor,M,j);return}if(h1===Vi){T(F,M,j);return}if(i1!==2&&c1&1&&k)if(i1===0)k.beforeEnter(q),i(q,M,j),B3(()=>k.enter(q),$);else{const{leave:A,delayLeave:S,afterLeave:N}=k,Y=()=>{F.ctx.isUnmounted?r(q):i(q,M,j)},o1=()=>{q._isLeaving&&q[su](!0),A(q,()=>{Y(),N&&N()})};S?S(q,Y,o1):o1()}else i(q,M,j)},B1=(F,M,j,i1=!1,$=!1)=>{const{type:q,props:h1,ref:k,children:l1,dynamicChildren:c1,shapeFlag:w1,patchFlag:A,dirs:S,cacheIndex:N}=F;if(A===-2&&($=!1),k!=null&&(et(),Ln(k,null,j,F,!0),tt()),N!=null&&(M.renderCache[N]=void 0),w1&256){M.ctx.deactivate(F);return}const Y=w1&1&&S,o1=!Pn(F);let K;if(o1&&(K=h1&&h1.onVnodeBeforeUnmount)&&Se(K,M,F),w1&6)V1(F.component,j,i1);else{if(w1&128){F.suspense.unmount(j,i1);return}Y&&Ut(F,null,M,"beforeUnmount"),w1&64?F.type.remove(F,M,j,O1,i1):c1&&!c1.hasOnce&&(q!==fe||A>0&&A&64)?a1(c1,M,j,!1,!0):(q===fe&&A&384||!$&&w1&16)&&a1(l1,M,j),i1&&l2(F)}(o1&&(K=h1&&h1.onVnodeUnmounted)||Y)&&B3(()=>{K&&Se(K,M,F),Y&&Ut(F,null,M,"unmounted")},j)},l2=F=>{const{type:M,el:j,anchor:i1,transition:$}=F;if(M===fe){n2(j,i1);return}if(M===Vi){y(F);return}const q=()=>{r(j),$&&!$.persisted&&$.afterLeave&&$.afterLeave()};if(F.shapeFlag&1&&$&&!$.persisted){const{leave:h1,delayLeave:k}=$,l1=()=>h1(j,q);k?k(F.el,q,l1):l1()}else q()},n2=(F,M)=>{let j;for(;F!==M;)j=f(F),r(F),F=j;r(M)},V1=(F,M,j)=>{const{bum:i1,scope:$,job:q,subTree:h1,um:k,m:l1,a:c1}=F;y4(l1),y4(c1),i1&&Yr(i1),$.stop(),q&&(q.flags|=8,B1(h1,F,M,j)),k&&B3(k,M),B3(()=>{F.isUnmounted=!0},M)},a1=(F,M,j,i1=!1,$=!1,q=0)=>{for(let h1=q;h1<F.length;h1++)B1(F[h1],M,j,i1,$)},u1=F=>{if(F.shapeFlag&6)return u1(F.component.subTree);if(F.shapeFlag&128)return F.suspense.next();const M=f(F.anchor||F.el),j=M&&M[iu];return j?f(j):M};let M1=!1;const D1=(F,M,j)=>{F==null?M._vnode&&B1(M._vnode,null,null,!0):_(M._vnode||null,F,M,null,null,null,j),M._vnode=F,M1||(M1=!0,d4(),Nl(),M1=!1)},O1={p:_,um:B1,m:L1,r:l2,mt:s1,mc:L,pc:V,pbc:C,n:u1,o:n};return{render:D1,hydrate:void 0,createApp:Tu(D1)}}function es({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function Ft({effect:n,job:e},t){t?(n.flags|=32,e.flags|=4):(n.flags&=-33,e.flags&=-5)}function Fu(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function nc(n,e,t=!1){const i=n.children,r=e.children;if(t2(i)&&t2(r))for(let s=0;s<i.length;s++){const a=i[s];let o=r[s];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=r[s]=dt(r[s]),o.el=a.el),!t&&o.patchFlag!==-2&&nc(a,o)),o.type===Ur&&o.patchFlag!==-1&&(o.el=a.el),o.type===wt&&!o.el&&(o.el=a.el)}}function Ou(n){const e=n.slice(),t=[0];let i,r,s,a,o;const l=n.length;for(i=0;i<l;i++){const c=n[i];if(c!==0){if(r=t[t.length-1],n[r]<c){e[i]=r,t.push(i);continue}for(s=0,a=t.length-1;s<a;)o=s+a>>1,n[t[o]]<c?s=o+1:a=o;c<n[t[s]]&&(s>0&&(e[i]=t[s-1]),t[s]=i)}}for(s=t.length,a=t[s-1];s-- >0;)t[s]=a,a=e[a];return t}function ic(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:ic(e)}function y4(n){if(n)for(let e=0;e<n.length;e++)n[e].flags|=8}const Nu=Symbol.for("v-scx"),Bu=()=>Hi(Nu);function N2(n,e,t){return rc(n,e,t)}function rc(n,e,t=L2){const{immediate:i,deep:r,flush:s,once:a}=t,o=m3({},t),l=e&&i||!e&&s!=="post";let c;if(Hn){if(s==="sync"){const p=Bu();c=p.__watcherHandles||(p.__watcherHandles=[])}else if(!l){const p=()=>{};return p.stop=ge,p.resume=ge,p.pause=ge,p}}const u=y3;o.call=(p,v,_)=>Ie(p,u,v,_);let h=!1;s==="post"?o.scheduler=p=>{B3(p,u&&u.suspense)}:s!=="sync"&&(h=!0,o.scheduler=(p,v)=>{v?p():wo(p)}),o.augmentJob=p=>{e&&(p.flags|=4),h&&(p.flags|=2,u&&(p.id=u.uid,p.i=u))};const f=J5(n,e,o);return Hn&&(c?c.push(f):l&&f()),f}function zu(n,e,t){const i=this.proxy,r=$2(n)?n.includes(".")?sc(i,n):()=>i[n]:n.bind(i,i);let s;a2(e)?s=e:(s=e.handler,t=e);const a=ti(this),o=rc(r,s.bind(i),t);return a(),o}function sc(n,e){const t=e.split(".");return()=>{let i=n;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}const ku=(n,e)=>e==="modelValue"||e==="model-value"?n.modelModifiers:n[`${e}Modifiers`]||n[`${bt(e)}Modifiers`]||n[`${c0(e)}Modifiers`];function Hu(n,e,...t){if(n.isUnmounted)return;const i=n.vnode.props||L2;let r=t;const s=e.startsWith("update:"),a=s&&ku(i,e.slice(7));a&&(a.trim&&(r=t.map(u=>$2(u)?u.trim():u)),a.number&&(r=t.map(f5)));let o,l=i[o=$r(e)]||i[o=$r(bt(e))];!l&&s&&(l=i[o=$r(c0(e))]),l&&Ie(l,n,6,r);const c=i[o+"Once"];if(c){if(!n.emitted)n.emitted={};else if(n.emitted[o])return;n.emitted[o]=!0,Ie(c,n,6,r)}}const Vu=new WeakMap;function ac(n,e,t=!1){const i=t?Vu:e.emitsCache,r=i.get(n);if(r!==void 0)return r;const s=n.emits;let a={},o=!1;if(!a2(n)){const l=c=>{const u=ac(c,e,!0);u&&(o=!0,m3(a,u))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!s&&!o?(I2(n)&&i.set(n,null),null):(t2(s)?s.forEach(l=>a[l]=null):m3(a,s),I2(n)&&i.set(n,a),a)}function Dr(n,e){return!n||!Tr(e)?!1:(e=e.slice(2).replace(/Once$/,""),M2(n,e[0].toLowerCase()+e.slice(1))||M2(n,c0(e))||M2(n,e))}function M4(n){const{type:e,vnode:t,proxy:i,withProxy:r,propsOptions:[s],slots:a,attrs:o,emit:l,render:c,renderCache:u,props:h,data:f,setupState:p,ctx:v,inheritAttrs:_}=n,m=ir(n);let d,b;try{if(t.shapeFlag&4){const y=r||i,w=y;d=Te(c.call(w,y,u,h,p,f,v)),b=o}else{const y=e;d=Te(y.length>1?y(h,{attrs:o,slots:a,emit:l}):y(h,null)),b=e.props?o:Gu(o)}}catch(y){Dn.length=0,Lr(y,n,1),d=d3(wt)}let T=d;if(b&&_!==!1){const y=Object.keys(b),{shapeFlag:w}=T;y.length&&w&7&&(s&&y.some(mo)&&(b=Wu(b,s)),T=$0(T,b,!1,!0))}return t.dirs&&(T=$0(T,null,!1,!0),T.dirs=T.dirs?T.dirs.concat(t.dirs):t.dirs),t.transition&&Ao(T,t.transition),d=T,ir(m),d}const Gu=n=>{let e;for(const t in n)(t==="class"||t==="style"||Tr(t))&&((e||(e={}))[t]=n[t]);return e},Wu=(n,e)=>{const t={};for(const i in n)(!mo(i)||!(i.slice(9)in e))&&(t[i]=n[i]);return t};function Xu(n,e,t){const{props:i,children:r,component:s}=n,{props:a,children:o,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?S4(i,a,c):!!a;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(a[f]!==i[f]&&!Dr(c,f))return!0}}}else return(r||o)&&(!o||!o.$stable)?!0:i===a?!1:i?a?S4(i,a,c):!0:!!a;return!1}function S4(n,e,t){const i=Object.keys(e);if(i.length!==Object.keys(n).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(e[s]!==n[s]&&!Dr(t,s))return!0}return!1}function qu({vnode:n,parent:e},t){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===n&&(i.el=n.el),i===n)(n=e.vnode).el=t,e=e.parent;else break}}const oc=n=>n.__isSuspense;function $u(n,e){e&&e.pendingBranch?t2(n)?e.effects.push(...n):e.effects.push(n):Ol(n)}const fe=Symbol.for("v-fgt"),Ur=Symbol.for("v-txt"),wt=Symbol.for("v-cmt"),Vi=Symbol.for("v-stc"),Dn=[];let V3=null;function x3(n=!1){Dn.push(V3=n?null:[])}function Yu(){Dn.pop(),V3=Dn[Dn.length-1]||null}let kn=1;function ar(n,e=!1){kn+=n,n<0&&V3&&e&&(V3.hasOnce=!0)}function lc(n){return n.dynamicChildren=kn>0?V3||U0:null,Yu(),kn>0&&V3&&V3.push(n),n}function ee(n,e,t,i,r,s){return lc(q0(n,e,t,i,r,s,!0))}function ra(n,e,t,i,r){return lc(d3(n,e,t,i,r,!0))}function or(n){return n?n.__v_isVNode===!0:!1}function mn(n,e){return n.type===e.type&&n.key===e.key}const cc=({key:n})=>n??null,Gi=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?$2(n)||r3(n)||a2(n)?{i:Ce,r:n,k:e,f:!!t}:n:null);function q0(n,e=null,t=null,i=0,r=null,s=n===fe?0:1,a=!1,o=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&cc(e),ref:e&&Gi(e),scopeId:zl,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Ce};return o?(Lo(l,t),s&128&&n.normalize(l)):t&&(l.shapeFlag|=$2(t)?8:16),kn>0&&!a&&V3&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&V3.push(l),l}const d3=ju;function ju(n,e=null,t=null,i=0,r=null,s=!1){if((!n||n===_u)&&(n=wt),or(n)){const o=$0(n,e,!0);return t&&Lo(o,t),kn>0&&!s&&V3&&(o.shapeFlag&6?V3[V3.indexOf(n)]=o:V3.push(o)),o.patchFlag=-2,o}if(ah(n)&&(n=n.__vccOpts),e){e=Ku(e);let{class:o,style:l}=e;o&&!$2(o)&&(e.class=O0(o)),I2(l)&&(To(l)&&!t2(l)&&(l=m3({},l)),e.style=W3(l))}const a=$2(n)?1:oc(n)?128:ru(n)?64:I2(n)?4:a2(n)?2:0;return q0(n,e,t,i,r,a,s,!0)}function Ku(n){return n?To(n)||Kl(n)?m3({},n):n:null}function $0(n,e,t=!1,i=!1){const{props:r,ref:s,patchFlag:a,children:o,transition:l}=n,c=e?Ju(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:n.type,props:c,key:c&&cc(c),ref:e&&e.ref?t&&s?t2(s)?s.concat(Gi(e)):[s,Gi(e)]:Gi(e):s,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:o,target:n.target,targetStart:n.targetStart,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==fe?a===-1?16:a|16:a,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:l,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&$0(n.ssContent),ssFallback:n.ssFallback&&$0(n.ssFallback),placeholder:n.placeholder,el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce};return l&&i&&Ao(u,l.clone(u)),u}function Zu(n=" ",e=0){return d3(Ur,null,n,e)}function mi(n="",e=!1){return e?(x3(),ra(wt,null,n)):d3(wt,null,n)}function Te(n){return n==null||typeof n=="boolean"?d3(wt):t2(n)?d3(fe,null,n.slice()):or(n)?dt(n):d3(Ur,null,String(n))}function dt(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:$0(n)}function Lo(n,e){let t=0;const{shapeFlag:i}=n;if(e==null)e=null;else if(t2(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),Lo(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!Kl(e)?e._ctx=Ce:r===3&&Ce&&(Ce.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else a2(e)?(e={default:e,_ctx:Ce},t=32):(e=String(e),i&64?(t=16,e=[Zu(e)]):t=8);n.children=e,n.shapeFlag|=t}function Ju(...n){const e={};for(let t=0;t<n.length;t++){const i=n[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=O0([e.class,i.class]));else if(r==="style")e.style=W3([e.style,i.style]);else if(Tr(r)){const s=e[r],a=i[r];a&&s!==a&&!(t2(s)&&s.includes(a))&&(e[r]=s?[].concat(s,a):a)}else r!==""&&(e[r]=i[r])}return e}function Se(n,e,t,i=null){Ie(n,e,7,[t,i])}const Qu=$l();let eh=0;function th(n,e,t){const i=n.type,r=(e?e.appContext:n.appContext)||Qu,s={uid:eh++,vnode:n,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new y5(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Jl(i,r),emitsOptions:ac(i,r),emit:null,emitted:null,propsDefaults:L2,inheritAttrs:i.inheritAttrs,ctx:L2,data:L2,props:L2,attrs:L2,slots:L2,refs:L2,setupState:L2,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=Hu.bind(null,s),n.ce&&n.ce(s),s}let y3=null;const uc=()=>y3||Ce;let lr,sa;{const n=Cr(),e=(t,i)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(i),s=>{r.length>1?r.forEach(a=>a(s)):r[0](s)}};lr=e("__VUE_INSTANCE_SETTERS__",t=>y3=t),sa=e("__VUE_SSR_SETTERS__",t=>Hn=t)}const ti=n=>{const e=y3;return lr(n),n.scope.on(),()=>{n.scope.off(),lr(e)}},E4=()=>{y3&&y3.scope.off(),lr(null)};function hc(n){return n.vnode.shapeFlag&4}let Hn=!1;function nh(n,e=!1,t=!1){e&&sa(e);const{props:i,children:r}=n.vnode,s=hc(n);Au(n,i,s,e),Pu(n,r,t||e);const a=s?ih(n,e):void 0;return e&&sa(!1),a}function ih(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=new Proxy(n.ctx,vu);const{setup:i}=t;if(i){et();const r=n.setupContext=i.length>1?sh(n):null,s=ti(n),a=ei(i,n,0,[n.props,r]),o=cl(a);if(tt(),s(),(o||n.sp)&&!Pn(n)&&kl(n),o){if(a.then(E4,E4),e)return a.then(l=>{b4(n,l)}).catch(l=>{Lr(l,n,0)});n.asyncDep=a}else b4(n,a)}else fc(n)}function b4(n,e,t){a2(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:I2(e)&&(n.setupState=Dl(e)),fc(n)}function fc(n,e,t){const i=n.type;n.render||(n.render=i.render||ge);{const r=ti(n);et();try{xu(n)}finally{tt(),r()}}}const rh={get(n,e){return h3(n,"get",""),n[e]}};function sh(n){const e=t=>{n.exposed=t||{}};return{attrs:new Proxy(n.attrs,rh),slots:n.slots,emit:n.emit,expose:e}}function Po(n){return n.exposed?n.exposeProxy||(n.exposeProxy=new Proxy(Dl(V5(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in In)return In[t](n)},has(e,t){return t in e||t in In}})):n.proxy}function ah(n){return a2(n)&&"__vccOpts"in n}const Io=(n,e)=>K5(n,e,Hn);function T4(n,e,t){try{ar(-1);const i=arguments.length;return i===2?I2(e)&&!t2(e)?or(e)?d3(n,null,[e]):d3(n,e):d3(n,null,e):(i>3?t=Array.prototype.slice.call(arguments,2):i===3&&or(t)&&(t=[t]),d3(n,e,t))}finally{ar(1)}}const oh="3.5.22";/**
* @vue/runtime-dom v3.5.22
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let aa;const w4=typeof window<"u"&&window.trustedTypes;if(w4)try{aa=w4.createPolicy("vue",{createHTML:n=>n})}catch{}const dc=aa?n=>aa.createHTML(n):n=>n,lh="http://www.w3.org/2000/svg",ch="http://www.w3.org/1998/Math/MathML",$e=typeof document<"u"?document:null,A4=$e&&$e.createElement("template"),uh={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,i)=>{const r=e==="svg"?$e.createElementNS(lh,n):e==="mathml"?$e.createElementNS(ch,n):t?$e.createElement(n,{is:t}):$e.createElement(n);return n==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:n=>$e.createTextNode(n),createComment:n=>$e.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>$e.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,i,r,s){const a=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{A4.innerHTML=dc(i==="svg"?`<svg>${n}</svg>`:i==="mathml"?`<math>${n}</math>`:n);const o=A4.content;if(i==="svg"||i==="mathml"){const l=o.firstChild;for(;l.firstChild;)o.appendChild(l.firstChild);o.removeChild(l)}e.insertBefore(o,t)}return[a?a.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},hh=Symbol("_vtc");function fh(n,e,t){const i=n[hh];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const C4=Symbol("_vod"),dh=Symbol("_vsh"),pc=Symbol("");function ph(n){const e=uc();if(!e)return;const t=e.ut=(r=n(e.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${e.uid}"]`)).forEach(s=>cr(s,r))},i=()=>{const r=n(e.proxy);e.ce?cr(e.ce,r):oa(e.subTree,r),t(r)};Gl(()=>{Ol(i)}),an(()=>{N2(i,ge,{flush:"post"});const r=new MutationObserver(i);r.observe(e.subTree.el.parentNode,{childList:!0}),Ir(()=>r.disconnect())})}function oa(n,e){if(n.shapeFlag&128){const t=n.suspense;n=t.activeBranch,t.pendingBranch&&!t.isHydrating&&t.effects.push(()=>{oa(t.activeBranch,e)})}for(;n.component;)n=n.component.subTree;if(n.shapeFlag&1&&n.el)cr(n.el,e);else if(n.type===fe)n.children.forEach(t=>oa(t,e));else if(n.type===Vi){let{el:t,anchor:i}=n;for(;t&&(cr(t,e),t!==i);)t=t.nextSibling}}function cr(n,e){if(n.nodeType===1){const t=n.style;let i="";for(const r in e){const s=x5(e[r]);t.setProperty(`--${r}`,s),i+=`--${r}: ${s};`}t[pc]=i}}const mh=/(?:^|;)\s*display\s*:/;function _h(n,e,t){const i=n.style,r=$2(t);let s=!1;if(t&&!r){if(e)if($2(e))for(const a of e.split(";")){const o=a.slice(0,a.indexOf(":")).trim();t[o]==null&&Wi(i,o,"")}else for(const a in e)t[a]==null&&Wi(i,a,"");for(const a in t)a==="display"&&(s=!0),Wi(i,a,t[a])}else if(r){if(e!==t){const a=i[pc];a&&(t+=";"+a),i.cssText=t,s=mh.test(t)}}else e&&n.removeAttribute("style");C4 in n&&(n[C4]=s?i.display:"",n[dh]&&(i.display="none"))}const R4=/\s*!important$/;function Wi(n,e,t){if(t2(t))t.forEach(i=>Wi(n,e,i));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const i=gh(n,e);R4.test(t)?n.setProperty(c0(i),t.replace(R4,""),"important"):n[i]=t}}const L4=["Webkit","Moz","ms"],ts={};function gh(n,e){const t=ts[e];if(t)return t;let i=bt(e);if(i!=="filter"&&i in n)return ts[e]=i;i=fl(i);for(let r=0;r<L4.length;r++){const s=L4[r]+i;if(s in n)return ts[e]=s}return e}const P4="http://www.w3.org/1999/xlink";function I4(n,e,t,i,r,s=v5(e)){i&&e.startsWith("xlink:")?t==null?n.removeAttributeNS(P4,e.slice(6,e.length)):n.setAttributeNS(P4,e,t):t==null||s&&!pl(t)?n.removeAttribute(e):n.setAttribute(e,s?"":Pt(t)?String(t):t)}function D4(n,e,t,i,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(n[e]=e==="innerHTML"?dc(t):t);return}const s=n.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const o=s==="OPTION"?n.getAttribute("value")||"":n.value,l=t==null?n.type==="checkbox"?"on":"":String(t);(o!==l||!("_value"in n))&&(n.value=l),t==null&&n.removeAttribute(e),n._value=t;return}let a=!1;if(t===""||t==null){const o=typeof n[e];o==="boolean"?t=pl(t):t==null&&o==="string"?(t="",a=!0):o==="number"&&(t=0,a=!0)}try{n[e]=t}catch{}a&&n.removeAttribute(r||e)}function vh(n,e,t,i){n.addEventListener(e,t,i)}function xh(n,e,t,i){n.removeEventListener(e,t,i)}const U4=Symbol("_vei");function yh(n,e,t,i,r=null){const s=n[U4]||(n[U4]={}),a=s[e];if(i&&a)a.value=i;else{const[o,l]=Mh(e);if(i){const c=s[e]=bh(i,r);vh(n,o,c,l)}else a&&(xh(n,o,a,l),s[e]=void 0)}}const F4=/(?:Once|Passive|Capture)$/;function Mh(n){let e;if(F4.test(n)){e={};let i;for(;i=n.match(F4);)n=n.slice(0,n.length-i[0].length),e[i[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):c0(n.slice(2)),e]}let ns=0;const Sh=Promise.resolve(),Eh=()=>ns||(Sh.then(()=>ns=0),ns=Date.now());function bh(n,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;Ie(Th(i,t.value),e,5,[i])};return t.value=n,t.attached=Eh(),t}function Th(n,e){if(t2(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const O4=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,wh=(n,e,t,i,r,s)=>{const a=r==="svg";e==="class"?fh(n,i,a):e==="style"?_h(n,t,i):Tr(e)?mo(e)||yh(n,e,t,i,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):Ah(n,e,i,a))?(D4(n,e,i),!n.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&I4(n,e,i,a,s,e!=="value")):n._isVueCE&&(/[A-Z]/.test(e)||!$2(i))?D4(n,bt(e),i,s,e):(e==="true-value"?n._trueValue=i:e==="false-value"&&(n._falseValue=i),I4(n,e,i,a))};function Ah(n,e,t,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in n&&O4(e)&&a2(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return O4(e)&&$2(t)?!1:e in n}const Ch=m3({patchProp:wh},uh);let N4;function Rh(){return N4||(N4=Du(Ch))}const Lh=((...n)=>{const e=Rh().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=Ih(i);if(!r)return;const s=e._component;!a2(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const a=t(r,!1,Ph(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},e});function Ph(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function Ih(n){return $2(n)?document.querySelector(n):n}const ur={themeId:"matrix",displayName:"The Matrix",pageTitle:"💊Follow the white rabbit🐰",favicon:"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Crect width='32' height='32' fill='%23000'/%3E%3Cg%3E%3Ctext x='3' y='0' font-family='monospace' font-size='5' fill='%2300ff41'%3E66%3C/text%3E%3Ctext x='3' y='8' font-family='monospace' font-size='5' fill='%2300ff41'%3E6f%3C/text%3E%3Ctext x='3' y='16' font-family='monospace' font-size='5' fill='%2300ff41'%3E6c%3C/text%3E%3Ctext x='3' y='24' font-family='monospace' font-size='5' fill='%2300ff41'%3E6c%3C/text%3E%3CanimateTransform attributeName='transform' type='translate' values='0 -40; 0 40' dur='3s' repeatCount='indefinite'/%3E%3C/g%3E%3Cg%3E%3Ctext x='10' y='0' font-family='monospace' font-size='5' fill='%2300ff41'%3E6f%3C/text%3E%3Ctext x='10' y='8' font-family='monospace' font-size='5' fill='%2300ff41'%3E77%3C/text%3E%3Ctext x='10' y='16' font-family='monospace' font-size='5' fill='%2300ff41'%3E20%3C/text%3E%3Ctext x='10' y='24' font-family='monospace' font-size='5' fill='%2300ff41'%3E74%3C/text%3E%3CanimateTransform attributeName='transform' type='translate' values='0 -40; 0 40' dur='3.5s' begin='0.5s' repeatCount='indefinite'/%3E%3C/g%3E%3Cg%3E%3Ctext x='18' y='0' font-family='monospace' font-size='5' fill='%2300ff41'%3E68%3C/text%3E%3Ctext x='18' y='8' font-family='monospace' font-size='5' fill='%2300ff41'%3E65%3C/text%3E%3Ctext x='18' y='16' font-family='monospace' font-size='5' fill='%2300ff41'%3E20%3C/text%3E%3Ctext x='18' y='24' font-family='monospace' font-size='5' fill='%2300ff41'%3E77%3C/text%3E%3CanimateTransform attributeName='transform' type='translate' values='0 -40; 0 40' dur='2.8s' begin='1s' repeatCount='indefinite'/%3E%3C/g%3E%3Cg%3E%3Ctext x='26' y='0' font-family='monospace' font-size='5' fill='%2300ff41'%3E68%3C/text%3E%3Ctext x='26' y='8' font-family='monospace' font-size='5' fill='%2300ff41'%3E69%3C/text%3E%3Ctext x='26' y='16' font-family='monospace' font-size='5' fill='%2300ff41'%3E74%3C/text%3E%3Ctext x='26' y='24' font-family='monospace' font-size='5' fill='%2300ff41'%3E65%3C/text%3E%3CanimateTransform attributeName='transform' type='translate' values='0 -40; 0 40' dur='3.2s' begin='1.5s' repeatCount='indefinite'/%3E%3C/g%3E%3C/svg%3E",colors:{background:"#000",primary:"#00ff41",accent:"#008F11"},font:{family:"'Courier New', monospace",size:"16px"},searchBar:{iconSvg:'<?xml version="1.0" encoding="UTF-8"?><svg id="morpheusIcon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 213.35 270.37" role="img" aria-label="Morpheus face"><g id="Layer_1-2" transform="translate(42.67, 54.074) scale(0.6)"><path d="M20.94,115.6S7.95,7.15,108.03,4.03c0,0,90.34-5.19,84.39,111.57,0,0,21.64-7.78,16.77,15.05s-2.16,39.96-17.31,45.15c0,0-6.49-4.15-7.03,35.29,0,0,3.25,17.64-43.28,46.7,0,0-30.29,16.61-58.97,3.63-28.67-12.97-35.7-26.98-42.2-31.13-6.49-4.15-12.44-17.64-14.07-46.7,0,0,4.87-5.71-6.49-6.75S-.16,121.31,7.41,118.19s9.74,3.11,13.52-2.59Z" style="fill:#a68268;"/><path d="M80.59,16.57l2.09,92.12s1.56,4.07-15.64,16.8,8.86,26.47,8.86,26.47c0,0,20.34-17.81,29.72-7.63l1.56,20.87s9,6.91,7.35,11.05-4.71,8.74-11.31,7.82c-6.6-.92-11.08-5.75-16.5-2.76s11.78,9.43,16.26,9.66,3.53,14.95,3.53,14.95l1.18,23s15.32-.92,15.79,14.03c.47,14.95-13.67,11.04-17.91,10.81-4.24-.23-22.15,1.38-21.44,9.89.71,8.51,60.56,5.78,73.99-17.21v-44.88s-4.48-5.29,6.6-15.41c11.08-10.12,13.67-14.49,13.67-14.49,0,0,4.48-5.06,5.66-31.28,1.18-26.22,7.96-63.05-2.38-81.83C171.33,39.74,126.84-.72,80.59,16.57Z" style="fill:#9a7960;"/><path d="M25.61,116.12s6.04-1.97,4.89,41.55c0,0-2.3,4.77,8.05,12.35s16.11,12.91,16.4,32.85-2.01,31.16,1.44,38.46c0,0-25.31-8.98-31.93-55.03-6.62-46.04-1.15-7.59-1.15-7.59,0,0-33.66-35.37-14.67-59.23,0,0,6.62-9.55,16.97-3.37Z" style="fill:#9a7960;"/><path d="M77.27,209.69s22.34-17.94,28.7-6.9c0,0,10.89-9.94,26.16,5.8,0,0,1.7,8-9.9,14.08h-32.24s-6.79-.55-12.73-12.97Z" style="fill:#8b6b56;"/><path d="M184.07,114.59c-.65.43-1.05,1.15-1.09,1.93l-1.93,44.65s1.7.28-5.66,8.01c-7.35,7.73-13.57,8-16.68,20.7-2.97,12.11-.4,43.8-.16,46.71.01.15.04.28.08.43l1.21,4.48s24.44-9.29,26.54-52.57c.01-.25.02-.49-.03-.73-.27-1.42-.95-7.28,5.73-10.17,7.64-3.31,18.95-49.13,13.86-57.41-4.82-7.84-15.47-10.24-21.87-6.02Z" style="fill:#8b6b56;"/><path d="M84.72,180.37s3.68-1.12,7.36,0,11.09,10.77,23.94,2.24c0,0,3.19-3.82,10.78-1.8" style="fill:none; stroke:#624949; stroke-linecap:round; stroke-miterlimit:10; stroke-width:5px;"/><path d="M80.3,210.31s14.97-4.69,25.67.8c0,0,11.51-4.42,24.71-1.34" style="fill:none; stroke:#624949; stroke-linecap:round; stroke-linejoin:round; stroke-width:5px;"/><path d="M20.38,115.6S7.39,7.15,107.47,4.03c0,0,90.34-5.19,84.39,111.57,0,0,21.64-7.78,16.77,15.05-4.87,22.83-2.16,39.96-17.31,45.15,0,0-6.49-4.15-7.03,35.29,0,0,3.25,17.64-43.28,46.7,0,0-30.29,16.61-58.97,3.63-28.67-12.97-35.7-26.98-42.2-31.13-6.49-4.15-12.44-17.64-14.07-46.7,0,0,4.87-5.71-6.49-6.75-11.36-1.04-20.02-55.52-12.44-58.64s9.74,3.11,13.52-2.59Z" style="fill:none; stroke:#231f20; stroke-linejoin:round; stroke-width:8px;"/><ellipse cx="69.33" cy="139.67" rx="27.85" ry="21.32" style="fill:#333;"/><ellipse cx="144.26" cy="139.67" rx="27.85" ry="21.32" style="fill:#333;"/><path d="M88.98,136.7s17.82-16.28,34.78,0" style="fill:none; stroke:#333; stroke-miterlimit:10; stroke-width:8px;"/><ellipse cx="75.69" cy="150.36" rx="10.75" ry="5.66" style="fill:#4c4848;"/><ellipse cx="149.35" cy="151.74" rx="10.75" ry="5.66" style="fill:#4c4848;"/></g></svg>',placeholder:{initialText:"Search the Matrix...",phrases:["You're here because you search something."," What you search you can't explain, but you feel it."," It is this feeling that has brought you to me."," Do you know what I'm talking about?"],typingSpeed:45}},backgroundAnimation:{init:function(n,e){const t=n.getContext("2d");n.width=window.innerWidth,n.height=window.innerHeight;const i=16;let r=Math.floor(n.width/i),s=[],a=[];for(let h=0;h<r;h++)s[h]=1,a[h]=Math.random()*8+12;window.addEventListener("resize",()=>{n.width=window.innerWidth,n.height=window.innerHeight,r=Math.floor(n.width/i),s=[],a=[];for(let h=0;h<r;h++)s[h]=1,a[h]=Math.random()*8+12});const o="アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",l=["#00FF41","#008F11","#003B00","#0D0208"];function c(){t.fillStyle="rgba(0,0,0,0.02)",t.fillRect(0,0,n.width,n.height);for(let h=0;h<s.length;h++){const f=o[Math.floor(Math.random()*o.length)],p=Math.floor(s[h]*l.length/n.height);t.fillStyle=l[Math.min(p,l.length-1)],t.font=a[h]+"px monospace",t.fillText(f,h*i,s[h]*a[h]),s[h]*a[h]>n.height&&Math.random()>.975&&(s[h]=0),s[h]+=.5}}const u=setInterval(c,50);this.destroy=function(){clearInterval(u)}},destroy:function(){}},additionalElements:[]};/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Do="180",Dh=0,B4=1,Uh=2,mc=1,Fh=2,qe=3,At=0,C3=1,Ze=2,yt=0,k0=1,la=2,z4=3,k4=4,Oh=5,jt=100,Nh=101,Bh=102,zh=103,kh=104,Hh=200,Vh=201,Gh=202,Wh=203,ca=204,ua=205,Xh=206,qh=207,$h=208,Yh=209,jh=210,Kh=211,Zh=212,Jh=213,Qh=214,ha=0,fa=1,da=2,Y0=3,pa=4,ma=5,_a=6,ga=7,Uo=0,ef=1,tf=2,Mt=0,nf=1,rf=2,sf=3,af=4,of=5,lf=6,cf=7,_c=300,j0=301,K0=302,va=303,xa=304,Fr=306,ya=1e3,Jt=1001,Ma=1002,xe=1003,uf=1004,_i=1005,Re=1006,is=1007,Qt=1008,De=1009,gc=1010,vc=1011,Vn=1012,Fo=1013,a0=1014,Je=1015,ni=1016,Oo=1017,No=1018,Gn=1020,xc=35902,yc=35899,Mc=1021,Sc=1022,_e=1023,Wn=1026,Xn=1027,Ec=1028,Bo=1029,bc=1030,zo=1031,ko=1033,Xi=33776,qi=33777,$i=33778,Yi=33779,Sa=35840,Ea=35841,ba=35842,Ta=35843,wa=36196,Aa=37492,Ca=37496,Ra=37808,La=37809,Pa=37810,Ia=37811,Da=37812,Ua=37813,Fa=37814,Oa=37815,Na=37816,Ba=37817,za=37818,ka=37819,Ha=37820,Va=37821,Ga=36492,Wa=36494,Xa=36495,qa=36283,$a=36284,Ya=36285,ja=36286,hf=3200,ff=3201,Tc=0,df=1,mt="",Z3="srgb",Z0="srgb-linear",hr="linear",E2="srgb",m0=7680,H4=519,pf=512,mf=513,_f=514,wc=515,gf=516,vf=517,xf=518,yf=519,V4=35044,G4="300 es",Le=2e3,fr=2001;class on{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const r=i[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const c3=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],rs=Math.PI/180,Ka=180/Math.PI;function ii(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(c3[n&255]+c3[n>>8&255]+c3[n>>16&255]+c3[n>>24&255]+"-"+c3[e&255]+c3[e>>8&255]+"-"+c3[e>>16&15|64]+c3[e>>24&255]+"-"+c3[t&63|128]+c3[t>>8&255]+"-"+c3[t>>16&255]+c3[t>>24&255]+c3[i&255]+c3[i>>8&255]+c3[i>>16&255]+c3[i>>24&255]).toLowerCase()}function u2(n,e,t){return Math.max(e,Math.min(t,n))}function Mf(n,e){return(n%e+e)%e}function ss(n,e,t){return(1-t)*n+t*e}function _n(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function w3(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class y2{constructor(e=0,t=0){y2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=u2(this.x,e.x,t.x),this.y=u2(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=u2(this.x,e,t),this.y=u2(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(u2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(u2(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ri{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,a,o){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=s[a+0],p=s[a+1],v=s[a+2],_=s[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=f,e[t+1]=p,e[t+2]=v,e[t+3]=_;return}if(h!==_||l!==f||c!==p||u!==v){let m=1-o;const d=l*f+c*p+u*v+h*_,b=d>=0?1:-1,T=1-d*d;if(T>Number.EPSILON){const w=Math.sqrt(T),I=Math.atan2(w,d*b);m=Math.sin(m*I)/w,o=Math.sin(o*I)/w}const y=o*b;if(l=l*m+f*y,c=c*m+p*y,u=u*m+v*y,h=h*m+_*y,m===1-o){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,r,s,a){const o=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[a],f=s[a+1],p=s[a+2],v=s[a+3];return e[t]=o*v+u*h+l*p-c*f,e[t+1]=l*v+u*f+c*h-o*p,e[t+2]=c*v+u*p+o*f-l*h,e[t+3]=u*v-o*h-l*f-c*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),u=o(r/2),h=o(s/2),f=l(i/2),p=l(r/2),v=l(s/2);switch(a){case"XYZ":this._x=f*u*h+c*p*v,this._y=c*p*h-f*u*v,this._z=c*u*v+f*p*h,this._w=c*u*h-f*p*v;break;case"YXZ":this._x=f*u*h+c*p*v,this._y=c*p*h-f*u*v,this._z=c*u*v-f*p*h,this._w=c*u*h+f*p*v;break;case"ZXY":this._x=f*u*h-c*p*v,this._y=c*p*h+f*u*v,this._z=c*u*v+f*p*h,this._w=c*u*h-f*p*v;break;case"ZYX":this._x=f*u*h-c*p*v,this._y=c*p*h+f*u*v,this._z=c*u*v-f*p*h,this._w=c*u*h+f*p*v;break;case"YZX":this._x=f*u*h+c*p*v,this._y=c*p*h+f*u*v,this._z=c*u*v-f*p*h,this._w=c*u*h-f*p*v;break;case"XZY":this._x=f*u*h-c*p*v,this._y=c*p*h-f*u*v,this._z=c*u*v+f*p*h,this._w=c*u*h+f*p*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=i+o+h;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(u-l)*p,this._y=(s-c)*p,this._z=(a-r)*p}else if(i>o&&i>h){const p=2*Math.sqrt(1+i-o-h);this._w=(u-l)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(s+c)/p}else if(o>h){const p=2*Math.sqrt(1+o-i-h);this._w=(s-c)/p,this._x=(r+a)/p,this._y=.25*p,this._z=(l+u)/p}else{const p=2*Math.sqrt(1+h-i-o);this._w=(a-r)/p,this._x=(s+c)/p,this._y=(l+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(u2(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+a*o+r*c-s*l,this._y=r*u+a*l+s*o-i*c,this._z=s*u+a*c+i*l-r*o,this._w=a*u-i*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-t;return this._w=p*a+t*this._w,this._x=p*i+t*this._x,this._y=p*r+t*this._y,this._z=p*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=a*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class J{constructor(e=0,t=0,i=0){J.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(W4.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(W4.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=2*(a*r-o*i),u=2*(o*t-s*r),h=2*(s*i-a*t);return this.x=t+l*c+a*h-o*u,this.y=i+l*u+o*c-s*h,this.z=r+l*h+s*u-a*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=u2(this.x,e.x,t.x),this.y=u2(this.y,e.y,t.y),this.z=u2(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=u2(this.x,e,t),this.y=u2(this.y,e,t),this.z=u2(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(u2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return as.copy(this).projectOnVector(e),this.sub(as)}reflect(e){return this.sub(as.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(u2(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const as=new J,W4=new ri;class s2{constructor(e,t,i,r,s,a,o,l,c){s2.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,a,o,l,c)}set(e,t,i,r,s,a,o,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=o,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],p=i[5],v=i[8],_=r[0],m=r[3],d=r[6],b=r[1],T=r[4],y=r[7],w=r[2],I=r[5],D=r[8];return s[0]=a*_+o*b+l*w,s[3]=a*m+o*T+l*I,s[6]=a*d+o*y+l*D,s[1]=c*_+u*b+h*w,s[4]=c*m+u*T+h*I,s[7]=c*d+u*y+h*D,s[2]=f*_+p*b+v*w,s[5]=f*m+p*T+v*I,s[8]=f*d+p*y+v*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-i*s*u+i*o*l+r*s*c-r*a*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=u*a-o*c,f=o*l-u*s,p=c*s-a*l,v=t*h+i*f+r*p;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/v;return e[0]=h*_,e[1]=(r*c-u*i)*_,e[2]=(o*i-r*a)*_,e[3]=f*_,e[4]=(u*t-r*l)*_,e[5]=(r*s-o*t)*_,e[6]=p*_,e[7]=(i*l-c*t)*_,e[8]=(a*t-i*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(os.makeScale(e,t)),this}rotate(e){return this.premultiply(os.makeRotation(-e)),this}translate(e,t){return this.premultiply(os.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const os=new s2;function Ac(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function dr(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Sf(){const n=dr("canvas");return n.style.display="block",n}const X4={};function qn(n){n in X4||(X4[n]=!0,console.warn(n))}function Ef(n,e,t){return new Promise(function(i,r){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const q4=new s2().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),$4=new s2().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function bf(){const n={enabled:!0,workingColorSpace:Z0,spaces:{},convert:function(r,s,a){return this.enabled===!1||s===a||!s||!a||(this.spaces[s].transfer===E2&&(r.r=Qe(r.r),r.g=Qe(r.g),r.b=Qe(r.b)),this.spaces[s].primaries!==this.spaces[a].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===E2&&(r.r=H0(r.r),r.g=H0(r.g),r.b=H0(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===mt?hr:this.spaces[r].transfer},getToneMappingMode:function(r){return this.spaces[r].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,a){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return qn("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),n.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return qn("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),n.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return n.define({[Z0]:{primaries:e,whitePoint:i,transfer:hr,toXYZ:q4,fromXYZ:$4,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Z3},outputColorSpaceConfig:{drawingBufferColorSpace:Z3}},[Z3]:{primaries:e,whitePoint:i,transfer:E2,toXYZ:q4,fromXYZ:$4,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Z3}}}),n}const m2=bf();function Qe(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function H0(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let _0;class Tf{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{_0===void 0&&(_0=dr("canvas")),_0.width=e.width,_0.height=e.height;const r=_0.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),i=_0}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=dr("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=Qe(s[a]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Qe(t[i]/255)*255):t[i]=Qe(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let wf=0;class Ho{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:wf++}),this.uuid=ii(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(ls(r[a].image)):s.push(ls(r[a]))}else s=ls(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function ls(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Tf.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Af=0;const cs=new J;class S3 extends on{constructor(e=S3.DEFAULT_IMAGE,t=S3.DEFAULT_MAPPING,i=Jt,r=Jt,s=Re,a=Qt,o=_e,l=De,c=S3.DEFAULT_ANISOTROPY,u=mt){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Af++}),this.uuid=ii(),this.name="",this.source=new Ho(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new y2(0,0),this.repeat=new y2(1,1),this.center=new y2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new s2,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(cs).x}get height(){return this.source.getSize(cs).y}get depth(){return this.source.getSize(cs).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&i&&r.isVector2&&i.isVector2||r&&i&&r.isVector3&&i.isVector3||r&&i&&r.isMatrix3&&i.isMatrix3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==_c)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ya:e.x=e.x-Math.floor(e.x);break;case Jt:e.x=e.x<0?0:1;break;case Ma:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ya:e.y=e.y-Math.floor(e.y);break;case Jt:e.y=e.y<0?0:1;break;case Ma:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}S3.DEFAULT_IMAGE=null;S3.DEFAULT_MAPPING=_c;S3.DEFAULT_ANISOTROPY=1;class B2{constructor(e=0,t=0,i=0,r=1){B2.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],p=l[5],v=l[9],_=l[2],m=l[6],d=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-_)<.01&&Math.abs(v-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+_)<.1&&Math.abs(v+m)<.1&&Math.abs(c+p+d-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(c+1)/2,y=(p+1)/2,w=(d+1)/2,I=(u+f)/4,D=(h+_)/4,L=(v+m)/4;return T>y&&T>w?T<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(T),r=I/i,s=D/i):y>w?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=I/r,s=L/r):w<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(w),i=D/s,r=L/s),this.set(i,r,s,t),this}let b=Math.sqrt((m-v)*(m-v)+(h-_)*(h-_)+(f-u)*(f-u));return Math.abs(b)<.001&&(b=1),this.x=(m-v)/b,this.y=(h-_)/b,this.z=(f-u)/b,this.w=Math.acos((c+p+d-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=u2(this.x,e.x,t.x),this.y=u2(this.y,e.y,t.y),this.z=u2(this.z,e.z,t.z),this.w=u2(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=u2(this.x,e,t),this.y=u2(this.y,e,t),this.z=u2(this.z,e,t),this.w=u2(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(u2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Cf extends on{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Re,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new B2(0,0,e,t),this.scissorTest=!1,this.viewport=new B2(0,0,e,t);const r={width:e,height:t,depth:i.depth},s=new S3(r);this.textures=[];const a=i.count;for(let o=0;o<a;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:Re,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=i,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Ho(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class o0 extends Cf{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Cc extends S3{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=xe,this.minFilter=xe,this.wrapR=Jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Rf extends S3{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=xe,this.minFilter=xe,this.wrapR=Jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class si{constructor(e=new J(1/0,1/0,1/0),t=new J(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(ce.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(ce.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=ce.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,ce):ce.fromBufferAttribute(s,a),ce.applyMatrix4(e.matrixWorld),this.expandByPoint(ce);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),gi.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),gi.copy(i.boundingBox)),gi.applyMatrix4(e.matrixWorld),this.union(gi)}const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ce),ce.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gn),vi.subVectors(this.max,gn),g0.subVectors(e.a,gn),v0.subVectors(e.b,gn),x0.subVectors(e.c,gn),at.subVectors(v0,g0),ot.subVectors(x0,v0),Ot.subVectors(g0,x0);let t=[0,-at.z,at.y,0,-ot.z,ot.y,0,-Ot.z,Ot.y,at.z,0,-at.x,ot.z,0,-ot.x,Ot.z,0,-Ot.x,-at.y,at.x,0,-ot.y,ot.x,0,-Ot.y,Ot.x,0];return!us(t,g0,v0,x0,vi)||(t=[1,0,0,0,1,0,0,0,1],!us(t,g0,v0,x0,vi))?!1:(xi.crossVectors(at,ot),t=[xi.x,xi.y,xi.z],us(t,g0,v0,x0,vi))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ce).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ce).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(He[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),He[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),He[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),He[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),He[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),He[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),He[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),He[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(He),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const He=[new J,new J,new J,new J,new J,new J,new J,new J],ce=new J,gi=new si,g0=new J,v0=new J,x0=new J,at=new J,ot=new J,Ot=new J,gn=new J,vi=new J,xi=new J,Nt=new J;function us(n,e,t,i,r){for(let s=0,a=n.length-3;s<=a;s+=3){Nt.fromArray(n,s);const o=r.x*Math.abs(Nt.x)+r.y*Math.abs(Nt.y)+r.z*Math.abs(Nt.z),l=e.dot(Nt),c=t.dot(Nt),u=i.dot(Nt);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const Lf=new si,vn=new J,hs=new J;class Or{constructor(e=new J,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Lf.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;vn.subVectors(e,this.center);const t=vn.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(vn,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hs.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(vn.copy(e.center).add(hs)),this.expandByPoint(vn.copy(e.center).sub(hs))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Ve=new J,fs=new J,yi=new J,lt=new J,ds=new J,Mi=new J,ps=new J;class Rc{constructor(e=new J,t=new J(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ve)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ve.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ve.copy(this.origin).addScaledVector(this.direction,t),Ve.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){fs.copy(e).add(t).multiplyScalar(.5),yi.copy(t).sub(e).normalize(),lt.copy(this.origin).sub(fs);const s=e.distanceTo(t)*.5,a=-this.direction.dot(yi),o=lt.dot(this.direction),l=-lt.dot(yi),c=lt.lengthSq(),u=Math.abs(1-a*a);let h,f,p,v;if(u>0)if(h=a*l-o,f=a*o-l,v=s*u,h>=0)if(f>=-v)if(f<=v){const _=1/u;h*=_,f*=_,p=h*(h+a*f+2*o)+f*(a*h+f+2*l)+c}else f=s,h=Math.max(0,-(a*f+o)),p=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(a*f+o)),p=-h*h+f*(f+2*l)+c;else f<=-v?(h=Math.max(0,-(-a*s+o)),f=h>0?-s:Math.min(Math.max(-s,-l),s),p=-h*h+f*(f+2*l)+c):f<=v?(h=0,f=Math.min(Math.max(-s,-l),s),p=f*(f+2*l)+c):(h=Math.max(0,-(a*s+o)),f=h>0?s:Math.min(Math.max(-s,-l),s),p=-h*h+f*(f+2*l)+c);else f=a>0?-s:s,h=Math.max(0,-(a*f+o)),p=-h*h+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(fs).addScaledVector(yi,f),p}intersectSphere(e,t){Ve.subVectors(e.center,this.origin);const i=Ve.dot(this.direction),r=Ve.dot(Ve)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,a=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,a=(e.min.y-f.y)*u),i>a||s>r||((s>i||isNaN(i))&&(i=s),(a<r||isNaN(r))&&(r=a),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ve)!==null}intersectTriangle(e,t,i,r,s){ds.subVectors(t,e),Mi.subVectors(i,e),ps.crossVectors(ds,Mi);let a=this.direction.dot(ps),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;lt.subVectors(this.origin,e);const l=o*this.direction.dot(Mi.crossVectors(lt,Mi));if(l<0)return null;const c=o*this.direction.dot(ds.cross(lt));if(c<0||l+c>a)return null;const u=-o*lt.dot(ps);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class k2{constructor(e,t,i,r,s,a,o,l,c,u,h,f,p,v,_,m){k2.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,a,o,l,c,u,h,f,p,v,_,m)}set(e,t,i,r,s,a,o,l,c,u,h,f,p,v,_,m){const d=this.elements;return d[0]=e,d[4]=t,d[8]=i,d[12]=r,d[1]=s,d[5]=a,d[9]=o,d[13]=l,d[2]=c,d[6]=u,d[10]=h,d[14]=f,d[3]=p,d[7]=v,d[11]=_,d[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new k2().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/y0.setFromMatrixColumn(e,0).length(),s=1/y0.setFromMatrixColumn(e,1).length(),a=1/y0.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=a*u,p=a*h,v=o*u,_=o*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=p+v*c,t[5]=f-_*c,t[9]=-o*l,t[2]=_-f*c,t[6]=v+p*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*u,p=l*h,v=c*u,_=c*h;t[0]=f+_*o,t[4]=v*o-p,t[8]=a*c,t[1]=a*h,t[5]=a*u,t[9]=-o,t[2]=p*o-v,t[6]=_+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*u,p=l*h,v=c*u,_=c*h;t[0]=f-_*o,t[4]=-a*h,t[8]=v+p*o,t[1]=p+v*o,t[5]=a*u,t[9]=_-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*u,p=a*h,v=o*u,_=o*h;t[0]=l*u,t[4]=v*c-p,t[8]=f*c+_,t[1]=l*h,t[5]=_*c+f,t[9]=p*c-v,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,p=a*c,v=o*l,_=o*c;t[0]=l*u,t[4]=_-f*h,t[8]=v*h+p,t[1]=h,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=p*h+v,t[10]=f-_*h}else if(e.order==="XZY"){const f=a*l,p=a*c,v=o*l,_=o*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+_,t[5]=a*u,t[9]=p*h-v,t[2]=v*h-p,t[6]=o*u,t[10]=_*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Pf,e,If)}lookAt(e,t,i){const r=this.elements;return O3.subVectors(e,t),O3.lengthSq()===0&&(O3.z=1),O3.normalize(),ct.crossVectors(i,O3),ct.lengthSq()===0&&(Math.abs(i.z)===1?O3.x+=1e-4:O3.z+=1e-4,O3.normalize(),ct.crossVectors(i,O3)),ct.normalize(),Si.crossVectors(O3,ct),r[0]=ct.x,r[4]=Si.x,r[8]=O3.x,r[1]=ct.y,r[5]=Si.y,r[9]=O3.y,r[2]=ct.z,r[6]=Si.z,r[10]=O3.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],p=i[13],v=i[2],_=i[6],m=i[10],d=i[14],b=i[3],T=i[7],y=i[11],w=i[15],I=r[0],D=r[4],L=r[8],E=r[12],C=r[1],O=r[5],G=r[9],X=r[13],s1=r[2],e1=r[6],Z=r[10],Q=r[14],V=r[3],p1=r[7],E1=r[11],L1=r[15];return s[0]=a*I+o*C+l*s1+c*V,s[4]=a*D+o*O+l*e1+c*p1,s[8]=a*L+o*G+l*Z+c*E1,s[12]=a*E+o*X+l*Q+c*L1,s[1]=u*I+h*C+f*s1+p*V,s[5]=u*D+h*O+f*e1+p*p1,s[9]=u*L+h*G+f*Z+p*E1,s[13]=u*E+h*X+f*Q+p*L1,s[2]=v*I+_*C+m*s1+d*V,s[6]=v*D+_*O+m*e1+d*p1,s[10]=v*L+_*G+m*Z+d*E1,s[14]=v*E+_*X+m*Q+d*L1,s[3]=b*I+T*C+y*s1+w*V,s[7]=b*D+T*O+y*e1+w*p1,s[11]=b*L+T*G+y*Z+w*E1,s[15]=b*E+T*X+y*Q+w*L1,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],p=e[14],v=e[3],_=e[7],m=e[11],d=e[15];return v*(+s*l*h-r*c*h-s*o*f+i*c*f+r*o*p-i*l*p)+_*(+t*l*p-t*c*f+s*a*f-r*a*p+r*c*u-s*l*u)+m*(+t*c*h-t*o*p-s*a*h+i*a*p+s*o*u-i*c*u)+d*(-r*o*u-t*l*h+t*o*f+r*a*h-i*a*f+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],p=e[11],v=e[12],_=e[13],m=e[14],d=e[15],b=h*m*c-_*f*c+_*l*p-o*m*p-h*l*d+o*f*d,T=v*f*c-u*m*c-v*l*p+a*m*p+u*l*d-a*f*d,y=u*_*c-v*h*c+v*o*p-a*_*p-u*o*d+a*h*d,w=v*h*l-u*_*l-v*o*f+a*_*f+u*o*m-a*h*m,I=t*b+i*T+r*y+s*w;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/I;return e[0]=b*D,e[1]=(_*f*s-h*m*s-_*r*p+i*m*p+h*r*d-i*f*d)*D,e[2]=(o*m*s-_*l*s+_*r*c-i*m*c-o*r*d+i*l*d)*D,e[3]=(h*l*s-o*f*s-h*r*c+i*f*c+o*r*p-i*l*p)*D,e[4]=T*D,e[5]=(u*m*s-v*f*s+v*r*p-t*m*p-u*r*d+t*f*d)*D,e[6]=(v*l*s-a*m*s-v*r*c+t*m*c+a*r*d-t*l*d)*D,e[7]=(a*f*s-u*l*s+u*r*c-t*f*c-a*r*p+t*l*p)*D,e[8]=y*D,e[9]=(v*h*s-u*_*s-v*i*p+t*_*p+u*i*d-t*h*d)*D,e[10]=(a*_*s-v*o*s+v*i*c-t*_*c-a*i*d+t*o*d)*D,e[11]=(u*o*s-a*h*s-u*i*c+t*h*c+a*i*p-t*o*p)*D,e[12]=w*D,e[13]=(u*_*r-v*h*r+v*i*f-t*_*f-u*i*m+t*h*m)*D,e[14]=(v*o*r-a*_*r-v*i*l+t*_*l+a*i*m-t*o*m)*D,e[15]=(a*h*r-u*o*r+u*i*l-t*h*l-a*i*f+t*o*f)*D,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,u=s*o;return this.set(c*a+i,c*o-r*l,c*l+r*o,0,c*o+r*l,u*o+i,u*l-r*a,0,c*l-r*o,u*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,u=a+a,h=o+o,f=s*c,p=s*u,v=s*h,_=a*u,m=a*h,d=o*h,b=l*c,T=l*u,y=l*h,w=i.x,I=i.y,D=i.z;return r[0]=(1-(_+d))*w,r[1]=(p+y)*w,r[2]=(v-T)*w,r[3]=0,r[4]=(p-y)*I,r[5]=(1-(f+d))*I,r[6]=(m+b)*I,r[7]=0,r[8]=(v+T)*D,r[9]=(m-b)*D,r[10]=(1-(f+_))*D,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=y0.set(r[0],r[1],r[2]).length();const a=y0.set(r[4],r[5],r[6]).length(),o=y0.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],ue.copy(this);const c=1/s,u=1/a,h=1/o;return ue.elements[0]*=c,ue.elements[1]*=c,ue.elements[2]*=c,ue.elements[4]*=u,ue.elements[5]*=u,ue.elements[6]*=u,ue.elements[8]*=h,ue.elements[9]*=h,ue.elements[10]*=h,t.setFromRotationMatrix(ue),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,r,s,a,o=Le,l=!1){const c=this.elements,u=2*s/(t-e),h=2*s/(i-r),f=(t+e)/(t-e),p=(i+r)/(i-r);let v,_;if(l)v=s/(a-s),_=a*s/(a-s);else if(o===Le)v=-(a+s)/(a-s),_=-2*a*s/(a-s);else if(o===fr)v=-a/(a-s),_=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=u,c[4]=0,c[8]=f,c[12]=0,c[1]=0,c[5]=h,c[9]=p,c[13]=0,c[2]=0,c[6]=0,c[10]=v,c[14]=_,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,i,r,s,a,o=Le,l=!1){const c=this.elements,u=2/(t-e),h=2/(i-r),f=-(t+e)/(t-e),p=-(i+r)/(i-r);let v,_;if(l)v=1/(a-s),_=a/(a-s);else if(o===Le)v=-2/(a-s),_=-(a+s)/(a-s);else if(o===fr)v=-1/(a-s),_=-s/(a-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=u,c[4]=0,c[8]=0,c[12]=f,c[1]=0,c[5]=h,c[9]=0,c[13]=p,c[2]=0,c[6]=0,c[10]=v,c[14]=_,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const y0=new J,ue=new k2,Pf=new J(0,0,0),If=new J(1,1,1),ct=new J,Si=new J,O3=new J,Y4=new k2,j4=new ri;class Ue{constructor(e=0,t=0,i=0,r=Ue.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],p=r[10];switch(t){case"XYZ":this._y=Math.asin(u2(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-u2(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(u2(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-u2(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(u2(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-u2(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Y4.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Y4,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return j4.setFromEuler(this),this.setFromQuaternion(j4,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ue.DEFAULT_ORDER="XYZ";class Lc{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Df=0;const K4=new J,M0=new ri,Ge=new k2,Ei=new J,xn=new J,Uf=new J,Ff=new ri,Z4=new J(1,0,0),J4=new J(0,1,0),Q4=new J(0,0,1),e9={type:"added"},Of={type:"removed"},S0={type:"childadded",child:null},ms={type:"childremoved",child:null};class s3 extends on{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Df++}),this.uuid=ii(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=s3.DEFAULT_UP.clone();const e=new J,t=new Ue,i=new ri,r=new J(1,1,1);function s(){i.setFromEuler(t,!1)}function a(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new k2},normalMatrix:{value:new s2}}),this.matrix=new k2,this.matrixWorld=new k2,this.matrixAutoUpdate=s3.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=s3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Lc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return M0.setFromAxisAngle(e,t),this.quaternion.multiply(M0),this}rotateOnWorldAxis(e,t){return M0.setFromAxisAngle(e,t),this.quaternion.premultiply(M0),this}rotateX(e){return this.rotateOnAxis(Z4,e)}rotateY(e){return this.rotateOnAxis(J4,e)}rotateZ(e){return this.rotateOnAxis(Q4,e)}translateOnAxis(e,t){return K4.copy(e).applyQuaternion(this.quaternion),this.position.add(K4.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Z4,e)}translateY(e){return this.translateOnAxis(J4,e)}translateZ(e){return this.translateOnAxis(Q4,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ge.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Ei.copy(e):Ei.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),xn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ge.lookAt(xn,Ei,this.up):Ge.lookAt(Ei,xn,this.up),this.quaternion.setFromRotationMatrix(Ge),r&&(Ge.extractRotation(r.matrixWorld),M0.setFromRotationMatrix(Ge),this.quaternion.premultiply(M0.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(e9),S0.child=e,this.dispatchEvent(S0),S0.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Of),ms.child=e,this.dispatchEvent(ms),ms.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ge.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ge.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ge),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(e9),S0.child=e,this.dispatchEvent(S0),S0.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xn,e,Uf),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xn,Ff,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(o=>({...o})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),u=a(e.images),h=a(e.shapes),f=a(e.skeletons),p=a(e.animations),v=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),f.length>0&&(i.skeletons=f),p.length>0&&(i.animations=p),v.length>0&&(i.nodes=v)}return i.object=r,i;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}s3.DEFAULT_UP=new J(0,1,0);s3.DEFAULT_MATRIX_AUTO_UPDATE=!0;s3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const he=new J,We=new J,_s=new J,Xe=new J,E0=new J,b0=new J,t9=new J,gs=new J,vs=new J,xs=new J,ys=new B2,Ms=new B2,Ss=new B2;class de{constructor(e=new J,t=new J,i=new J){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),he.subVectors(e,t),r.cross(he);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){he.subVectors(r,t),We.subVectors(i,t),_s.subVectors(e,t);const a=he.dot(he),o=he.dot(We),l=he.dot(_s),c=We.dot(We),u=We.dot(_s),h=a*c-o*o;if(h===0)return s.set(0,0,0),null;const f=1/h,p=(c*l-o*u)*f,v=(a*u-o*l)*f;return s.set(1-p-v,v,p)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Xe)===null?!1:Xe.x>=0&&Xe.y>=0&&Xe.x+Xe.y<=1}static getInterpolation(e,t,i,r,s,a,o,l){return this.getBarycoord(e,t,i,r,Xe)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Xe.x),l.addScaledVector(a,Xe.y),l.addScaledVector(o,Xe.z),l)}static getInterpolatedAttribute(e,t,i,r,s,a){return ys.setScalar(0),Ms.setScalar(0),Ss.setScalar(0),ys.fromBufferAttribute(e,t),Ms.fromBufferAttribute(e,i),Ss.fromBufferAttribute(e,r),a.setScalar(0),a.addScaledVector(ys,s.x),a.addScaledVector(Ms,s.y),a.addScaledVector(Ss,s.z),a}static isFrontFacing(e,t,i,r){return he.subVectors(i,t),We.subVectors(e,t),he.cross(We).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return he.subVectors(this.c,this.b),We.subVectors(this.a,this.b),he.cross(We).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return de.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return de.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,s){return de.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return de.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return de.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let a,o;E0.subVectors(r,i),b0.subVectors(s,i),gs.subVectors(e,i);const l=E0.dot(gs),c=b0.dot(gs);if(l<=0&&c<=0)return t.copy(i);vs.subVectors(e,r);const u=E0.dot(vs),h=b0.dot(vs);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return a=l/(l-u),t.copy(i).addScaledVector(E0,a);xs.subVectors(e,s);const p=E0.dot(xs),v=b0.dot(xs);if(v>=0&&p<=v)return t.copy(s);const _=p*c-l*v;if(_<=0&&c>=0&&v<=0)return o=c/(c-v),t.copy(i).addScaledVector(b0,o);const m=u*v-p*h;if(m<=0&&h-u>=0&&p-v>=0)return t9.subVectors(s,r),o=(h-u)/(h-u+(p-v)),t.copy(r).addScaledVector(t9,o);const d=1/(m+_+f);return a=_*d,o=f*d,t.copy(i).addScaledVector(E0,a).addScaledVector(b0,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Pc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ut={h:0,s:0,l:0},bi={h:0,s:0,l:0};function Es(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class _2{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Z3){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,m2.colorSpaceToWorking(this,t),this}setRGB(e,t,i,r=m2.workingColorSpace){return this.r=e,this.g=t,this.b=i,m2.colorSpaceToWorking(this,r),this}setHSL(e,t,i,r=m2.workingColorSpace){if(e=Mf(e,1),t=u2(t,0,1),i=u2(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,a=2*i-s;this.r=Es(a,s,e+1/3),this.g=Es(a,s,e),this.b=Es(a,s,e-1/3)}return m2.colorSpaceToWorking(this,r),this}setStyle(e,t=Z3){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Z3){const i=Pc[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Qe(e.r),this.g=Qe(e.g),this.b=Qe(e.b),this}copyLinearToSRGB(e){return this.r=H0(e.r),this.g=H0(e.g),this.b=H0(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Z3){return m2.workingToColorSpace(u3.copy(this),e),Math.round(u2(u3.r*255,0,255))*65536+Math.round(u2(u3.g*255,0,255))*256+Math.round(u2(u3.b*255,0,255))}getHexString(e=Z3){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=m2.workingColorSpace){m2.workingToColorSpace(u3.copy(this),t);const i=u3.r,r=u3.g,s=u3.b,a=Math.max(i,r,s),o=Math.min(i,r,s);let l,c;const u=(o+a)/2;if(o===a)l=0,c=0;else{const h=a-o;switch(c=u<=.5?h/(a+o):h/(2-a-o),a){case i:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-i)/h+2;break;case s:l=(i-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=m2.workingColorSpace){return m2.workingToColorSpace(u3.copy(this),t),e.r=u3.r,e.g=u3.g,e.b=u3.b,e}getStyle(e=Z3){m2.workingToColorSpace(u3.copy(this),e);const t=u3.r,i=u3.g,r=u3.b;return e!==Z3?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(ut),this.setHSL(ut.h+e,ut.s+t,ut.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(ut),e.getHSL(bi);const i=ss(ut.h,bi.h,t),r=ss(ut.s,bi.s,t),s=ss(ut.l,bi.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const u3=new _2;_2.NAMES=Pc;let Nf=0;class ln extends on{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Nf++}),this.uuid=ii(),this.name="",this.type="Material",this.blending=k0,this.side=At,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ca,this.blendDst=ua,this.blendEquation=jt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new _2(0,0,0),this.blendAlpha=0,this.depthFunc=Y0,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=H4,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=m0,this.stencilZFail=m0,this.stencilZPass=m0,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(i.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(i.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==k0&&(i.blending=this.blending),this.side!==At&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==ca&&(i.blendSrc=this.blendSrc),this.blendDst!==ua&&(i.blendDst=this.blendDst),this.blendEquation!==jt&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Y0&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==H4&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==m0&&(i.stencilFail=this.stencilFail),this.stencilZFail!==m0&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==m0&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ic extends ln{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _2(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ue,this.combine=Uo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const W2=new J,Ti=new y2;let Bf=0;class ye{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Bf++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=V4,this.updateRanges=[],this.gpuType=Je,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Ti.fromBufferAttribute(this,t),Ti.applyMatrix3(e),this.setXY(t,Ti.x,Ti.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)W2.fromBufferAttribute(this,t),W2.applyMatrix3(e),this.setXYZ(t,W2.x,W2.y,W2.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)W2.fromBufferAttribute(this,t),W2.applyMatrix4(e),this.setXYZ(t,W2.x,W2.y,W2.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)W2.fromBufferAttribute(this,t),W2.applyNormalMatrix(e),this.setXYZ(t,W2.x,W2.y,W2.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)W2.fromBufferAttribute(this,t),W2.transformDirection(e),this.setXYZ(t,W2.x,W2.y,W2.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=_n(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=w3(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=_n(t,this.array)),t}setX(e,t){return this.normalized&&(t=w3(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=_n(t,this.array)),t}setY(e,t){return this.normalized&&(t=w3(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=_n(t,this.array)),t}setZ(e,t){return this.normalized&&(t=w3(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=_n(t,this.array)),t}setW(e,t){return this.normalized&&(t=w3(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=w3(t,this.array),i=w3(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=w3(t,this.array),i=w3(i,this.array),r=w3(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=w3(t,this.array),i=w3(i,this.array),r=w3(r,this.array),s=w3(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==V4&&(e.usage=this.usage),e}}class Dc extends ye{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Uc extends ye{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class ae extends ye{constructor(e,t,i){super(new Float32Array(e),t,i)}}let zf=0;const j3=new k2,bs=new s3,T0=new J,N3=new si,yn=new si,Q2=new J;class Oe extends on{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:zf++}),this.uuid=ii(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ac(e)?Uc:Dc)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new s2().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return j3.makeRotationFromQuaternion(e),this.applyMatrix4(j3),this}rotateX(e){return j3.makeRotationX(e),this.applyMatrix4(j3),this}rotateY(e){return j3.makeRotationY(e),this.applyMatrix4(j3),this}rotateZ(e){return j3.makeRotationZ(e),this.applyMatrix4(j3),this}translate(e,t,i){return j3.makeTranslation(e,t,i),this.applyMatrix4(j3),this}scale(e,t,i){return j3.makeScale(e,t,i),this.applyMatrix4(j3),this}lookAt(e){return bs.lookAt(e),bs.updateMatrix(),this.applyMatrix4(bs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(T0).negate(),this.translate(T0.x,T0.y,T0.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let r=0,s=e.length;r<s;r++){const a=e[r];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new ae(i,3))}else{const i=Math.min(e.length,t.count);for(let r=0;r<i;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new si);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new J(-1/0,-1/0,-1/0),new J(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];N3.setFromBufferAttribute(s),this.morphTargetsRelative?(Q2.addVectors(this.boundingBox.min,N3.min),this.boundingBox.expandByPoint(Q2),Q2.addVectors(this.boundingBox.max,N3.max),this.boundingBox.expandByPoint(Q2)):(this.boundingBox.expandByPoint(N3.min),this.boundingBox.expandByPoint(N3.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Or);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new J,1/0);return}if(e){const i=this.boundingSphere.center;if(N3.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];yn.setFromBufferAttribute(o),this.morphTargetsRelative?(Q2.addVectors(N3.min,yn.min),N3.expandByPoint(Q2),Q2.addVectors(N3.max,yn.max),N3.expandByPoint(Q2)):(N3.expandByPoint(yn.min),N3.expandByPoint(yn.max))}N3.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)Q2.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Q2));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)Q2.fromBufferAttribute(o,c),l&&(T0.fromBufferAttribute(e,c),Q2.add(T0)),r=Math.max(r,i.distanceToSquared(Q2))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ye(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),o=[],l=[];for(let L=0;L<i.count;L++)o[L]=new J,l[L]=new J;const c=new J,u=new J,h=new J,f=new y2,p=new y2,v=new y2,_=new J,m=new J;function d(L,E,C){c.fromBufferAttribute(i,L),u.fromBufferAttribute(i,E),h.fromBufferAttribute(i,C),f.fromBufferAttribute(s,L),p.fromBufferAttribute(s,E),v.fromBufferAttribute(s,C),u.sub(c),h.sub(c),p.sub(f),v.sub(f);const O=1/(p.x*v.y-v.x*p.y);isFinite(O)&&(_.copy(u).multiplyScalar(v.y).addScaledVector(h,-p.y).multiplyScalar(O),m.copy(h).multiplyScalar(p.x).addScaledVector(u,-v.x).multiplyScalar(O),o[L].add(_),o[E].add(_),o[C].add(_),l[L].add(m),l[E].add(m),l[C].add(m))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let L=0,E=b.length;L<E;++L){const C=b[L],O=C.start,G=C.count;for(let X=O,s1=O+G;X<s1;X+=3)d(e.getX(X+0),e.getX(X+1),e.getX(X+2))}const T=new J,y=new J,w=new J,I=new J;function D(L){w.fromBufferAttribute(r,L),I.copy(w);const E=o[L];T.copy(E),T.sub(w.multiplyScalar(w.dot(E))).normalize(),y.crossVectors(I,E);const O=y.dot(l[L])<0?-1:1;a.setXYZW(L,T.x,T.y,T.z,O)}for(let L=0,E=b.length;L<E;++L){const C=b[L],O=C.start,G=C.count;for(let X=O,s1=O+G;X<s1;X+=3)D(e.getX(X+0)),D(e.getX(X+1)),D(e.getX(X+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ye(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,p=i.count;f<p;f++)i.setXYZ(f,0,0,0);const r=new J,s=new J,a=new J,o=new J,l=new J,c=new J,u=new J,h=new J;if(e)for(let f=0,p=e.count;f<p;f+=3){const v=e.getX(f+0),_=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,v),s.fromBufferAttribute(t,_),a.fromBufferAttribute(t,m),u.subVectors(a,s),h.subVectors(r,s),u.cross(h),o.fromBufferAttribute(i,v),l.fromBufferAttribute(i,_),c.fromBufferAttribute(i,m),o.add(u),l.add(u),c.add(u),i.setXYZ(v,o.x,o.y,o.z),i.setXYZ(_,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,p=t.count;f<p;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),u.subVectors(a,s),h.subVectors(r,s),u.cross(h),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Q2.fromBufferAttribute(e,t),Q2.normalize(),e.setXYZ(t,Q2.x,Q2.y,Q2.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,h=o.normalized,f=new c.constructor(l.length*u);let p=0,v=0;for(let _=0,m=l.length;_<m;_++){o.isInterleavedBufferAttribute?p=l[_]*o.data.stride+o.offset:p=l[_]*u;for(let d=0;d<u;d++)f[v++]=c[p++]}return new ye(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Oe,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let u=0,h=c.length;u<h;u++){const f=c[u],p=e(f,i);l.push(p)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const p=c[h];u.push(p.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const n9=new k2,Bt=new Rc,wi=new Or,i9=new J,Ai=new J,Ci=new J,Ri=new J,Ts=new J,Li=new J,r9=new J,Pi=new J;class te extends s3{constructor(e=new Oe,t=new Ic){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(s&&o){Li.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=o[l],h=s[l];u!==0&&(Ts.fromBufferAttribute(h,e),a?Li.addScaledVector(Ts,u):Li.addScaledVector(Ts.sub(t),u))}t.add(Li)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),wi.copy(i.boundingSphere),wi.applyMatrix4(s),Bt.copy(e.ray).recast(e.near),!(wi.containsPoint(Bt.origin)===!1&&(Bt.intersectSphere(wi,i9)===null||Bt.origin.distanceToSquared(i9)>(e.far-e.near)**2))&&(n9.copy(s).invert(),Bt.copy(e.ray).applyMatrix4(n9),!(i.boundingBox!==null&&Bt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Bt)))}_computeIntersections(e,t,i){let r;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,p=s.drawRange;if(o!==null)if(Array.isArray(a))for(let v=0,_=f.length;v<_;v++){const m=f[v],d=a[m.materialIndex],b=Math.max(m.start,p.start),T=Math.min(o.count,Math.min(m.start+m.count,p.start+p.count));for(let y=b,w=T;y<w;y+=3){const I=o.getX(y),D=o.getX(y+1),L=o.getX(y+2);r=Ii(this,d,e,i,c,u,h,I,D,L),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const v=Math.max(0,p.start),_=Math.min(o.count,p.start+p.count);for(let m=v,d=_;m<d;m+=3){const b=o.getX(m),T=o.getX(m+1),y=o.getX(m+2);r=Ii(this,a,e,i,c,u,h,b,T,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(a))for(let v=0,_=f.length;v<_;v++){const m=f[v],d=a[m.materialIndex],b=Math.max(m.start,p.start),T=Math.min(l.count,Math.min(m.start+m.count,p.start+p.count));for(let y=b,w=T;y<w;y+=3){const I=y,D=y+1,L=y+2;r=Ii(this,d,e,i,c,u,h,I,D,L),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const v=Math.max(0,p.start),_=Math.min(l.count,p.start+p.count);for(let m=v,d=_;m<d;m+=3){const b=m,T=m+1,y=m+2;r=Ii(this,a,e,i,c,u,h,b,T,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function kf(n,e,t,i,r,s,a,o){let l;if(e.side===C3?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side===At,o),l===null)return null;Pi.copy(o),Pi.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(Pi);return c<t.near||c>t.far?null:{distance:c,point:Pi.clone(),object:n}}function Ii(n,e,t,i,r,s,a,o,l,c){n.getVertexPosition(o,Ai),n.getVertexPosition(l,Ci),n.getVertexPosition(c,Ri);const u=kf(n,e,t,i,Ai,Ci,Ri,r9);if(u){const h=new J;de.getBarycoord(r9,Ai,Ci,Ri,h),r&&(u.uv=de.getInterpolatedAttribute(r,o,l,c,h,new y2)),s&&(u.uv1=de.getInterpolatedAttribute(s,o,l,c,h,new y2)),a&&(u.normal=de.getInterpolatedAttribute(a,o,l,c,h,new J),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const f={a:o,b:l,c,normal:new J,materialIndex:0};de.getNormal(Ai,Ci,Ri,f.normal),u.face=f,u.barycoord=h}return u}class ai extends Oe{constructor(e=1,t=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],u=[],h=[];let f=0,p=0;v("z","y","x",-1,-1,i,t,e,a,s,0),v("z","y","x",1,-1,i,t,-e,a,s,1),v("x","z","y",1,1,e,i,t,r,a,2),v("x","z","y",1,-1,e,i,-t,r,a,3),v("x","y","z",1,-1,e,t,i,r,s,4),v("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new ae(c,3)),this.setAttribute("normal",new ae(u,3)),this.setAttribute("uv",new ae(h,2));function v(_,m,d,b,T,y,w,I,D,L,E){const C=y/D,O=w/L,G=y/2,X=w/2,s1=I/2,e1=D+1,Z=L+1;let Q=0,V=0;const p1=new J;for(let E1=0;E1<Z;E1++){const L1=E1*O-X;for(let B1=0;B1<e1;B1++){const l2=B1*C-G;p1[_]=l2*b,p1[m]=L1*T,p1[d]=s1,c.push(p1.x,p1.y,p1.z),p1[_]=0,p1[m]=0,p1[d]=I>0?1:-1,u.push(p1.x,p1.y,p1.z),h.push(B1/D),h.push(1-E1/L),Q+=1}}for(let E1=0;E1<L;E1++)for(let L1=0;L1<D;L1++){const B1=f+L1+e1*E1,l2=f+L1+e1*(E1+1),n2=f+(L1+1)+e1*(E1+1),V1=f+(L1+1)+e1*E1;l.push(B1,l2,V1),l.push(l2,n2,V1),V+=6}o.addGroup(p,V,E),p+=V,f+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ai(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function J0(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function g3(n){const e={};for(let t=0;t<n.length;t++){const i=J0(n[t]);for(const r in i)e[r]=i[r]}return e}function Hf(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function Fc(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:m2.workingColorSpace}const Vf={clone:J0,merge:g3};var Gf=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Wf=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ct extends ln{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Gf,this.fragmentShader=Wf,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=J0(e.uniforms),this.uniformsGroups=Hf(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Oc extends s3{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new k2,this.projectionMatrix=new k2,this.projectionMatrixInverse=new k2,this.coordinateSystem=Le,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ht=new J,s9=new y2,a9=new y2;class J3 extends Oc{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ka*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(rs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ka*2*Math.atan(Math.tan(rs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){ht.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ht.x,ht.y).multiplyScalar(-e/ht.z),ht.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(ht.x,ht.y).multiplyScalar(-e/ht.z)}getViewSize(e,t){return this.getViewBounds(e,s9,a9),t.subVectors(a9,s9)}setViewOffset(e,t,i,r,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(rs*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,t-=a.offsetY*i/c,r*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const w0=-90,A0=1;class Xf extends s3{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new J3(w0,A0,e,t);r.layers=this.layers,this.add(r);const s=new J3(w0,A0,e,t);s.layers=this.layers,this.add(s);const a=new J3(w0,A0,e,t);a.layers=this.layers,this.add(a);const o=new J3(w0,A0,e,t);o.layers=this.layers,this.add(o);const l=new J3(w0,A0,e,t);l.layers=this.layers,this.add(l);const c=new J3(w0,A0,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,a,o,l]=t;for(const c of t)this.remove(c);if(e===Le)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===fr)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),p=e.getActiveMipmapLevel(),v=e.xr.enabled;e.xr.enabled=!1;const _=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,a),e.setRenderTarget(i,2,r),e.render(t,o),e.setRenderTarget(i,3,r),e.render(t,l),e.setRenderTarget(i,4,r),e.render(t,c),i.texture.generateMipmaps=_,e.setRenderTarget(i,5,r),e.render(t,u),e.setRenderTarget(h,f,p),e.xr.enabled=v,i.texture.needsPMREMUpdate=!0}}class Nc extends S3{constructor(e=[],t=j0,i,r,s,a,o,l,c,u){super(e,t,i,r,s,a,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class qf extends o0{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new Nc(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ai(5,5,5),s=new Ct({name:"CubemapFromEquirect",uniforms:J0(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:C3,blending:yt});s.uniforms.tEquirect.value=t;const a=new te(r,s),o=t.minFilter;return t.minFilter===Qt&&(t.minFilter=Re),new Xf(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,i=!0,r=!0){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,r);e.setRenderTarget(s)}}class Di extends s3{constructor(){super(),this.isGroup=!0,this.type="Group"}}const $f={type:"move"};class ws{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Di,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Di,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new J,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new J),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Di,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new J,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new J),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const _ of e.hand.values()){const m=t.getJointPose(_,i),d=this._getHandJoint(c,_);m!==null&&(d.matrix.fromArray(m.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,d.jointRadius=m.radius),d.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),p=.02,v=.005;c.inputState.pinching&&f>p+v?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=p-v&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent($f)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Di;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Yf extends s3{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ue,this.environmentIntensity=1,this.environmentRotation=new Ue,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}const As=new J,jf=new J,Kf=new s2;class Xt{constructor(e=new J(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=As.subVectors(i,t).cross(jf.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(As),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Kf.getNormalMatrix(e),r=this.coplanarPoint(As).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const zt=new Or,Zf=new y2(.5,.5),Ui=new J;class Vo{constructor(e=new Xt,t=new Xt,i=new Xt,r=new Xt,s=new Xt,a=new Xt){this.planes=[e,t,i,r,s,a]}set(e,t,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Le,i=!1){const r=this.planes,s=e.elements,a=s[0],o=s[1],l=s[2],c=s[3],u=s[4],h=s[5],f=s[6],p=s[7],v=s[8],_=s[9],m=s[10],d=s[11],b=s[12],T=s[13],y=s[14],w=s[15];if(r[0].setComponents(c-a,p-u,d-v,w-b).normalize(),r[1].setComponents(c+a,p+u,d+v,w+b).normalize(),r[2].setComponents(c+o,p+h,d+_,w+T).normalize(),r[3].setComponents(c-o,p-h,d-_,w-T).normalize(),i)r[4].setComponents(l,f,m,y).normalize(),r[5].setComponents(c-l,p-f,d-m,w-y).normalize();else if(r[4].setComponents(c-l,p-f,d-m,w-y).normalize(),t===Le)r[5].setComponents(c+l,p+f,d+m,w+y).normalize();else if(t===fr)r[5].setComponents(l,f,m,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),zt.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),zt.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(zt)}intersectsSprite(e){zt.center.set(0,0,0);const t=Zf.distanceTo(e.center);return zt.radius=.7071067811865476+t,zt.applyMatrix4(e.matrixWorld),this.intersectsSphere(zt)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Ui.x=r.normal.x>0?e.max.x:e.min.x,Ui.y=r.normal.y>0?e.max.y:e.min.y,Ui.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ui)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Bc extends ln{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new _2(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const pr=new J,mr=new J,o9=new k2,Mn=new Rc,Fi=new Or,Cs=new J,l9=new J;class Jf extends s3{constructor(e=new Oe,t=new Bc){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)pr.fromBufferAttribute(t,r-1),mr.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=pr.distanceTo(mr);e.setAttribute("lineDistance",new ae(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Fi.copy(i.boundingSphere),Fi.applyMatrix4(r),Fi.radius+=s,e.ray.intersectsSphere(Fi)===!1)return;o9.copy(r).invert(),Mn.copy(e.ray).applyMatrix4(o9);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=this.isLineSegments?2:1,u=i.index,f=i.attributes.position;if(u!==null){const p=Math.max(0,a.start),v=Math.min(u.count,a.start+a.count);for(let _=p,m=v-1;_<m;_+=c){const d=u.getX(_),b=u.getX(_+1),T=Oi(this,e,Mn,l,d,b,_);T&&t.push(T)}if(this.isLineLoop){const _=u.getX(v-1),m=u.getX(p),d=Oi(this,e,Mn,l,_,m,v-1);d&&t.push(d)}}else{const p=Math.max(0,a.start),v=Math.min(f.count,a.start+a.count);for(let _=p,m=v-1;_<m;_+=c){const d=Oi(this,e,Mn,l,_,_+1,_);d&&t.push(d)}if(this.isLineLoop){const _=Oi(this,e,Mn,l,v-1,p,v-1);_&&t.push(_)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function Oi(n,e,t,i,r,s,a){const o=n.geometry.attributes.position;if(pr.fromBufferAttribute(o,r),mr.fromBufferAttribute(o,s),t.distanceSqToSegment(pr,mr,Cs,l9)>i)return;Cs.applyMatrix4(n.matrixWorld);const c=e.ray.origin.distanceTo(Cs);if(!(c<e.near||c>e.far))return{distance:c,point:l9.clone().applyMatrix4(n.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:n}}const c9=new J,u9=new J;class Qf extends Jf{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let r=0,s=t.count;r<s;r+=2)c9.fromBufferAttribute(t,r),u9.fromBufferAttribute(t,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+c9.distanceTo(u9);e.setAttribute("lineDistance",new ae(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Rs extends S3{constructor(e,t,i,r,s,a,o,l,c){super(e,t,i,r,s,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class zc extends S3{constructor(e,t,i=a0,r,s,a,o=xe,l=xe,c,u=Wn,h=1){if(u!==Wn&&u!==Xn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:e,height:t,depth:h};super(f,r,s,a,o,l,u,i,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Ho(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class kc extends S3{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class Nr extends Oe{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,a=t/2,o=Math.floor(i),l=Math.floor(r),c=o+1,u=l+1,h=e/o,f=t/l,p=[],v=[],_=[],m=[];for(let d=0;d<u;d++){const b=d*f-a;for(let T=0;T<c;T++){const y=T*h-s;v.push(y,-b,0),_.push(0,0,1),m.push(T/o),m.push(1-d/l)}}for(let d=0;d<l;d++)for(let b=0;b<o;b++){const T=b+c*d,y=b+c*(d+1),w=b+1+c*(d+1),I=b+1+c*d;p.push(T,y,I),p.push(y,w,I)}this.setIndex(p),this.setAttribute("position",new ae(v,3)),this.setAttribute("normal",new ae(_,3)),this.setAttribute("uv",new ae(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nr(e.width,e.height,e.widthSegments,e.heightSegments)}}class _r extends Oe{constructor(e=1,t=32,i=16,r=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const u=[],h=new J,f=new J,p=[],v=[],_=[],m=[];for(let d=0;d<=i;d++){const b=[],T=d/i;let y=0;d===0&&a===0?y=.5/t:d===i&&l===Math.PI&&(y=-.5/t);for(let w=0;w<=t;w++){const I=w/t;h.x=-e*Math.cos(r+I*s)*Math.sin(a+T*o),h.y=e*Math.cos(a+T*o),h.z=e*Math.sin(r+I*s)*Math.sin(a+T*o),v.push(h.x,h.y,h.z),f.copy(h).normalize(),_.push(f.x,f.y,f.z),m.push(I+y,1-T),b.push(c++)}u.push(b)}for(let d=0;d<i;d++)for(let b=0;b<t;b++){const T=u[d][b+1],y=u[d][b],w=u[d+1][b],I=u[d+1][b+1];(d!==0||a>0)&&p.push(T,y,I),(d!==i-1||l<Math.PI)&&p.push(y,w,I)}this.setIndex(p),this.setAttribute("position",new ae(v,3)),this.setAttribute("normal",new ae(_,3)),this.setAttribute("uv",new ae(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _r(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ls extends ln{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new _2(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _2(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Tc,this.normalScale=new y2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ue,this.combine=Uo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ed extends ln{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=hf,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class td extends ln{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Hc extends s3{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new _2(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const Ps=new k2,h9=new J,f9=new J;class nd{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new y2(512,512),this.mapType=De,this.map=null,this.mapPass=null,this.matrix=new k2,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Vo,this._frameExtents=new y2(1,1),this._viewportCount=1,this._viewports=[new B2(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;h9.setFromMatrixPosition(e.matrixWorld),t.position.copy(h9),f9.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(f9),t.updateMatrixWorld(),Ps.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ps,t.coordinateSystem,t.reversedDepth),t.reversedDepth?i.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Ps)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Vc extends Oc{constructor(e=-1,t=1,i=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class id extends nd{constructor(){super(new Vc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class rd extends Hc{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(s3.DEFAULT_UP),this.updateMatrix(),this.target=new s3,this.shadow=new id}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class sd extends Hc{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ad extends J3{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}function d9(n,e,t,i){const r=od(i);switch(t){case Mc:return n*e;case Ec:return n*e/r.components*r.byteLength;case Bo:return n*e/r.components*r.byteLength;case bc:return n*e*2/r.components*r.byteLength;case zo:return n*e*2/r.components*r.byteLength;case Sc:return n*e*3/r.components*r.byteLength;case _e:return n*e*4/r.components*r.byteLength;case ko:return n*e*4/r.components*r.byteLength;case Xi:case qi:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case $i:case Yi:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Ea:case Ta:return Math.max(n,16)*Math.max(e,8)/4;case Sa:case ba:return Math.max(n,8)*Math.max(e,8)/2;case wa:case Aa:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case Ca:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Ra:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case La:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case Pa:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case Ia:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case Da:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case Ua:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case Fa:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case Oa:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case Na:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case Ba:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case za:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case ka:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case Ha:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case Va:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case Ga:case Wa:case Xa:return Math.ceil(n/4)*Math.ceil(e/4)*16;case qa:case $a:return Math.ceil(n/4)*Math.ceil(e/4)*8;case Ya:case ja:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function od(n){switch(n){case De:case gc:return{byteLength:1,components:1};case Vn:case vc:case ni:return{byteLength:2,components:1};case Oo:case No:return{byteLength:2,components:4};case a0:case Fo:case Je:return{byteLength:4,components:1};case xc:case yc:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Do}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Do);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Gc(){let n=null,e=!1,t=null,i=null;function r(s,a){t(s,a),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function ld(n){const e=new WeakMap;function t(o,l){const c=o.array,u=o.usage,h=c.byteLength,f=n.createBuffer();n.bindBuffer(l,f),n.bufferData(l,c,u),o.onUploadCallback();let p;if(c instanceof Float32Array)p=n.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)p=n.HALF_FLOAT;else if(c instanceof Uint16Array)o.isFloat16BufferAttribute?p=n.HALF_FLOAT:p=n.UNSIGNED_SHORT;else if(c instanceof Int16Array)p=n.SHORT;else if(c instanceof Uint32Array)p=n.UNSIGNED_INT;else if(c instanceof Int32Array)p=n.INT;else if(c instanceof Int8Array)p=n.BYTE;else if(c instanceof Uint8Array)p=n.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)p=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:f,type:p,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version,size:h}}function i(o,l,c){const u=l.array,h=l.updateRanges;if(n.bindBuffer(c,o),h.length===0)n.bufferSubData(c,0,u);else{h.sort((p,v)=>p.start-v.start);let f=0;for(let p=1;p<h.length;p++){const v=h[f],_=h[p];_.start<=v.start+v.count+1?v.count=Math.max(v.count,_.start+_.count-v.start):(++f,h[f]=_)}h.length=f+1;for(let p=0,v=h.length;p<v;p++){const _=h[p];n.bufferSubData(c,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);const l=e.get(o);l&&(n.deleteBuffer(l.buffer),e.delete(o))}function a(o,l){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const u=e.get(o);(!u||u.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const c=e.get(o);if(c===void 0)e.set(o,t(o,l));else if(c.version<o.version){if(c.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,o,l),c.version=o.version}}return{get:r,remove:s,update:a}}var cd=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,ud=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,hd=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,fd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,dd=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,pd=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,md=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,_d=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gd=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,vd=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,xd=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,yd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Md=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Sd=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Ed=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,bd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Td=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,wd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Ad=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Cd=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Rd=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Ld=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Pd=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Id=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Dd=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ud=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Fd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Od=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Nd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Bd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,zd="gl_FragColor = linearToOutputTexel( gl_FragColor );",kd=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Hd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Vd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Gd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Wd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Xd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,qd=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$d=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Yd=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,jd=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Kd=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Zd=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Jd=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Qd=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,e7=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,t7=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,n7=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,i7=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,r7=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,s7=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,a7=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,o7=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,l7=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,c7=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,u7=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,h7=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,f7=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,d7=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,p7=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,m7=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,_7=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,g7=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,v7=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,x7=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,y7=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,M7=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,S7=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,E7=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,b7=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,T7=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,w7=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,A7=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,C7=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,R7=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,L7=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,P7=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,I7=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,D7=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,U7=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,F7=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,O7=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,N7=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,B7=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,z7=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,k7=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,H7=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,V7=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,G7=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,W7=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,X7=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,q7=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$7=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Y7=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,j7=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,K7=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Z7=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,J7=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Q7=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ep=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tp=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,np=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ip=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,rp=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,sp=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ap=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,op=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const lp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,cp=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,up=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,hp=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,dp=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,pp=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,mp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,_p=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,gp=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,vp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,xp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,yp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Mp=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Sp=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Ep=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bp=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Tp=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wp=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ap=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cp=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Rp=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Lp=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pp=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ip=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Dp=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Up=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Op=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Np=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bp=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,kp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Hp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,o2={alphahash_fragment:cd,alphahash_pars_fragment:ud,alphamap_fragment:hd,alphamap_pars_fragment:fd,alphatest_fragment:dd,alphatest_pars_fragment:pd,aomap_fragment:md,aomap_pars_fragment:_d,batching_pars_vertex:gd,batching_vertex:vd,begin_vertex:xd,beginnormal_vertex:yd,bsdfs:Md,iridescence_fragment:Sd,bumpmap_pars_fragment:Ed,clipping_planes_fragment:bd,clipping_planes_pars_fragment:Td,clipping_planes_pars_vertex:wd,clipping_planes_vertex:Ad,color_fragment:Cd,color_pars_fragment:Rd,color_pars_vertex:Ld,color_vertex:Pd,common:Id,cube_uv_reflection_fragment:Dd,defaultnormal_vertex:Ud,displacementmap_pars_vertex:Fd,displacementmap_vertex:Od,emissivemap_fragment:Nd,emissivemap_pars_fragment:Bd,colorspace_fragment:zd,colorspace_pars_fragment:kd,envmap_fragment:Hd,envmap_common_pars_fragment:Vd,envmap_pars_fragment:Gd,envmap_pars_vertex:Wd,envmap_physical_pars_fragment:t7,envmap_vertex:Xd,fog_vertex:qd,fog_pars_vertex:$d,fog_fragment:Yd,fog_pars_fragment:jd,gradientmap_pars_fragment:Kd,lightmap_pars_fragment:Zd,lights_lambert_fragment:Jd,lights_lambert_pars_fragment:Qd,lights_pars_begin:e7,lights_toon_fragment:n7,lights_toon_pars_fragment:i7,lights_phong_fragment:r7,lights_phong_pars_fragment:s7,lights_physical_fragment:a7,lights_physical_pars_fragment:o7,lights_fragment_begin:l7,lights_fragment_maps:c7,lights_fragment_end:u7,logdepthbuf_fragment:h7,logdepthbuf_pars_fragment:f7,logdepthbuf_pars_vertex:d7,logdepthbuf_vertex:p7,map_fragment:m7,map_pars_fragment:_7,map_particle_fragment:g7,map_particle_pars_fragment:v7,metalnessmap_fragment:x7,metalnessmap_pars_fragment:y7,morphinstance_vertex:M7,morphcolor_vertex:S7,morphnormal_vertex:E7,morphtarget_pars_vertex:b7,morphtarget_vertex:T7,normal_fragment_begin:w7,normal_fragment_maps:A7,normal_pars_fragment:C7,normal_pars_vertex:R7,normal_vertex:L7,normalmap_pars_fragment:P7,clearcoat_normal_fragment_begin:I7,clearcoat_normal_fragment_maps:D7,clearcoat_pars_fragment:U7,iridescence_pars_fragment:F7,opaque_fragment:O7,packing:N7,premultiplied_alpha_fragment:B7,project_vertex:z7,dithering_fragment:k7,dithering_pars_fragment:H7,roughnessmap_fragment:V7,roughnessmap_pars_fragment:G7,shadowmap_pars_fragment:W7,shadowmap_pars_vertex:X7,shadowmap_vertex:q7,shadowmask_pars_fragment:$7,skinbase_vertex:Y7,skinning_pars_vertex:j7,skinning_vertex:K7,skinnormal_vertex:Z7,specularmap_fragment:J7,specularmap_pars_fragment:Q7,tonemapping_fragment:ep,tonemapping_pars_fragment:tp,transmission_fragment:np,transmission_pars_fragment:ip,uv_pars_fragment:rp,uv_pars_vertex:sp,uv_vertex:ap,worldpos_vertex:op,background_vert:lp,background_frag:cp,backgroundCube_vert:up,backgroundCube_frag:hp,cube_vert:fp,cube_frag:dp,depth_vert:pp,depth_frag:mp,distanceRGBA_vert:_p,distanceRGBA_frag:gp,equirect_vert:vp,equirect_frag:xp,linedashed_vert:yp,linedashed_frag:Mp,meshbasic_vert:Sp,meshbasic_frag:Ep,meshlambert_vert:bp,meshlambert_frag:Tp,meshmatcap_vert:wp,meshmatcap_frag:Ap,meshnormal_vert:Cp,meshnormal_frag:Rp,meshphong_vert:Lp,meshphong_frag:Pp,meshphysical_vert:Ip,meshphysical_frag:Dp,meshtoon_vert:Up,meshtoon_frag:Fp,points_vert:Op,points_frag:Np,shadow_vert:Bp,shadow_frag:zp,sprite_vert:kp,sprite_frag:Hp},R1={common:{diffuse:{value:new _2(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new s2},alphaMap:{value:null},alphaMapTransform:{value:new s2},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new s2}},envmap:{envMap:{value:null},envMapRotation:{value:new s2},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new s2}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new s2}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new s2},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new s2},normalScale:{value:new y2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new s2},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new s2}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new s2}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new s2}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _2(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _2(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new s2},alphaTest:{value:0},uvTransform:{value:new s2}},sprite:{diffuse:{value:new _2(16777215)},opacity:{value:1},center:{value:new y2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new s2},alphaMap:{value:null},alphaMapTransform:{value:new s2},alphaTest:{value:0}}},we={basic:{uniforms:g3([R1.common,R1.specularmap,R1.envmap,R1.aomap,R1.lightmap,R1.fog]),vertexShader:o2.meshbasic_vert,fragmentShader:o2.meshbasic_frag},lambert:{uniforms:g3([R1.common,R1.specularmap,R1.envmap,R1.aomap,R1.lightmap,R1.emissivemap,R1.bumpmap,R1.normalmap,R1.displacementmap,R1.fog,R1.lights,{emissive:{value:new _2(0)}}]),vertexShader:o2.meshlambert_vert,fragmentShader:o2.meshlambert_frag},phong:{uniforms:g3([R1.common,R1.specularmap,R1.envmap,R1.aomap,R1.lightmap,R1.emissivemap,R1.bumpmap,R1.normalmap,R1.displacementmap,R1.fog,R1.lights,{emissive:{value:new _2(0)},specular:{value:new _2(1118481)},shininess:{value:30}}]),vertexShader:o2.meshphong_vert,fragmentShader:o2.meshphong_frag},standard:{uniforms:g3([R1.common,R1.envmap,R1.aomap,R1.lightmap,R1.emissivemap,R1.bumpmap,R1.normalmap,R1.displacementmap,R1.roughnessmap,R1.metalnessmap,R1.fog,R1.lights,{emissive:{value:new _2(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:o2.meshphysical_vert,fragmentShader:o2.meshphysical_frag},toon:{uniforms:g3([R1.common,R1.aomap,R1.lightmap,R1.emissivemap,R1.bumpmap,R1.normalmap,R1.displacementmap,R1.gradientmap,R1.fog,R1.lights,{emissive:{value:new _2(0)}}]),vertexShader:o2.meshtoon_vert,fragmentShader:o2.meshtoon_frag},matcap:{uniforms:g3([R1.common,R1.bumpmap,R1.normalmap,R1.displacementmap,R1.fog,{matcap:{value:null}}]),vertexShader:o2.meshmatcap_vert,fragmentShader:o2.meshmatcap_frag},points:{uniforms:g3([R1.points,R1.fog]),vertexShader:o2.points_vert,fragmentShader:o2.points_frag},dashed:{uniforms:g3([R1.common,R1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:o2.linedashed_vert,fragmentShader:o2.linedashed_frag},depth:{uniforms:g3([R1.common,R1.displacementmap]),vertexShader:o2.depth_vert,fragmentShader:o2.depth_frag},normal:{uniforms:g3([R1.common,R1.bumpmap,R1.normalmap,R1.displacementmap,{opacity:{value:1}}]),vertexShader:o2.meshnormal_vert,fragmentShader:o2.meshnormal_frag},sprite:{uniforms:g3([R1.sprite,R1.fog]),vertexShader:o2.sprite_vert,fragmentShader:o2.sprite_frag},background:{uniforms:{uvTransform:{value:new s2},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:o2.background_vert,fragmentShader:o2.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new s2}},vertexShader:o2.backgroundCube_vert,fragmentShader:o2.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:o2.cube_vert,fragmentShader:o2.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:o2.equirect_vert,fragmentShader:o2.equirect_frag},distanceRGBA:{uniforms:g3([R1.common,R1.displacementmap,{referencePosition:{value:new J},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:o2.distanceRGBA_vert,fragmentShader:o2.distanceRGBA_frag},shadow:{uniforms:g3([R1.lights,R1.fog,{color:{value:new _2(0)},opacity:{value:1}}]),vertexShader:o2.shadow_vert,fragmentShader:o2.shadow_frag}};we.physical={uniforms:g3([we.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new s2},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new s2},clearcoatNormalScale:{value:new y2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new s2},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new s2},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new s2},sheen:{value:0},sheenColor:{value:new _2(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new s2},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new s2},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new s2},transmissionSamplerSize:{value:new y2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new s2},attenuationDistance:{value:0},attenuationColor:{value:new _2(0)},specularColor:{value:new _2(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new s2},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new s2},anisotropyVector:{value:new y2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new s2}}]),vertexShader:o2.meshphysical_vert,fragmentShader:o2.meshphysical_frag};const Ni={r:0,b:0,g:0},kt=new Ue,Vp=new k2;function Gp(n,e,t,i,r,s,a){const o=new _2(0);let l=s===!0?0:1,c,u,h=null,f=0,p=null;function v(T){let y=T.isScene===!0?T.background:null;return y&&y.isTexture&&(y=(T.backgroundBlurriness>0?t:e).get(y)),y}function _(T){let y=!1;const w=v(T);w===null?d(o,l):w&&w.isColor&&(d(w,1),y=!0);const I=n.xr.getEnvironmentBlendMode();I==="additive"?i.buffers.color.setClear(0,0,0,1,a):I==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(n.autoClear||y)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function m(T,y){const w=v(y);w&&(w.isCubeTexture||w.mapping===Fr)?(u===void 0&&(u=new te(new ai(1,1,1),new Ct({name:"BackgroundCubeMaterial",uniforms:J0(we.backgroundCube.uniforms),vertexShader:we.backgroundCube.vertexShader,fragmentShader:we.backgroundCube.fragmentShader,side:C3,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(I,D,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),kt.copy(y.backgroundRotation),kt.x*=-1,kt.y*=-1,kt.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(kt.y*=-1,kt.z*=-1),u.material.uniforms.envMap.value=w,u.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(Vp.makeRotationFromEuler(kt)),u.material.toneMapped=m2.getTransfer(w.colorSpace)!==E2,(h!==w||f!==w.version||p!==n.toneMapping)&&(u.material.needsUpdate=!0,h=w,f=w.version,p=n.toneMapping),u.layers.enableAll(),T.unshift(u,u.geometry,u.material,0,0,null)):w&&w.isTexture&&(c===void 0&&(c=new te(new Nr(2,2),new Ct({name:"BackgroundMaterial",uniforms:J0(we.background.uniforms),vertexShader:we.background.vertexShader,fragmentShader:we.background.fragmentShader,side:At,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=w,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=m2.getTransfer(w.colorSpace)!==E2,w.matrixAutoUpdate===!0&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),(h!==w||f!==w.version||p!==n.toneMapping)&&(c.material.needsUpdate=!0,h=w,f=w.version,p=n.toneMapping),c.layers.enableAll(),T.unshift(c,c.geometry,c.material,0,0,null))}function d(T,y){T.getRGB(Ni,Fc(n)),i.buffers.color.setClear(Ni.r,Ni.g,Ni.b,y,a)}function b(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return o},setClearColor:function(T,y=1){o.set(T),l=y,d(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(T){l=T,d(o,l)},render:_,addToRenderList:m,dispose:b}}function Wp(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},r=f(null);let s=r,a=!1;function o(C,O,G,X,s1){let e1=!1;const Z=h(X,G,O);s!==Z&&(s=Z,c(s.object)),e1=p(C,X,G,s1),e1&&v(C,X,G,s1),s1!==null&&e.update(s1,n.ELEMENT_ARRAY_BUFFER),(e1||a)&&(a=!1,y(C,O,G,X),s1!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(s1).buffer))}function l(){return n.createVertexArray()}function c(C){return n.bindVertexArray(C)}function u(C){return n.deleteVertexArray(C)}function h(C,O,G){const X=G.wireframe===!0;let s1=i[C.id];s1===void 0&&(s1={},i[C.id]=s1);let e1=s1[O.id];e1===void 0&&(e1={},s1[O.id]=e1);let Z=e1[X];return Z===void 0&&(Z=f(l()),e1[X]=Z),Z}function f(C){const O=[],G=[],X=[];for(let s1=0;s1<t;s1++)O[s1]=0,G[s1]=0,X[s1]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:G,attributeDivisors:X,object:C,attributes:{},index:null}}function p(C,O,G,X){const s1=s.attributes,e1=O.attributes;let Z=0;const Q=G.getAttributes();for(const V in Q)if(Q[V].location>=0){const E1=s1[V];let L1=e1[V];if(L1===void 0&&(V==="instanceMatrix"&&C.instanceMatrix&&(L1=C.instanceMatrix),V==="instanceColor"&&C.instanceColor&&(L1=C.instanceColor)),E1===void 0||E1.attribute!==L1||L1&&E1.data!==L1.data)return!0;Z++}return s.attributesNum!==Z||s.index!==X}function v(C,O,G,X){const s1={},e1=O.attributes;let Z=0;const Q=G.getAttributes();for(const V in Q)if(Q[V].location>=0){let E1=e1[V];E1===void 0&&(V==="instanceMatrix"&&C.instanceMatrix&&(E1=C.instanceMatrix),V==="instanceColor"&&C.instanceColor&&(E1=C.instanceColor));const L1={};L1.attribute=E1,E1&&E1.data&&(L1.data=E1.data),s1[V]=L1,Z++}s.attributes=s1,s.attributesNum=Z,s.index=X}function _(){const C=s.newAttributes;for(let O=0,G=C.length;O<G;O++)C[O]=0}function m(C){d(C,0)}function d(C,O){const G=s.newAttributes,X=s.enabledAttributes,s1=s.attributeDivisors;G[C]=1,X[C]===0&&(n.enableVertexAttribArray(C),X[C]=1),s1[C]!==O&&(n.vertexAttribDivisor(C,O),s1[C]=O)}function b(){const C=s.newAttributes,O=s.enabledAttributes;for(let G=0,X=O.length;G<X;G++)O[G]!==C[G]&&(n.disableVertexAttribArray(G),O[G]=0)}function T(C,O,G,X,s1,e1,Z){Z===!0?n.vertexAttribIPointer(C,O,G,s1,e1):n.vertexAttribPointer(C,O,G,X,s1,e1)}function y(C,O,G,X){_();const s1=X.attributes,e1=G.getAttributes(),Z=O.defaultAttributeValues;for(const Q in e1){const V=e1[Q];if(V.location>=0){let p1=s1[Q];if(p1===void 0&&(Q==="instanceMatrix"&&C.instanceMatrix&&(p1=C.instanceMatrix),Q==="instanceColor"&&C.instanceColor&&(p1=C.instanceColor)),p1!==void 0){const E1=p1.normalized,L1=p1.itemSize,B1=e.get(p1);if(B1===void 0)continue;const l2=B1.buffer,n2=B1.type,V1=B1.bytesPerElement,a1=n2===n.INT||n2===n.UNSIGNED_INT||p1.gpuType===Fo;if(p1.isInterleavedBufferAttribute){const u1=p1.data,M1=u1.stride,D1=p1.offset;if(u1.isInstancedInterleavedBuffer){for(let O1=0;O1<V.locationSize;O1++)d(V.location+O1,u1.meshPerAttribute);C.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=u1.meshPerAttribute*u1.count)}else for(let O1=0;O1<V.locationSize;O1++)m(V.location+O1);n.bindBuffer(n.ARRAY_BUFFER,l2);for(let O1=0;O1<V.locationSize;O1++)T(V.location+O1,L1/V.locationSize,n2,E1,M1*V1,(D1+L1/V.locationSize*O1)*V1,a1)}else{if(p1.isInstancedBufferAttribute){for(let u1=0;u1<V.locationSize;u1++)d(V.location+u1,p1.meshPerAttribute);C.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=p1.meshPerAttribute*p1.count)}else for(let u1=0;u1<V.locationSize;u1++)m(V.location+u1);n.bindBuffer(n.ARRAY_BUFFER,l2);for(let u1=0;u1<V.locationSize;u1++)T(V.location+u1,L1/V.locationSize,n2,E1,L1*V1,L1/V.locationSize*u1*V1,a1)}}else if(Z!==void 0){const E1=Z[Q];if(E1!==void 0)switch(E1.length){case 2:n.vertexAttrib2fv(V.location,E1);break;case 3:n.vertexAttrib3fv(V.location,E1);break;case 4:n.vertexAttrib4fv(V.location,E1);break;default:n.vertexAttrib1fv(V.location,E1)}}}}b()}function w(){L();for(const C in i){const O=i[C];for(const G in O){const X=O[G];for(const s1 in X)u(X[s1].object),delete X[s1];delete O[G]}delete i[C]}}function I(C){if(i[C.id]===void 0)return;const O=i[C.id];for(const G in O){const X=O[G];for(const s1 in X)u(X[s1].object),delete X[s1];delete O[G]}delete i[C.id]}function D(C){for(const O in i){const G=i[O];if(G[C.id]===void 0)continue;const X=G[C.id];for(const s1 in X)u(X[s1].object),delete X[s1];delete G[C.id]}}function L(){E(),a=!0,s!==r&&(s=r,c(s.object))}function E(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:o,reset:L,resetDefaultState:E,dispose:w,releaseStatesOfGeometry:I,releaseStatesOfProgram:D,initAttributes:_,enableAttribute:m,disableUnusedAttributes:b}}function Xp(n,e,t){let i;function r(c){i=c}function s(c,u){n.drawArrays(i,c,u),t.update(u,i,1)}function a(c,u,h){h!==0&&(n.drawArraysInstanced(i,c,u,h),t.update(u,i,h))}function o(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,u,0,h);let p=0;for(let v=0;v<h;v++)p+=u[v];t.update(p,i,1)}function l(c,u,h,f){if(h===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let v=0;v<c.length;v++)a(c[v],u[v],f[v]);else{p.multiDrawArraysInstancedWEBGL(i,c,0,u,0,f,0,h);let v=0;for(let _=0;_<h;_++)v+=u[_]*f[_];t.update(v,i,1)}}this.setMode=r,this.render=s,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=l}function qp(n,e,t,i){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const D=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function a(D){return!(D!==_e&&i.convert(D)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(D){const L=D===ni&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(D!==De&&i.convert(D)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&D!==Je&&!L)}function l(D){if(D==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";D="mediump"}return D==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,f=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),p=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),v=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),d=n.getParameter(n.MAX_VERTEX_ATTRIBS),b=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),T=n.getParameter(n.MAX_VARYING_VECTORS),y=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),w=v>0,I=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:a,textureTypeReadable:o,precision:c,logarithmicDepthBuffer:h,reversedDepthBuffer:f,maxTextures:p,maxVertexTextures:v,maxTextureSize:_,maxCubemapSize:m,maxAttributes:d,maxVertexUniforms:b,maxVaryings:T,maxFragmentUniforms:y,vertexTextures:w,maxSamples:I}}function $p(n){const e=this;let t=null,i=0,r=!1,s=!1;const a=new Xt,o=new s2,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const p=h.length!==0||f||i!==0||r;return r=f,i=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,p){const v=h.clippingPlanes,_=h.clipIntersection,m=h.clipShadows,d=n.get(h);if(!r||v===null||v.length===0||s&&!m)s?u(null):c();else{const b=s?0:i,T=b*4;let y=d.clippingState||null;l.value=y,y=u(v,f,T,p);for(let w=0;w!==T;++w)y[w]=t[w];d.clippingState=y,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,p,v){const _=h!==null?h.length:0;let m=null;if(_!==0){if(m=l.value,v!==!0||m===null){const d=p+_*4,b=f.matrixWorldInverse;o.getNormalMatrix(b),(m===null||m.length<d)&&(m=new Float32Array(d));for(let T=0,y=p;T!==_;++T,y+=4)a.copy(h[T]).applyMatrix4(b,o),a.normal.toArray(m,y),m[y+3]=a.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,m}}function Yp(n){let e=new WeakMap;function t(a,o){return o===va?a.mapping=j0:o===xa&&(a.mapping=K0),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===va||o===xa)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new qf(l.height);return c.fromEquirectangularTexture(n,a),e.set(a,c),a.addEventListener("dispose",r),t(c.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const P0=4,p9=[.125,.215,.35,.446,.526,.582],Kt=20,Is=new Vc,m9=new _2;let Ds=null,Us=0,Fs=0,Os=!1;const qt=(1+Math.sqrt(5))/2,C0=1/qt,_9=[new J(-qt,C0,0),new J(qt,C0,0),new J(-C0,0,qt),new J(C0,0,qt),new J(0,qt,-C0),new J(0,qt,C0),new J(-1,1,-1),new J(1,1,-1),new J(-1,1,1),new J(1,1,1)],jp=new J;class g9{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100,s={}){const{size:a=256,position:o=jp}=s;Ds=this._renderer.getRenderTarget(),Us=this._renderer.getActiveCubeFace(),Fs=this._renderer.getActiveMipmapLevel(),Os=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,r,l,o),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=y9(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=x9(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ds,Us,Fs),this._renderer.xr.enabled=Os,e.scissorTest=!1,Bi(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===j0||e.mapping===K0?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ds=this._renderer.getRenderTarget(),Us=this._renderer.getActiveCubeFace(),Fs=this._renderer.getActiveMipmapLevel(),Os=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Re,minFilter:Re,generateMipmaps:!1,type:ni,format:_e,colorSpace:Z0,depthBuffer:!1},r=v9(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=v9(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Kp(s)),this._blurMaterial=Zp(s,e,t)}return r}_compileMaterial(e){const t=new te(this._lodPlanes[0],e);this._renderer.compile(t,Is)}_sceneToCubeUV(e,t,i,r,s){const l=new J3(90,1,t,i),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,p=h.toneMapping;h.getClearColor(m9),h.toneMapping=Mt,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(r),h.clearDepth(),h.setRenderTarget(null));const _=new Ic({name:"PMREM.Background",side:C3,depthWrite:!1,depthTest:!1}),m=new te(new ai,_);let d=!1;const b=e.background;b?b.isColor&&(_.color.copy(b),e.background=null,d=!0):(_.color.copy(m9),d=!0);for(let T=0;T<6;T++){const y=T%3;y===0?(l.up.set(0,c[T],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[T],s.y,s.z)):y===1?(l.up.set(0,0,c[T]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[T],s.z)):(l.up.set(0,c[T],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[T]));const w=this._cubeSize;Bi(r,y*w,T>2?w:0,w,w),h.setRenderTarget(r),d&&h.render(m,l),h.render(e,l)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=p,h.autoClear=f,e.background=b}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===j0||e.mapping===K0;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=y9()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=x9());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new te(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Bi(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(a,Is)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=_9[(r-s-1)%_9.length];this._blur(e,s-1,s,a,o)}t.autoClear=i}_blur(e,t,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new te(this._lodPlanes[r],c),f=c.uniforms,p=this._sizeLods[i]-1,v=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Kt-1),_=s/v,m=isFinite(s)?1+Math.floor(u*_):Kt;m>Kt&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Kt}`);const d=[];let b=0;for(let D=0;D<Kt;++D){const L=D/_,E=Math.exp(-L*L/2);d.push(E),D===0?b+=E:D<m&&(b+=2*E)}for(let D=0;D<d.length;D++)d[D]=d[D]/b;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=d,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:T}=this;f.dTheta.value=v,f.mipInt.value=T-i;const y=this._sizeLods[r],w=3*y*(r>T-P0?r-T+P0:0),I=4*(this._cubeSize-y);Bi(t,w,I,3*y,2*y),l.setRenderTarget(t),l.render(h,Is)}}function Kp(n){const e=[],t=[],i=[];let r=n;const s=n-P0+1+p9.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);t.push(o);let l=1/o;a>n-P0?l=p9[a-n+P0-1]:a===0&&(l=0),i.push(l);const c=1/(o-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],p=6,v=6,_=3,m=2,d=1,b=new Float32Array(_*v*p),T=new Float32Array(m*v*p),y=new Float32Array(d*v*p);for(let I=0;I<p;I++){const D=I%3*2/3-1,L=I>2?0:-1,E=[D,L,0,D+2/3,L,0,D+2/3,L+1,0,D,L,0,D+2/3,L+1,0,D,L+1,0];b.set(E,_*v*I),T.set(f,m*v*I);const C=[I,I,I,I,I,I];y.set(C,d*v*I)}const w=new Oe;w.setAttribute("position",new ye(b,_)),w.setAttribute("uv",new ye(T,m)),w.setAttribute("faceIndex",new ye(y,d)),e.push(w),r>P0&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function v9(n,e,t){const i=new o0(n,e,t);return i.texture.mapping=Fr,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Bi(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function Zp(n,e,t){const i=new Float32Array(Kt),r=new J(0,1,0);return new Ct({name:"SphericalGaussianBlur",defines:{n:Kt,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Go(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:yt,depthTest:!1,depthWrite:!1})}function x9(){return new Ct({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Go(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:yt,depthTest:!1,depthWrite:!1})}function y9(){return new Ct({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Go(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:yt,depthTest:!1,depthWrite:!1})}function Go(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Jp(n){let e=new WeakMap,t=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===va||l===xa,u=l===j0||l===K0;if(c||u){let h=e.get(o);const f=h!==void 0?h.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==f)return t===null&&(t=new g9(n)),h=c?t.fromEquirectangular(o,h):t.fromCubemap(o,h),h.texture.pmremVersion=o.pmremVersion,e.set(o,h),h.texture;if(h!==void 0)return h.texture;{const p=o.image;return c&&p&&p.height>0||u&&p&&r(p)?(t===null&&(t=new g9(n)),h=c?t.fromEquirectangular(o):t.fromCubemap(o),h.texture.pmremVersion=o.pmremVersion,e.set(o,h),o.addEventListener("dispose",s),h.texture):null}}}return o}function r(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:a}}function Qp(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const r=t(i);return r===null&&qn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function em(n,e,t,i){const r={},s=new WeakMap;function a(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const v in f.attributes)e.remove(f.attributes[v]);f.removeEventListener("dispose",a),delete r[f.id];const p=s.get(f);p&&(e.remove(p),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(h,f){return r[f.id]===!0||(f.addEventListener("dispose",a),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],n.ARRAY_BUFFER)}function c(h){const f=[],p=h.index,v=h.attributes.position;let _=0;if(p!==null){const b=p.array;_=p.version;for(let T=0,y=b.length;T<y;T+=3){const w=b[T+0],I=b[T+1],D=b[T+2];f.push(w,I,I,D,D,w)}}else if(v!==void 0){const b=v.array;_=v.version;for(let T=0,y=b.length/3-1;T<y;T+=3){const w=T+0,I=T+1,D=T+2;f.push(w,I,I,D,D,w)}}else return;const m=new(Ac(f)?Uc:Dc)(f,1);m.version=_;const d=s.get(h);d&&e.remove(d),s.set(h,m)}function u(h){const f=s.get(h);if(f){const p=h.index;p!==null&&f.version<p.version&&c(h)}else c(h);return s.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function tm(n,e,t){let i;function r(f){i=f}let s,a;function o(f){s=f.type,a=f.bytesPerElement}function l(f,p){n.drawElements(i,p,s,f*a),t.update(p,i,1)}function c(f,p,v){v!==0&&(n.drawElementsInstanced(i,p,s,f*a,v),t.update(p,i,v))}function u(f,p,v){if(v===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,p,0,s,f,0,v);let m=0;for(let d=0;d<v;d++)m+=p[d];t.update(m,i,1)}function h(f,p,v,_){if(v===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let d=0;d<f.length;d++)c(f[d]/a,p[d],_[d]);else{m.multiDrawElementsInstancedWEBGL(i,p,0,s,f,0,_,0,v);let d=0;for(let b=0;b<v;b++)d+=p[b]*_[b];t.update(d,i,1)}}this.setMode=r,this.setIndex=o,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function nm(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(t.calls++,a){case n.TRIANGLES:t.triangles+=o*(s/3);break;case n.LINES:t.lines+=o*(s/2);break;case n.LINE_STRIP:t.lines+=o*(s-1);break;case n.LINE_LOOP:t.lines+=o*s;break;case n.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function im(n,e,t){const i=new WeakMap,r=new B2;function s(a,o,l){const c=a.morphTargetInfluences,u=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,h=u!==void 0?u.length:0;let f=i.get(o);if(f===void 0||f.count!==h){let C=function(){L.dispose(),i.delete(o),o.removeEventListener("dispose",C)};var p=C;f!==void 0&&f.texture.dispose();const v=o.morphAttributes.position!==void 0,_=o.morphAttributes.normal!==void 0,m=o.morphAttributes.color!==void 0,d=o.morphAttributes.position||[],b=o.morphAttributes.normal||[],T=o.morphAttributes.color||[];let y=0;v===!0&&(y=1),_===!0&&(y=2),m===!0&&(y=3);let w=o.attributes.position.count*y,I=1;w>e.maxTextureSize&&(I=Math.ceil(w/e.maxTextureSize),w=e.maxTextureSize);const D=new Float32Array(w*I*4*h),L=new Cc(D,w,I,h);L.type=Je,L.needsUpdate=!0;const E=y*4;for(let O=0;O<h;O++){const G=d[O],X=b[O],s1=T[O],e1=w*I*4*O;for(let Z=0;Z<G.count;Z++){const Q=Z*E;v===!0&&(r.fromBufferAttribute(G,Z),D[e1+Q+0]=r.x,D[e1+Q+1]=r.y,D[e1+Q+2]=r.z,D[e1+Q+3]=0),_===!0&&(r.fromBufferAttribute(X,Z),D[e1+Q+4]=r.x,D[e1+Q+5]=r.y,D[e1+Q+6]=r.z,D[e1+Q+7]=0),m===!0&&(r.fromBufferAttribute(s1,Z),D[e1+Q+8]=r.x,D[e1+Q+9]=r.y,D[e1+Q+10]=r.z,D[e1+Q+11]=s1.itemSize===4?r.w:1)}}f={count:h,texture:L,size:new y2(w,I)},i.set(o,f),o.addEventListener("dispose",C)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)l.getUniforms().setValue(n,"morphTexture",a.morphTexture,t);else{let v=0;for(let m=0;m<c.length;m++)v+=c[m];const _=o.morphTargetsRelative?1:1-v;l.getUniforms().setValue(n,"morphTargetBaseInfluence",_),l.getUniforms().setValue(n,"morphTargetInfluences",c)}l.getUniforms().setValue(n,"morphTargetsTexture",f.texture,t),l.getUniforms().setValue(n,"morphTargetsTextureSize",f.size)}return{update:s}}function rm(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),r.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}const Wc=new S3,M9=new zc(1,1),Xc=new Cc,qc=new Rf,$c=new Nc,S9=[],E9=[],b9=new Float32Array(16),T9=new Float32Array(9),w9=new Float32Array(4);function cn(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=S9[r];if(s===void 0&&(s=new Float32Array(r),S9[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(s,o)}return s}function Y2(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function j2(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Br(n,e){let t=E9[e];t===void 0&&(t=new Int32Array(e),E9[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function sm(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function am(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Y2(t,e))return;n.uniform2fv(this.addr,e),j2(t,e)}}function om(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Y2(t,e))return;n.uniform3fv(this.addr,e),j2(t,e)}}function lm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Y2(t,e))return;n.uniform4fv(this.addr,e),j2(t,e)}}function cm(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Y2(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),j2(t,e)}else{if(Y2(t,i))return;w9.set(i),n.uniformMatrix2fv(this.addr,!1,w9),j2(t,i)}}function um(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Y2(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),j2(t,e)}else{if(Y2(t,i))return;T9.set(i),n.uniformMatrix3fv(this.addr,!1,T9),j2(t,i)}}function hm(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Y2(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),j2(t,e)}else{if(Y2(t,i))return;b9.set(i),n.uniformMatrix4fv(this.addr,!1,b9),j2(t,i)}}function fm(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function dm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Y2(t,e))return;n.uniform2iv(this.addr,e),j2(t,e)}}function pm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Y2(t,e))return;n.uniform3iv(this.addr,e),j2(t,e)}}function mm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Y2(t,e))return;n.uniform4iv(this.addr,e),j2(t,e)}}function _m(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function gm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Y2(t,e))return;n.uniform2uiv(this.addr,e),j2(t,e)}}function vm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Y2(t,e))return;n.uniform3uiv(this.addr,e),j2(t,e)}}function xm(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Y2(t,e))return;n.uniform4uiv(this.addr,e),j2(t,e)}}function ym(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);let s;this.type===n.SAMPLER_2D_SHADOW?(M9.compareFunction=wc,s=M9):s=Wc,t.setTexture2D(e||s,r)}function Mm(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||qc,r)}function Sm(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||$c,r)}function Em(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||Xc,r)}function bm(n){switch(n){case 5126:return sm;case 35664:return am;case 35665:return om;case 35666:return lm;case 35674:return cm;case 35675:return um;case 35676:return hm;case 5124:case 35670:return fm;case 35667:case 35671:return dm;case 35668:case 35672:return pm;case 35669:case 35673:return mm;case 5125:return _m;case 36294:return gm;case 36295:return vm;case 36296:return xm;case 35678:case 36198:case 36298:case 36306:case 35682:return ym;case 35679:case 36299:case 36307:return Mm;case 35680:case 36300:case 36308:case 36293:return Sm;case 36289:case 36303:case 36311:case 36292:return Em}}function Tm(n,e){n.uniform1fv(this.addr,e)}function wm(n,e){const t=cn(e,this.size,2);n.uniform2fv(this.addr,t)}function Am(n,e){const t=cn(e,this.size,3);n.uniform3fv(this.addr,t)}function Cm(n,e){const t=cn(e,this.size,4);n.uniform4fv(this.addr,t)}function Rm(n,e){const t=cn(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function Lm(n,e){const t=cn(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function Pm(n,e){const t=cn(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function Im(n,e){n.uniform1iv(this.addr,e)}function Dm(n,e){n.uniform2iv(this.addr,e)}function Um(n,e){n.uniform3iv(this.addr,e)}function Fm(n,e){n.uniform4iv(this.addr,e)}function Om(n,e){n.uniform1uiv(this.addr,e)}function Nm(n,e){n.uniform2uiv(this.addr,e)}function Bm(n,e){n.uniform3uiv(this.addr,e)}function zm(n,e){n.uniform4uiv(this.addr,e)}function km(n,e,t){const i=this.cache,r=e.length,s=Br(t,r);Y2(i,s)||(n.uniform1iv(this.addr,s),j2(i,s));for(let a=0;a!==r;++a)t.setTexture2D(e[a]||Wc,s[a])}function Hm(n,e,t){const i=this.cache,r=e.length,s=Br(t,r);Y2(i,s)||(n.uniform1iv(this.addr,s),j2(i,s));for(let a=0;a!==r;++a)t.setTexture3D(e[a]||qc,s[a])}function Vm(n,e,t){const i=this.cache,r=e.length,s=Br(t,r);Y2(i,s)||(n.uniform1iv(this.addr,s),j2(i,s));for(let a=0;a!==r;++a)t.setTextureCube(e[a]||$c,s[a])}function Gm(n,e,t){const i=this.cache,r=e.length,s=Br(t,r);Y2(i,s)||(n.uniform1iv(this.addr,s),j2(i,s));for(let a=0;a!==r;++a)t.setTexture2DArray(e[a]||Xc,s[a])}function Wm(n){switch(n){case 5126:return Tm;case 35664:return wm;case 35665:return Am;case 35666:return Cm;case 35674:return Rm;case 35675:return Lm;case 35676:return Pm;case 5124:case 35670:return Im;case 35667:case 35671:return Dm;case 35668:case 35672:return Um;case 35669:case 35673:return Fm;case 5125:return Om;case 36294:return Nm;case 36295:return Bm;case 36296:return zm;case 35678:case 36198:case 36298:case 36306:case 35682:return km;case 35679:case 36299:case 36307:return Hm;case 35680:case 36300:case 36308:case 36293:return Vm;case 36289:case 36303:case 36311:case 36292:return Gm}}class Xm{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=bm(t.type)}}class qm{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Wm(t.type)}}class $m{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const o=r[s];o.setValue(e,t[o.id],i)}}}const Ns=/(\w+)(\])?(\[|\.)?/g;function A9(n,e){n.seq.push(e),n.map[e.id]=e}function Ym(n,e,t){const i=n.name,r=i.length;for(Ns.lastIndex=0;;){const s=Ns.exec(i),a=Ns.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){A9(t,c===void 0?new Xm(o,n,e):new qm(o,n,e));break}else{let h=t.map[o];h===void 0&&(h=new $m(o),A9(t,h)),t=h}}}class ji{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),a=e.getUniformLocation(t,s.name);Ym(s,a,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const a=e[r];a.id in t&&i.push(a)}return i}}function C9(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const jm=37297;let Km=0;function Zm(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=r;a<s;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return i.join(`
`)}const R9=new s2;function Jm(n){m2._getMatrix(R9,m2.workingColorSpace,n);const e=`mat3( ${R9.elements.map(t=>t.toFixed(4))} )`;switch(m2.getTransfer(n)){case hr:return[e,"LinearTransferOETF"];case E2:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[e,"LinearTransferOETF"]}}function L9(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),s=(n.getShaderInfoLog(e)||"").trim();if(i&&s==="")return"";const a=/ERROR: 0:(\d+)/.exec(s);if(a){const o=parseInt(a[1]);return t.toUpperCase()+`

`+s+`

`+Zm(n.getShaderSource(e),o)}else return s}function Qm(n,e){const t=Jm(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function e8(n,e){let t;switch(e){case nf:t="Linear";break;case rf:t="Reinhard";break;case sf:t="Cineon";break;case af:t="ACESFilmic";break;case lf:t="AgX";break;case cf:t="Neutral";break;case of:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const zi=new J;function t8(){m2.getLuminanceCoefficients(zi);const n=zi.x.toFixed(4),e=zi.y.toFixed(4),t=zi.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function n8(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(bn).join(`
`)}function i8(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function r8(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),a=s.name;let o=1;s.type===n.FLOAT_MAT2&&(o=2),s.type===n.FLOAT_MAT3&&(o=3),s.type===n.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function bn(n){return n!==""}function P9(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function I9(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const s8=/^[ \t]*#include +<([\w\d./]+)>/gm;function Za(n){return n.replace(s8,o8)}const a8=new Map;function o8(n,e){let t=o2[e];if(t===void 0){const i=a8.get(e);if(i!==void 0)t=o2[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Za(t)}const l8=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function D9(n){return n.replace(l8,c8)}function c8(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function U9(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function u8(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===mc?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Fh?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===qe&&(e="SHADOWMAP_TYPE_VSM"),e}function h8(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case j0:case K0:e="ENVMAP_TYPE_CUBE";break;case Fr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function f8(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case K0:e="ENVMAP_MODE_REFRACTION";break}return e}function d8(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Uo:e="ENVMAP_BLENDING_MULTIPLY";break;case ef:e="ENVMAP_BLENDING_MIX";break;case tf:e="ENVMAP_BLENDING_ADD";break}return e}function p8(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function m8(n,e,t,i){const r=n.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=u8(t),c=h8(t),u=f8(t),h=d8(t),f=p8(t),p=n8(t),v=i8(s),_=r.createProgram();let m,d,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(bn).join(`
`),m.length>0&&(m+=`
`),d=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(bn).join(`
`),d.length>0&&(d+=`
`)):(m=[U9(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(bn).join(`
`),d=[U9(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Mt?"#define TONE_MAPPING":"",t.toneMapping!==Mt?o2.tonemapping_pars_fragment:"",t.toneMapping!==Mt?e8("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",o2.colorspace_pars_fragment,Qm("linearToOutputTexel",t.outputColorSpace),t8(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(bn).join(`
`)),a=Za(a),a=P9(a,t),a=I9(a,t),o=Za(o),o=P9(o,t),o=I9(o,t),a=D9(a),o=D9(o),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,m=[p,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,d=["#define varying in",t.glslVersion===G4?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===G4?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+d);const T=b+m+a,y=b+d+o,w=C9(r,r.VERTEX_SHADER,T),I=C9(r,r.FRAGMENT_SHADER,y);r.attachShader(_,w),r.attachShader(_,I),t.index0AttributeName!==void 0?r.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_);function D(O){if(n.debug.checkShaderErrors){const G=r.getProgramInfoLog(_)||"",X=r.getShaderInfoLog(w)||"",s1=r.getShaderInfoLog(I)||"",e1=G.trim(),Z=X.trim(),Q=s1.trim();let V=!0,p1=!0;if(r.getProgramParameter(_,r.LINK_STATUS)===!1)if(V=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,_,w,I);else{const E1=L9(r,w,"vertex"),L1=L9(r,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,r.VALIDATE_STATUS)+`

Material Name: `+O.name+`
Material Type: `+O.type+`

Program Info Log: `+e1+`
`+E1+`
`+L1)}else e1!==""?console.warn("THREE.WebGLProgram: Program Info Log:",e1):(Z===""||Q==="")&&(p1=!1);p1&&(O.diagnostics={runnable:V,programLog:e1,vertexShader:{log:Z,prefix:m},fragmentShader:{log:Q,prefix:d}})}r.deleteShader(w),r.deleteShader(I),L=new ji(r,_),E=r8(r,_)}let L;this.getUniforms=function(){return L===void 0&&D(this),L};let E;this.getAttributes=function(){return E===void 0&&D(this),E};let C=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return C===!1&&(C=r.getProgramParameter(_,jm)),C},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Km++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=w,this.fragmentShader=I,this}let _8=0;class g8{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new v8(e),t.set(e,i)),i}}class v8{constructor(e){this.id=_8++,this.code=e,this.usedTimes=0}}function x8(n,e,t,i,r,s,a){const o=new Lc,l=new g8,c=new Set,u=[],h=r.logarithmicDepthBuffer,f=r.vertexTextures;let p=r.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(E){return c.add(E),E===0?"uv":`uv${E}`}function m(E,C,O,G,X){const s1=G.fog,e1=X.geometry,Z=E.isMeshStandardMaterial?G.environment:null,Q=(E.isMeshStandardMaterial?t:e).get(E.envMap||Z),V=Q&&Q.mapping===Fr?Q.image.height:null,p1=v[E.type];E.precision!==null&&(p=r.getMaxPrecision(E.precision),p!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",p,"instead."));const E1=e1.morphAttributes.position||e1.morphAttributes.normal||e1.morphAttributes.color,L1=E1!==void 0?E1.length:0;let B1=0;e1.morphAttributes.position!==void 0&&(B1=1),e1.morphAttributes.normal!==void 0&&(B1=2),e1.morphAttributes.color!==void 0&&(B1=3);let l2,n2,V1,a1;if(p1){const d2=we[p1];l2=d2.vertexShader,n2=d2.fragmentShader}else l2=E.vertexShader,n2=E.fragmentShader,l.update(E),V1=l.getVertexShaderID(E),a1=l.getFragmentShaderID(E);const u1=n.getRenderTarget(),M1=n.state.buffers.depth.getReversed(),D1=X.isInstancedMesh===!0,O1=X.isBatchedMesh===!0,Q1=!!E.map,F=!!E.matcap,M=!!Q,j=!!E.aoMap,i1=!!E.lightMap,$=!!E.bumpMap,q=!!E.normalMap,h1=!!E.displacementMap,k=!!E.emissiveMap,l1=!!E.metalnessMap,c1=!!E.roughnessMap,w1=E.anisotropy>0,A=E.clearcoat>0,S=E.dispersion>0,N=E.iridescence>0,Y=E.sheen>0,o1=E.transmission>0,K=w1&&!!E.anisotropyMap,A1=A&&!!E.clearcoatMap,_1=A&&!!E.clearcoatNormalMap,P1=A&&!!E.clearcoatRoughnessMap,I1=N&&!!E.iridescenceMap,g1=N&&!!E.iridescenceThicknessMap,T1=Y&&!!E.sheenColorMap,z1=Y&&!!E.sheenRoughnessMap,U1=!!E.specularMap,b1=!!E.specularColorMap,e2=!!E.specularIntensityMap,B=o1&&!!E.transmissionMap,y1=o1&&!!E.thicknessMap,S1=!!E.gradientMap,N1=!!E.alphaMap,m1=E.alphaTest>0,f1=!!E.alphaHash,H1=!!E.extensions;let G1=Mt;E.toneMapped&&(u1===null||u1.isXRRenderTarget===!0)&&(G1=n.toneMapping);const S2={shaderID:p1,shaderType:E.type,shaderName:E.name,vertexShader:l2,fragmentShader:n2,defines:E.defines,customVertexShaderID:V1,customFragmentShaderID:a1,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:p,batching:O1,batchingColor:O1&&X._colorsTexture!==null,instancing:D1,instancingColor:D1&&X.instanceColor!==null,instancingMorph:D1&&X.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:u1===null?n.outputColorSpace:u1.isXRRenderTarget===!0?u1.texture.colorSpace:Z0,alphaToCoverage:!!E.alphaToCoverage,map:Q1,matcap:F,envMap:M,envMapMode:M&&Q.mapping,envMapCubeUVHeight:V,aoMap:j,lightMap:i1,bumpMap:$,normalMap:q,displacementMap:f&&h1,emissiveMap:k,normalMapObjectSpace:q&&E.normalMapType===df,normalMapTangentSpace:q&&E.normalMapType===Tc,metalnessMap:l1,roughnessMap:c1,anisotropy:w1,anisotropyMap:K,clearcoat:A,clearcoatMap:A1,clearcoatNormalMap:_1,clearcoatRoughnessMap:P1,dispersion:S,iridescence:N,iridescenceMap:I1,iridescenceThicknessMap:g1,sheen:Y,sheenColorMap:T1,sheenRoughnessMap:z1,specularMap:U1,specularColorMap:b1,specularIntensityMap:e2,transmission:o1,transmissionMap:B,thicknessMap:y1,gradientMap:S1,opaque:E.transparent===!1&&E.blending===k0&&E.alphaToCoverage===!1,alphaMap:N1,alphaTest:m1,alphaHash:f1,combine:E.combine,mapUv:Q1&&_(E.map.channel),aoMapUv:j&&_(E.aoMap.channel),lightMapUv:i1&&_(E.lightMap.channel),bumpMapUv:$&&_(E.bumpMap.channel),normalMapUv:q&&_(E.normalMap.channel),displacementMapUv:h1&&_(E.displacementMap.channel),emissiveMapUv:k&&_(E.emissiveMap.channel),metalnessMapUv:l1&&_(E.metalnessMap.channel),roughnessMapUv:c1&&_(E.roughnessMap.channel),anisotropyMapUv:K&&_(E.anisotropyMap.channel),clearcoatMapUv:A1&&_(E.clearcoatMap.channel),clearcoatNormalMapUv:_1&&_(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:P1&&_(E.clearcoatRoughnessMap.channel),iridescenceMapUv:I1&&_(E.iridescenceMap.channel),iridescenceThicknessMapUv:g1&&_(E.iridescenceThicknessMap.channel),sheenColorMapUv:T1&&_(E.sheenColorMap.channel),sheenRoughnessMapUv:z1&&_(E.sheenRoughnessMap.channel),specularMapUv:U1&&_(E.specularMap.channel),specularColorMapUv:b1&&_(E.specularColorMap.channel),specularIntensityMapUv:e2&&_(E.specularIntensityMap.channel),transmissionMapUv:B&&_(E.transmissionMap.channel),thicknessMapUv:y1&&_(E.thicknessMap.channel),alphaMapUv:N1&&_(E.alphaMap.channel),vertexTangents:!!e1.attributes.tangent&&(q||w1),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!e1.attributes.color&&e1.attributes.color.itemSize===4,pointsUvs:X.isPoints===!0&&!!e1.attributes.uv&&(Q1||N1),fog:!!s1,useFog:E.fog===!0,fogExp2:!!s1&&s1.isFogExp2,flatShading:E.flatShading===!0&&E.wireframe===!1,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:M1,skinning:X.isSkinnedMesh===!0,morphTargets:e1.morphAttributes.position!==void 0,morphNormals:e1.morphAttributes.normal!==void 0,morphColors:e1.morphAttributes.color!==void 0,morphTargetsCount:L1,morphTextureStride:B1,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numLightProbes:C.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:E.dithering,shadowMapEnabled:n.shadowMap.enabled&&O.length>0,shadowMapType:n.shadowMap.type,toneMapping:G1,decodeVideoTexture:Q1&&E.map.isVideoTexture===!0&&m2.getTransfer(E.map.colorSpace)===E2,decodeVideoTextureEmissive:k&&E.emissiveMap.isVideoTexture===!0&&m2.getTransfer(E.emissiveMap.colorSpace)===E2,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===Ze,flipSided:E.side===C3,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:H1&&E.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(H1&&E.extensions.multiDraw===!0||O1)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return S2.vertexUv1s=c.has(1),S2.vertexUv2s=c.has(2),S2.vertexUv3s=c.has(3),c.clear(),S2}function d(E){const C=[];if(E.shaderID?C.push(E.shaderID):(C.push(E.customVertexShaderID),C.push(E.customFragmentShaderID)),E.defines!==void 0)for(const O in E.defines)C.push(O),C.push(E.defines[O]);return E.isRawShaderMaterial===!1&&(b(C,E),T(C,E),C.push(n.outputColorSpace)),C.push(E.customProgramCacheKey),C.join()}function b(E,C){E.push(C.precision),E.push(C.outputColorSpace),E.push(C.envMapMode),E.push(C.envMapCubeUVHeight),E.push(C.mapUv),E.push(C.alphaMapUv),E.push(C.lightMapUv),E.push(C.aoMapUv),E.push(C.bumpMapUv),E.push(C.normalMapUv),E.push(C.displacementMapUv),E.push(C.emissiveMapUv),E.push(C.metalnessMapUv),E.push(C.roughnessMapUv),E.push(C.anisotropyMapUv),E.push(C.clearcoatMapUv),E.push(C.clearcoatNormalMapUv),E.push(C.clearcoatRoughnessMapUv),E.push(C.iridescenceMapUv),E.push(C.iridescenceThicknessMapUv),E.push(C.sheenColorMapUv),E.push(C.sheenRoughnessMapUv),E.push(C.specularMapUv),E.push(C.specularColorMapUv),E.push(C.specularIntensityMapUv),E.push(C.transmissionMapUv),E.push(C.thicknessMapUv),E.push(C.combine),E.push(C.fogExp2),E.push(C.sizeAttenuation),E.push(C.morphTargetsCount),E.push(C.morphAttributeCount),E.push(C.numDirLights),E.push(C.numPointLights),E.push(C.numSpotLights),E.push(C.numSpotLightMaps),E.push(C.numHemiLights),E.push(C.numRectAreaLights),E.push(C.numDirLightShadows),E.push(C.numPointLightShadows),E.push(C.numSpotLightShadows),E.push(C.numSpotLightShadowsWithMaps),E.push(C.numLightProbes),E.push(C.shadowMapType),E.push(C.toneMapping),E.push(C.numClippingPlanes),E.push(C.numClipIntersection),E.push(C.depthPacking)}function T(E,C){o.disableAll(),C.supportsVertexTextures&&o.enable(0),C.instancing&&o.enable(1),C.instancingColor&&o.enable(2),C.instancingMorph&&o.enable(3),C.matcap&&o.enable(4),C.envMap&&o.enable(5),C.normalMapObjectSpace&&o.enable(6),C.normalMapTangentSpace&&o.enable(7),C.clearcoat&&o.enable(8),C.iridescence&&o.enable(9),C.alphaTest&&o.enable(10),C.vertexColors&&o.enable(11),C.vertexAlphas&&o.enable(12),C.vertexUv1s&&o.enable(13),C.vertexUv2s&&o.enable(14),C.vertexUv3s&&o.enable(15),C.vertexTangents&&o.enable(16),C.anisotropy&&o.enable(17),C.alphaHash&&o.enable(18),C.batching&&o.enable(19),C.dispersion&&o.enable(20),C.batchingColor&&o.enable(21),C.gradientMap&&o.enable(22),E.push(o.mask),o.disableAll(),C.fog&&o.enable(0),C.useFog&&o.enable(1),C.flatShading&&o.enable(2),C.logarithmicDepthBuffer&&o.enable(3),C.reversedDepthBuffer&&o.enable(4),C.skinning&&o.enable(5),C.morphTargets&&o.enable(6),C.morphNormals&&o.enable(7),C.morphColors&&o.enable(8),C.premultipliedAlpha&&o.enable(9),C.shadowMapEnabled&&o.enable(10),C.doubleSided&&o.enable(11),C.flipSided&&o.enable(12),C.useDepthPacking&&o.enable(13),C.dithering&&o.enable(14),C.transmission&&o.enable(15),C.sheen&&o.enable(16),C.opaque&&o.enable(17),C.pointsUvs&&o.enable(18),C.decodeVideoTexture&&o.enable(19),C.decodeVideoTextureEmissive&&o.enable(20),C.alphaToCoverage&&o.enable(21),E.push(o.mask)}function y(E){const C=v[E.type];let O;if(C){const G=we[C];O=Vf.clone(G.uniforms)}else O=E.uniforms;return O}function w(E,C){let O;for(let G=0,X=u.length;G<X;G++){const s1=u[G];if(s1.cacheKey===C){O=s1,++O.usedTimes;break}}return O===void 0&&(O=new m8(n,C,E,s),u.push(O)),O}function I(E){if(--E.usedTimes===0){const C=u.indexOf(E);u[C]=u[u.length-1],u.pop(),E.destroy()}}function D(E){l.remove(E)}function L(){l.dispose()}return{getParameters:m,getProgramCacheKey:d,getUniforms:y,acquireProgram:w,releaseProgram:I,releaseShaderCache:D,programs:u,dispose:L}}function y8(){let n=new WeakMap;function e(a){return n.has(a)}function t(a){let o=n.get(a);return o===void 0&&(o={},n.set(a,o)),o}function i(a){n.delete(a)}function r(a,o,l){n.get(a)[o]=l}function s(){n=new WeakMap}return{has:e,get:t,remove:i,update:r,dispose:s}}function M8(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function F9(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function O9(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function a(h,f,p,v,_,m){let d=n[e];return d===void 0?(d={id:h.id,object:h,geometry:f,material:p,groupOrder:v,renderOrder:h.renderOrder,z:_,group:m},n[e]=d):(d.id=h.id,d.object=h,d.geometry=f,d.material=p,d.groupOrder=v,d.renderOrder=h.renderOrder,d.z=_,d.group=m),e++,d}function o(h,f,p,v,_,m){const d=a(h,f,p,v,_,m);p.transmission>0?i.push(d):p.transparent===!0?r.push(d):t.push(d)}function l(h,f,p,v,_,m){const d=a(h,f,p,v,_,m);p.transmission>0?i.unshift(d):p.transparent===!0?r.unshift(d):t.unshift(d)}function c(h,f){t.length>1&&t.sort(h||M8),i.length>1&&i.sort(f||F9),r.length>1&&r.sort(f||F9)}function u(){for(let h=e,f=n.length;h<f;h++){const p=n[h];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:o,unshift:l,finish:u,sort:c}}function S8(){let n=new WeakMap;function e(i,r){const s=n.get(i);let a;return s===void 0?(a=new O9,n.set(i,[a])):r>=s.length?(a=new O9,s.push(a)):a=s[r],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function E8(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new J,color:new _2};break;case"SpotLight":t={position:new J,direction:new J,color:new _2,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new J,color:new _2,distance:0,decay:0};break;case"HemisphereLight":t={direction:new J,skyColor:new _2,groundColor:new _2};break;case"RectAreaLight":t={color:new _2,position:new J,halfWidth:new J,halfHeight:new J};break}return n[e.id]=t,t}}}function b8(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new y2};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new y2};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new y2,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let T8=0;function w8(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function A8(n){const e=new E8,t=b8(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new J);const r=new J,s=new k2,a=new k2;function o(c){let u=0,h=0,f=0;for(let E=0;E<9;E++)i.probe[E].set(0,0,0);let p=0,v=0,_=0,m=0,d=0,b=0,T=0,y=0,w=0,I=0,D=0;c.sort(w8);for(let E=0,C=c.length;E<C;E++){const O=c[E],G=O.color,X=O.intensity,s1=O.distance,e1=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)u+=G.r*X,h+=G.g*X,f+=G.b*X;else if(O.isLightProbe){for(let Z=0;Z<9;Z++)i.probe[Z].addScaledVector(O.sh.coefficients[Z],X);D++}else if(O.isDirectionalLight){const Z=e.get(O);if(Z.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const Q=O.shadow,V=t.get(O);V.shadowIntensity=Q.intensity,V.shadowBias=Q.bias,V.shadowNormalBias=Q.normalBias,V.shadowRadius=Q.radius,V.shadowMapSize=Q.mapSize,i.directionalShadow[p]=V,i.directionalShadowMap[p]=e1,i.directionalShadowMatrix[p]=O.shadow.matrix,b++}i.directional[p]=Z,p++}else if(O.isSpotLight){const Z=e.get(O);Z.position.setFromMatrixPosition(O.matrixWorld),Z.color.copy(G).multiplyScalar(X),Z.distance=s1,Z.coneCos=Math.cos(O.angle),Z.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),Z.decay=O.decay,i.spot[_]=Z;const Q=O.shadow;if(O.map&&(i.spotLightMap[w]=O.map,w++,Q.updateMatrices(O),O.castShadow&&I++),i.spotLightMatrix[_]=Q.matrix,O.castShadow){const V=t.get(O);V.shadowIntensity=Q.intensity,V.shadowBias=Q.bias,V.shadowNormalBias=Q.normalBias,V.shadowRadius=Q.radius,V.shadowMapSize=Q.mapSize,i.spotShadow[_]=V,i.spotShadowMap[_]=e1,y++}_++}else if(O.isRectAreaLight){const Z=e.get(O);Z.color.copy(G).multiplyScalar(X),Z.halfWidth.set(O.width*.5,0,0),Z.halfHeight.set(0,O.height*.5,0),i.rectArea[m]=Z,m++}else if(O.isPointLight){const Z=e.get(O);if(Z.color.copy(O.color).multiplyScalar(O.intensity),Z.distance=O.distance,Z.decay=O.decay,O.castShadow){const Q=O.shadow,V=t.get(O);V.shadowIntensity=Q.intensity,V.shadowBias=Q.bias,V.shadowNormalBias=Q.normalBias,V.shadowRadius=Q.radius,V.shadowMapSize=Q.mapSize,V.shadowCameraNear=Q.camera.near,V.shadowCameraFar=Q.camera.far,i.pointShadow[v]=V,i.pointShadowMap[v]=e1,i.pointShadowMatrix[v]=O.shadow.matrix,T++}i.point[v]=Z,v++}else if(O.isHemisphereLight){const Z=e.get(O);Z.skyColor.copy(O.color).multiplyScalar(X),Z.groundColor.copy(O.groundColor).multiplyScalar(X),i.hemi[d]=Z,d++}}m>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=R1.LTC_FLOAT_1,i.rectAreaLTC2=R1.LTC_FLOAT_2):(i.rectAreaLTC1=R1.LTC_HALF_1,i.rectAreaLTC2=R1.LTC_HALF_2)),i.ambient[0]=u,i.ambient[1]=h,i.ambient[2]=f;const L=i.hash;(L.directionalLength!==p||L.pointLength!==v||L.spotLength!==_||L.rectAreaLength!==m||L.hemiLength!==d||L.numDirectionalShadows!==b||L.numPointShadows!==T||L.numSpotShadows!==y||L.numSpotMaps!==w||L.numLightProbes!==D)&&(i.directional.length=p,i.spot.length=_,i.rectArea.length=m,i.point.length=v,i.hemi.length=d,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=T,i.pointShadowMap.length=T,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=T,i.spotLightMatrix.length=y+w-I,i.spotLightMap.length=w,i.numSpotLightShadowsWithMaps=I,i.numLightProbes=D,L.directionalLength=p,L.pointLength=v,L.spotLength=_,L.rectAreaLength=m,L.hemiLength=d,L.numDirectionalShadows=b,L.numPointShadows=T,L.numSpotShadows=y,L.numSpotMaps=w,L.numLightProbes=D,i.version=T8++)}function l(c,u){let h=0,f=0,p=0,v=0,_=0;const m=u.matrixWorldInverse;for(let d=0,b=c.length;d<b;d++){const T=c[d];if(T.isDirectionalLight){const y=i.directional[h];y.direction.setFromMatrixPosition(T.matrixWorld),r.setFromMatrixPosition(T.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),h++}else if(T.isSpotLight){const y=i.spot[p];y.position.setFromMatrixPosition(T.matrixWorld),y.position.applyMatrix4(m),y.direction.setFromMatrixPosition(T.matrixWorld),r.setFromMatrixPosition(T.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),p++}else if(T.isRectAreaLight){const y=i.rectArea[v];y.position.setFromMatrixPosition(T.matrixWorld),y.position.applyMatrix4(m),a.identity(),s.copy(T.matrixWorld),s.premultiply(m),a.extractRotation(s),y.halfWidth.set(T.width*.5,0,0),y.halfHeight.set(0,T.height*.5,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),v++}else if(T.isPointLight){const y=i.point[f];y.position.setFromMatrixPosition(T.matrixWorld),y.position.applyMatrix4(m),f++}else if(T.isHemisphereLight){const y=i.hemi[_];y.direction.setFromMatrixPosition(T.matrixWorld),y.direction.transformDirection(m),_++}}}return{setup:o,setupView:l,state:i}}function N9(n){const e=new A8(n),t=[],i=[];function r(u){c.camera=u,t.length=0,i.length=0}function s(u){t.push(u)}function a(u){i.push(u)}function o(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:o,setupLightsView:l,pushLight:s,pushShadow:a}}function C8(n){let e=new WeakMap;function t(r,s=0){const a=e.get(r);let o;return a===void 0?(o=new N9(n),e.set(r,[o])):s>=a.length?(o=new N9(n),a.push(o)):o=a[s],o}function i(){e=new WeakMap}return{get:t,dispose:i}}const R8=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,L8=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function P8(n,e,t){let i=new Vo;const r=new y2,s=new y2,a=new B2,o=new ed({depthPacking:ff}),l=new td,c={},u=t.maxTextureSize,h={[At]:C3,[C3]:At,[Ze]:Ze},f=new Ct({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new y2},radius:{value:4}},vertexShader:R8,fragmentShader:L8}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const v=new Oe;v.setAttribute("position",new ye(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new te(v,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=mc;let d=this.type;this.render=function(I,D,L){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||I.length===0)return;const E=n.getRenderTarget(),C=n.getActiveCubeFace(),O=n.getActiveMipmapLevel(),G=n.state;G.setBlending(yt),G.buffers.depth.getReversed()===!0?G.buffers.color.setClear(0,0,0,0):G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);const X=d!==qe&&this.type===qe,s1=d===qe&&this.type!==qe;for(let e1=0,Z=I.length;e1<Z;e1++){const Q=I[e1],V=Q.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;r.copy(V.mapSize);const p1=V.getFrameExtents();if(r.multiply(p1),s.copy(V.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/p1.x),r.x=s.x*p1.x,V.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/p1.y),r.y=s.y*p1.y,V.mapSize.y=s.y)),V.map===null||X===!0||s1===!0){const L1=this.type!==qe?{minFilter:xe,magFilter:xe}:{};V.map!==null&&V.map.dispose(),V.map=new o0(r.x,r.y,L1),V.map.texture.name=Q.name+".shadowMap",V.camera.updateProjectionMatrix()}n.setRenderTarget(V.map),n.clear();const E1=V.getViewportCount();for(let L1=0;L1<E1;L1++){const B1=V.getViewport(L1);a.set(s.x*B1.x,s.y*B1.y,s.x*B1.z,s.y*B1.w),G.viewport(a),V.updateMatrices(Q,L1),i=V.getFrustum(),y(D,L,V.camera,Q,this.type)}V.isPointLightShadow!==!0&&this.type===qe&&b(V,L),V.needsUpdate=!1}d=this.type,m.needsUpdate=!1,n.setRenderTarget(E,C,O)};function b(I,D){const L=e.update(_);f.defines.VSM_SAMPLES!==I.blurSamples&&(f.defines.VSM_SAMPLES=I.blurSamples,p.defines.VSM_SAMPLES=I.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),I.mapPass===null&&(I.mapPass=new o0(r.x,r.y)),f.uniforms.shadow_pass.value=I.map.texture,f.uniforms.resolution.value=I.mapSize,f.uniforms.radius.value=I.radius,n.setRenderTarget(I.mapPass),n.clear(),n.renderBufferDirect(D,null,L,f,_,null),p.uniforms.shadow_pass.value=I.mapPass.texture,p.uniforms.resolution.value=I.mapSize,p.uniforms.radius.value=I.radius,n.setRenderTarget(I.map),n.clear(),n.renderBufferDirect(D,null,L,p,_,null)}function T(I,D,L,E){let C=null;const O=L.isPointLight===!0?I.customDistanceMaterial:I.customDepthMaterial;if(O!==void 0)C=O;else if(C=L.isPointLight===!0?l:o,n.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0||D.alphaToCoverage===!0){const G=C.uuid,X=D.uuid;let s1=c[G];s1===void 0&&(s1={},c[G]=s1);let e1=s1[X];e1===void 0&&(e1=C.clone(),s1[X]=e1,D.addEventListener("dispose",w)),C=e1}if(C.visible=D.visible,C.wireframe=D.wireframe,E===qe?C.side=D.shadowSide!==null?D.shadowSide:D.side:C.side=D.shadowSide!==null?D.shadowSide:h[D.side],C.alphaMap=D.alphaMap,C.alphaTest=D.alphaToCoverage===!0?.5:D.alphaTest,C.map=D.map,C.clipShadows=D.clipShadows,C.clippingPlanes=D.clippingPlanes,C.clipIntersection=D.clipIntersection,C.displacementMap=D.displacementMap,C.displacementScale=D.displacementScale,C.displacementBias=D.displacementBias,C.wireframeLinewidth=D.wireframeLinewidth,C.linewidth=D.linewidth,L.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const G=n.properties.get(C);G.light=L}return C}function y(I,D,L,E,C){if(I.visible===!1)return;if(I.layers.test(D.layers)&&(I.isMesh||I.isLine||I.isPoints)&&(I.castShadow||I.receiveShadow&&C===qe)&&(!I.frustumCulled||i.intersectsObject(I))){I.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,I.matrixWorld);const X=e.update(I),s1=I.material;if(Array.isArray(s1)){const e1=X.groups;for(let Z=0,Q=e1.length;Z<Q;Z++){const V=e1[Z],p1=s1[V.materialIndex];if(p1&&p1.visible){const E1=T(I,p1,E,C);I.onBeforeShadow(n,I,D,L,X,E1,V),n.renderBufferDirect(L,null,X,E1,I,V),I.onAfterShadow(n,I,D,L,X,E1,V)}}}else if(s1.visible){const e1=T(I,s1,E,C);I.onBeforeShadow(n,I,D,L,X,e1,null),n.renderBufferDirect(L,null,X,e1,I,null),I.onAfterShadow(n,I,D,L,X,e1,null)}}const G=I.children;for(let X=0,s1=G.length;X<s1;X++)y(G[X],D,L,E,C)}function w(I){I.target.removeEventListener("dispose",w);for(const L in c){const E=c[L],C=I.target.uuid;C in E&&(E[C].dispose(),delete E[C])}}}const I8={[ha]:fa,[da]:_a,[pa]:ga,[Y0]:ma,[fa]:ha,[_a]:da,[ga]:pa,[ma]:Y0};function D8(n,e){function t(){let B=!1;const y1=new B2;let S1=null;const N1=new B2(0,0,0,0);return{setMask:function(m1){S1!==m1&&!B&&(n.colorMask(m1,m1,m1,m1),S1=m1)},setLocked:function(m1){B=m1},setClear:function(m1,f1,H1,G1,S2){S2===!0&&(m1*=G1,f1*=G1,H1*=G1),y1.set(m1,f1,H1,G1),N1.equals(y1)===!1&&(n.clearColor(m1,f1,H1,G1),N1.copy(y1))},reset:function(){B=!1,S1=null,N1.set(-1,0,0,0)}}}function i(){let B=!1,y1=!1,S1=null,N1=null,m1=null;return{setReversed:function(f1){if(y1!==f1){const H1=e.get("EXT_clip_control");f1?H1.clipControlEXT(H1.LOWER_LEFT_EXT,H1.ZERO_TO_ONE_EXT):H1.clipControlEXT(H1.LOWER_LEFT_EXT,H1.NEGATIVE_ONE_TO_ONE_EXT),y1=f1;const G1=m1;m1=null,this.setClear(G1)}},getReversed:function(){return y1},setTest:function(f1){f1?u1(n.DEPTH_TEST):M1(n.DEPTH_TEST)},setMask:function(f1){S1!==f1&&!B&&(n.depthMask(f1),S1=f1)},setFunc:function(f1){if(y1&&(f1=I8[f1]),N1!==f1){switch(f1){case ha:n.depthFunc(n.NEVER);break;case fa:n.depthFunc(n.ALWAYS);break;case da:n.depthFunc(n.LESS);break;case Y0:n.depthFunc(n.LEQUAL);break;case pa:n.depthFunc(n.EQUAL);break;case ma:n.depthFunc(n.GEQUAL);break;case _a:n.depthFunc(n.GREATER);break;case ga:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}N1=f1}},setLocked:function(f1){B=f1},setClear:function(f1){m1!==f1&&(y1&&(f1=1-f1),n.clearDepth(f1),m1=f1)},reset:function(){B=!1,S1=null,N1=null,m1=null,y1=!1}}}function r(){let B=!1,y1=null,S1=null,N1=null,m1=null,f1=null,H1=null,G1=null,S2=null;return{setTest:function(d2){B||(d2?u1(n.STENCIL_TEST):M1(n.STENCIL_TEST))},setMask:function(d2){y1!==d2&&!B&&(n.stencilMask(d2),y1=d2)},setFunc:function(d2,E3,b3){(S1!==d2||N1!==E3||m1!==b3)&&(n.stencilFunc(d2,E3,b3),S1=d2,N1=E3,m1=b3)},setOp:function(d2,E3,b3){(f1!==d2||H1!==E3||G1!==b3)&&(n.stencilOp(d2,E3,b3),f1=d2,H1=E3,G1=b3)},setLocked:function(d2){B=d2},setClear:function(d2){S2!==d2&&(n.clearStencil(d2),S2=d2)},reset:function(){B=!1,y1=null,S1=null,N1=null,m1=null,f1=null,H1=null,G1=null,S2=null}}}const s=new t,a=new i,o=new r,l=new WeakMap,c=new WeakMap;let u={},h={},f=new WeakMap,p=[],v=null,_=!1,m=null,d=null,b=null,T=null,y=null,w=null,I=null,D=new _2(0,0,0),L=0,E=!1,C=null,O=null,G=null,X=null,s1=null;const e1=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Z=!1,Q=0;const V=n.getParameter(n.VERSION);V.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(V)[1]),Z=Q>=1):V.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(V)[1]),Z=Q>=2);let p1=null,E1={};const L1=n.getParameter(n.SCISSOR_BOX),B1=n.getParameter(n.VIEWPORT),l2=new B2().fromArray(L1),n2=new B2().fromArray(B1);function V1(B,y1,S1,N1){const m1=new Uint8Array(4),f1=n.createTexture();n.bindTexture(B,f1),n.texParameteri(B,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(B,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let H1=0;H1<S1;H1++)B===n.TEXTURE_3D||B===n.TEXTURE_2D_ARRAY?n.texImage3D(y1,0,n.RGBA,1,1,N1,0,n.RGBA,n.UNSIGNED_BYTE,m1):n.texImage2D(y1+H1,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,m1);return f1}const a1={};a1[n.TEXTURE_2D]=V1(n.TEXTURE_2D,n.TEXTURE_2D,1),a1[n.TEXTURE_CUBE_MAP]=V1(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),a1[n.TEXTURE_2D_ARRAY]=V1(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),a1[n.TEXTURE_3D]=V1(n.TEXTURE_3D,n.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),u1(n.DEPTH_TEST),a.setFunc(Y0),$(!1),q(B4),u1(n.CULL_FACE),j(yt);function u1(B){u[B]!==!0&&(n.enable(B),u[B]=!0)}function M1(B){u[B]!==!1&&(n.disable(B),u[B]=!1)}function D1(B,y1){return h[B]!==y1?(n.bindFramebuffer(B,y1),h[B]=y1,B===n.DRAW_FRAMEBUFFER&&(h[n.FRAMEBUFFER]=y1),B===n.FRAMEBUFFER&&(h[n.DRAW_FRAMEBUFFER]=y1),!0):!1}function O1(B,y1){let S1=p,N1=!1;if(B){S1=f.get(y1),S1===void 0&&(S1=[],f.set(y1,S1));const m1=B.textures;if(S1.length!==m1.length||S1[0]!==n.COLOR_ATTACHMENT0){for(let f1=0,H1=m1.length;f1<H1;f1++)S1[f1]=n.COLOR_ATTACHMENT0+f1;S1.length=m1.length,N1=!0}}else S1[0]!==n.BACK&&(S1[0]=n.BACK,N1=!0);N1&&n.drawBuffers(S1)}function Q1(B){return v!==B?(n.useProgram(B),v=B,!0):!1}const F={[jt]:n.FUNC_ADD,[Nh]:n.FUNC_SUBTRACT,[Bh]:n.FUNC_REVERSE_SUBTRACT};F[zh]=n.MIN,F[kh]=n.MAX;const M={[Hh]:n.ZERO,[Vh]:n.ONE,[Gh]:n.SRC_COLOR,[ca]:n.SRC_ALPHA,[jh]:n.SRC_ALPHA_SATURATE,[$h]:n.DST_COLOR,[Xh]:n.DST_ALPHA,[Wh]:n.ONE_MINUS_SRC_COLOR,[ua]:n.ONE_MINUS_SRC_ALPHA,[Yh]:n.ONE_MINUS_DST_COLOR,[qh]:n.ONE_MINUS_DST_ALPHA,[Kh]:n.CONSTANT_COLOR,[Zh]:n.ONE_MINUS_CONSTANT_COLOR,[Jh]:n.CONSTANT_ALPHA,[Qh]:n.ONE_MINUS_CONSTANT_ALPHA};function j(B,y1,S1,N1,m1,f1,H1,G1,S2,d2){if(B===yt){_===!0&&(M1(n.BLEND),_=!1);return}if(_===!1&&(u1(n.BLEND),_=!0),B!==Oh){if(B!==m||d2!==E){if((d!==jt||y!==jt)&&(n.blendEquation(n.FUNC_ADD),d=jt,y=jt),d2)switch(B){case k0:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case la:n.blendFunc(n.ONE,n.ONE);break;case z4:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case k4:n.blendFuncSeparate(n.DST_COLOR,n.ONE_MINUS_SRC_ALPHA,n.ZERO,n.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case k0:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case la:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE,n.ONE,n.ONE);break;case z4:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case k4:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}b=null,T=null,w=null,I=null,D.set(0,0,0),L=0,m=B,E=d2}return}m1=m1||y1,f1=f1||S1,H1=H1||N1,(y1!==d||m1!==y)&&(n.blendEquationSeparate(F[y1],F[m1]),d=y1,y=m1),(S1!==b||N1!==T||f1!==w||H1!==I)&&(n.blendFuncSeparate(M[S1],M[N1],M[f1],M[H1]),b=S1,T=N1,w=f1,I=H1),(G1.equals(D)===!1||S2!==L)&&(n.blendColor(G1.r,G1.g,G1.b,S2),D.copy(G1),L=S2),m=B,E=!1}function i1(B,y1){B.side===Ze?M1(n.CULL_FACE):u1(n.CULL_FACE);let S1=B.side===C3;y1&&(S1=!S1),$(S1),B.blending===k0&&B.transparent===!1?j(yt):j(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),a.setFunc(B.depthFunc),a.setTest(B.depthTest),a.setMask(B.depthWrite),s.setMask(B.colorWrite);const N1=B.stencilWrite;o.setTest(N1),N1&&(o.setMask(B.stencilWriteMask),o.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),o.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),k(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?u1(n.SAMPLE_ALPHA_TO_COVERAGE):M1(n.SAMPLE_ALPHA_TO_COVERAGE)}function $(B){C!==B&&(B?n.frontFace(n.CW):n.frontFace(n.CCW),C=B)}function q(B){B!==Dh?(u1(n.CULL_FACE),B!==O&&(B===B4?n.cullFace(n.BACK):B===Uh?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):M1(n.CULL_FACE),O=B}function h1(B){B!==G&&(Z&&n.lineWidth(B),G=B)}function k(B,y1,S1){B?(u1(n.POLYGON_OFFSET_FILL),(X!==y1||s1!==S1)&&(n.polygonOffset(y1,S1),X=y1,s1=S1)):M1(n.POLYGON_OFFSET_FILL)}function l1(B){B?u1(n.SCISSOR_TEST):M1(n.SCISSOR_TEST)}function c1(B){B===void 0&&(B=n.TEXTURE0+e1-1),p1!==B&&(n.activeTexture(B),p1=B)}function w1(B,y1,S1){S1===void 0&&(p1===null?S1=n.TEXTURE0+e1-1:S1=p1);let N1=E1[S1];N1===void 0&&(N1={type:void 0,texture:void 0},E1[S1]=N1),(N1.type!==B||N1.texture!==y1)&&(p1!==S1&&(n.activeTexture(S1),p1=S1),n.bindTexture(B,y1||a1[B]),N1.type=B,N1.texture=y1)}function A(){const B=E1[p1];B!==void 0&&B.type!==void 0&&(n.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function S(){try{n.compressedTexImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function N(){try{n.compressedTexImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Y(){try{n.texSubImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function o1(){try{n.texSubImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function K(){try{n.compressedTexSubImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function A1(){try{n.compressedTexSubImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function _1(){try{n.texStorage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function P1(){try{n.texStorage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function I1(){try{n.texImage2D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function g1(){try{n.texImage3D(...arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function T1(B){l2.equals(B)===!1&&(n.scissor(B.x,B.y,B.z,B.w),l2.copy(B))}function z1(B){n2.equals(B)===!1&&(n.viewport(B.x,B.y,B.z,B.w),n2.copy(B))}function U1(B,y1){let S1=c.get(y1);S1===void 0&&(S1=new WeakMap,c.set(y1,S1));let N1=S1.get(B);N1===void 0&&(N1=n.getUniformBlockIndex(y1,B.name),S1.set(B,N1))}function b1(B,y1){const N1=c.get(y1).get(B);l.get(y1)!==N1&&(n.uniformBlockBinding(y1,N1,B.__bindingPointIndex),l.set(y1,N1))}function e2(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),a.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),u={},p1=null,E1={},h={},f=new WeakMap,p=[],v=null,_=!1,m=null,d=null,b=null,T=null,y=null,w=null,I=null,D=new _2(0,0,0),L=0,E=!1,C=null,O=null,G=null,X=null,s1=null,l2.set(0,0,n.canvas.width,n.canvas.height),n2.set(0,0,n.canvas.width,n.canvas.height),s.reset(),a.reset(),o.reset()}return{buffers:{color:s,depth:a,stencil:o},enable:u1,disable:M1,bindFramebuffer:D1,drawBuffers:O1,useProgram:Q1,setBlending:j,setMaterial:i1,setFlipSided:$,setCullFace:q,setLineWidth:h1,setPolygonOffset:k,setScissorTest:l1,activeTexture:c1,bindTexture:w1,unbindTexture:A,compressedTexImage2D:S,compressedTexImage3D:N,texImage2D:I1,texImage3D:g1,updateUBOMapping:U1,uniformBlockBinding:b1,texStorage2D:_1,texStorage3D:P1,texSubImage2D:Y,texSubImage3D:o1,compressedTexSubImage2D:K,compressedTexSubImage3D:A1,scissor:T1,viewport:z1,reset:e2}}function U8(n,e,t,i,r,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new y2,u=new WeakMap;let h;const f=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(A,S){return p?new OffscreenCanvas(A,S):dr("canvas")}function _(A,S,N){let Y=1;const o1=w1(A);if((o1.width>N||o1.height>N)&&(Y=N/Math.max(o1.width,o1.height)),Y<1)if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap||typeof VideoFrame<"u"&&A instanceof VideoFrame){const K=Math.floor(Y*o1.width),A1=Math.floor(Y*o1.height);h===void 0&&(h=v(K,A1));const _1=S?v(K,A1):h;return _1.width=K,_1.height=A1,_1.getContext("2d").drawImage(A,0,0,K,A1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+o1.width+"x"+o1.height+") to ("+K+"x"+A1+")."),_1}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+o1.width+"x"+o1.height+")."),A;return A}function m(A){return A.generateMipmaps}function d(A){n.generateMipmap(A)}function b(A){return A.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:A.isWebGL3DRenderTarget?n.TEXTURE_3D:A.isWebGLArrayRenderTarget||A.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function T(A,S,N,Y,o1=!1){if(A!==null){if(n[A]!==void 0)return n[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let K=S;if(S===n.RED&&(N===n.FLOAT&&(K=n.R32F),N===n.HALF_FLOAT&&(K=n.R16F),N===n.UNSIGNED_BYTE&&(K=n.R8)),S===n.RED_INTEGER&&(N===n.UNSIGNED_BYTE&&(K=n.R8UI),N===n.UNSIGNED_SHORT&&(K=n.R16UI),N===n.UNSIGNED_INT&&(K=n.R32UI),N===n.BYTE&&(K=n.R8I),N===n.SHORT&&(K=n.R16I),N===n.INT&&(K=n.R32I)),S===n.RG&&(N===n.FLOAT&&(K=n.RG32F),N===n.HALF_FLOAT&&(K=n.RG16F),N===n.UNSIGNED_BYTE&&(K=n.RG8)),S===n.RG_INTEGER&&(N===n.UNSIGNED_BYTE&&(K=n.RG8UI),N===n.UNSIGNED_SHORT&&(K=n.RG16UI),N===n.UNSIGNED_INT&&(K=n.RG32UI),N===n.BYTE&&(K=n.RG8I),N===n.SHORT&&(K=n.RG16I),N===n.INT&&(K=n.RG32I)),S===n.RGB_INTEGER&&(N===n.UNSIGNED_BYTE&&(K=n.RGB8UI),N===n.UNSIGNED_SHORT&&(K=n.RGB16UI),N===n.UNSIGNED_INT&&(K=n.RGB32UI),N===n.BYTE&&(K=n.RGB8I),N===n.SHORT&&(K=n.RGB16I),N===n.INT&&(K=n.RGB32I)),S===n.RGBA_INTEGER&&(N===n.UNSIGNED_BYTE&&(K=n.RGBA8UI),N===n.UNSIGNED_SHORT&&(K=n.RGBA16UI),N===n.UNSIGNED_INT&&(K=n.RGBA32UI),N===n.BYTE&&(K=n.RGBA8I),N===n.SHORT&&(K=n.RGBA16I),N===n.INT&&(K=n.RGBA32I)),S===n.RGB&&(N===n.UNSIGNED_INT_5_9_9_9_REV&&(K=n.RGB9_E5),N===n.UNSIGNED_INT_10F_11F_11F_REV&&(K=n.R11F_G11F_B10F)),S===n.RGBA){const A1=o1?hr:m2.getTransfer(Y);N===n.FLOAT&&(K=n.RGBA32F),N===n.HALF_FLOAT&&(K=n.RGBA16F),N===n.UNSIGNED_BYTE&&(K=A1===E2?n.SRGB8_ALPHA8:n.RGBA8),N===n.UNSIGNED_SHORT_4_4_4_4&&(K=n.RGBA4),N===n.UNSIGNED_SHORT_5_5_5_1&&(K=n.RGB5_A1)}return(K===n.R16F||K===n.R32F||K===n.RG16F||K===n.RG32F||K===n.RGBA16F||K===n.RGBA32F)&&e.get("EXT_color_buffer_float"),K}function y(A,S){let N;return A?S===null||S===a0||S===Gn?N=n.DEPTH24_STENCIL8:S===Je?N=n.DEPTH32F_STENCIL8:S===Vn&&(N=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):S===null||S===a0||S===Gn?N=n.DEPTH_COMPONENT24:S===Je?N=n.DEPTH_COMPONENT32F:S===Vn&&(N=n.DEPTH_COMPONENT16),N}function w(A,S){return m(A)===!0||A.isFramebufferTexture&&A.minFilter!==xe&&A.minFilter!==Re?Math.log2(Math.max(S.width,S.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?S.mipmaps.length:1}function I(A){const S=A.target;S.removeEventListener("dispose",I),L(S),S.isVideoTexture&&u.delete(S)}function D(A){const S=A.target;S.removeEventListener("dispose",D),C(S)}function L(A){const S=i.get(A);if(S.__webglInit===void 0)return;const N=A.source,Y=f.get(N);if(Y){const o1=Y[S.__cacheKey];o1.usedTimes--,o1.usedTimes===0&&E(A),Object.keys(Y).length===0&&f.delete(N)}i.remove(A)}function E(A){const S=i.get(A);n.deleteTexture(S.__webglTexture);const N=A.source,Y=f.get(N);delete Y[S.__cacheKey],a.memory.textures--}function C(A){const S=i.get(A);if(A.depthTexture&&(A.depthTexture.dispose(),i.remove(A.depthTexture)),A.isWebGLCubeRenderTarget)for(let Y=0;Y<6;Y++){if(Array.isArray(S.__webglFramebuffer[Y]))for(let o1=0;o1<S.__webglFramebuffer[Y].length;o1++)n.deleteFramebuffer(S.__webglFramebuffer[Y][o1]);else n.deleteFramebuffer(S.__webglFramebuffer[Y]);S.__webglDepthbuffer&&n.deleteRenderbuffer(S.__webglDepthbuffer[Y])}else{if(Array.isArray(S.__webglFramebuffer))for(let Y=0;Y<S.__webglFramebuffer.length;Y++)n.deleteFramebuffer(S.__webglFramebuffer[Y]);else n.deleteFramebuffer(S.__webglFramebuffer);if(S.__webglDepthbuffer&&n.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&n.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer)for(let Y=0;Y<S.__webglColorRenderbuffer.length;Y++)S.__webglColorRenderbuffer[Y]&&n.deleteRenderbuffer(S.__webglColorRenderbuffer[Y]);S.__webglDepthRenderbuffer&&n.deleteRenderbuffer(S.__webglDepthRenderbuffer)}const N=A.textures;for(let Y=0,o1=N.length;Y<o1;Y++){const K=i.get(N[Y]);K.__webglTexture&&(n.deleteTexture(K.__webglTexture),a.memory.textures--),i.remove(N[Y])}i.remove(A)}let O=0;function G(){O=0}function X(){const A=O;return A>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+r.maxTextures),O+=1,A}function s1(A){const S=[];return S.push(A.wrapS),S.push(A.wrapT),S.push(A.wrapR||0),S.push(A.magFilter),S.push(A.minFilter),S.push(A.anisotropy),S.push(A.internalFormat),S.push(A.format),S.push(A.type),S.push(A.generateMipmaps),S.push(A.premultiplyAlpha),S.push(A.flipY),S.push(A.unpackAlignment),S.push(A.colorSpace),S.join()}function e1(A,S){const N=i.get(A);if(A.isVideoTexture&&l1(A),A.isRenderTargetTexture===!1&&A.isExternalTexture!==!0&&A.version>0&&N.__version!==A.version){const Y=A.image;if(Y===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Y.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{a1(N,A,S);return}}else A.isExternalTexture&&(N.__webglTexture=A.sourceTexture?A.sourceTexture:null);t.bindTexture(n.TEXTURE_2D,N.__webglTexture,n.TEXTURE0+S)}function Z(A,S){const N=i.get(A);if(A.isRenderTargetTexture===!1&&A.version>0&&N.__version!==A.version){a1(N,A,S);return}t.bindTexture(n.TEXTURE_2D_ARRAY,N.__webglTexture,n.TEXTURE0+S)}function Q(A,S){const N=i.get(A);if(A.isRenderTargetTexture===!1&&A.version>0&&N.__version!==A.version){a1(N,A,S);return}t.bindTexture(n.TEXTURE_3D,N.__webglTexture,n.TEXTURE0+S)}function V(A,S){const N=i.get(A);if(A.version>0&&N.__version!==A.version){u1(N,A,S);return}t.bindTexture(n.TEXTURE_CUBE_MAP,N.__webglTexture,n.TEXTURE0+S)}const p1={[ya]:n.REPEAT,[Jt]:n.CLAMP_TO_EDGE,[Ma]:n.MIRRORED_REPEAT},E1={[xe]:n.NEAREST,[uf]:n.NEAREST_MIPMAP_NEAREST,[_i]:n.NEAREST_MIPMAP_LINEAR,[Re]:n.LINEAR,[is]:n.LINEAR_MIPMAP_NEAREST,[Qt]:n.LINEAR_MIPMAP_LINEAR},L1={[pf]:n.NEVER,[yf]:n.ALWAYS,[mf]:n.LESS,[wc]:n.LEQUAL,[_f]:n.EQUAL,[xf]:n.GEQUAL,[gf]:n.GREATER,[vf]:n.NOTEQUAL};function B1(A,S){if(S.type===Je&&e.has("OES_texture_float_linear")===!1&&(S.magFilter===Re||S.magFilter===is||S.magFilter===_i||S.magFilter===Qt||S.minFilter===Re||S.minFilter===is||S.minFilter===_i||S.minFilter===Qt)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(A,n.TEXTURE_WRAP_S,p1[S.wrapS]),n.texParameteri(A,n.TEXTURE_WRAP_T,p1[S.wrapT]),(A===n.TEXTURE_3D||A===n.TEXTURE_2D_ARRAY)&&n.texParameteri(A,n.TEXTURE_WRAP_R,p1[S.wrapR]),n.texParameteri(A,n.TEXTURE_MAG_FILTER,E1[S.magFilter]),n.texParameteri(A,n.TEXTURE_MIN_FILTER,E1[S.minFilter]),S.compareFunction&&(n.texParameteri(A,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(A,n.TEXTURE_COMPARE_FUNC,L1[S.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(S.magFilter===xe||S.minFilter!==_i&&S.minFilter!==Qt||S.type===Je&&e.has("OES_texture_float_linear")===!1)return;if(S.anisotropy>1||i.get(S).__currentAnisotropy){const N=e.get("EXT_texture_filter_anisotropic");n.texParameterf(A,N.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,r.getMaxAnisotropy())),i.get(S).__currentAnisotropy=S.anisotropy}}}function l2(A,S){let N=!1;A.__webglInit===void 0&&(A.__webglInit=!0,S.addEventListener("dispose",I));const Y=S.source;let o1=f.get(Y);o1===void 0&&(o1={},f.set(Y,o1));const K=s1(S);if(K!==A.__cacheKey){o1[K]===void 0&&(o1[K]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,N=!0),o1[K].usedTimes++;const A1=o1[A.__cacheKey];A1!==void 0&&(o1[A.__cacheKey].usedTimes--,A1.usedTimes===0&&E(S)),A.__cacheKey=K,A.__webglTexture=o1[K].texture}return N}function n2(A,S,N){return Math.floor(Math.floor(A/N)/S)}function V1(A,S,N,Y){const K=A.updateRanges;if(K.length===0)t.texSubImage2D(n.TEXTURE_2D,0,0,0,S.width,S.height,N,Y,S.data);else{K.sort((g1,T1)=>g1.start-T1.start);let A1=0;for(let g1=1;g1<K.length;g1++){const T1=K[A1],z1=K[g1],U1=T1.start+T1.count,b1=n2(z1.start,S.width,4),e2=n2(T1.start,S.width,4);z1.start<=U1+1&&b1===e2&&n2(z1.start+z1.count-1,S.width,4)===b1?T1.count=Math.max(T1.count,z1.start+z1.count-T1.start):(++A1,K[A1]=z1)}K.length=A1+1;const _1=n.getParameter(n.UNPACK_ROW_LENGTH),P1=n.getParameter(n.UNPACK_SKIP_PIXELS),I1=n.getParameter(n.UNPACK_SKIP_ROWS);n.pixelStorei(n.UNPACK_ROW_LENGTH,S.width);for(let g1=0,T1=K.length;g1<T1;g1++){const z1=K[g1],U1=Math.floor(z1.start/4),b1=Math.ceil(z1.count/4),e2=U1%S.width,B=Math.floor(U1/S.width),y1=b1,S1=1;n.pixelStorei(n.UNPACK_SKIP_PIXELS,e2),n.pixelStorei(n.UNPACK_SKIP_ROWS,B),t.texSubImage2D(n.TEXTURE_2D,0,e2,B,y1,S1,N,Y,S.data)}A.clearUpdateRanges(),n.pixelStorei(n.UNPACK_ROW_LENGTH,_1),n.pixelStorei(n.UNPACK_SKIP_PIXELS,P1),n.pixelStorei(n.UNPACK_SKIP_ROWS,I1)}}function a1(A,S,N){let Y=n.TEXTURE_2D;(S.isDataArrayTexture||S.isCompressedArrayTexture)&&(Y=n.TEXTURE_2D_ARRAY),S.isData3DTexture&&(Y=n.TEXTURE_3D);const o1=l2(A,S),K=S.source;t.bindTexture(Y,A.__webglTexture,n.TEXTURE0+N);const A1=i.get(K);if(K.version!==A1.__version||o1===!0){t.activeTexture(n.TEXTURE0+N);const _1=m2.getPrimaries(m2.workingColorSpace),P1=S.colorSpace===mt?null:m2.getPrimaries(S.colorSpace),I1=S.colorSpace===mt||_1===P1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,S.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,S.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,I1);let g1=_(S.image,!1,r.maxTextureSize);g1=c1(S,g1);const T1=s.convert(S.format,S.colorSpace),z1=s.convert(S.type);let U1=T(S.internalFormat,T1,z1,S.colorSpace,S.isVideoTexture);B1(Y,S);let b1;const e2=S.mipmaps,B=S.isVideoTexture!==!0,y1=A1.__version===void 0||o1===!0,S1=K.dataReady,N1=w(S,g1);if(S.isDepthTexture)U1=y(S.format===Xn,S.type),y1&&(B?t.texStorage2D(n.TEXTURE_2D,1,U1,g1.width,g1.height):t.texImage2D(n.TEXTURE_2D,0,U1,g1.width,g1.height,0,T1,z1,null));else if(S.isDataTexture)if(e2.length>0){B&&y1&&t.texStorage2D(n.TEXTURE_2D,N1,U1,e2[0].width,e2[0].height);for(let m1=0,f1=e2.length;m1<f1;m1++)b1=e2[m1],B?S1&&t.texSubImage2D(n.TEXTURE_2D,m1,0,0,b1.width,b1.height,T1,z1,b1.data):t.texImage2D(n.TEXTURE_2D,m1,U1,b1.width,b1.height,0,T1,z1,b1.data);S.generateMipmaps=!1}else B?(y1&&t.texStorage2D(n.TEXTURE_2D,N1,U1,g1.width,g1.height),S1&&V1(S,g1,T1,z1)):t.texImage2D(n.TEXTURE_2D,0,U1,g1.width,g1.height,0,T1,z1,g1.data);else if(S.isCompressedTexture)if(S.isCompressedArrayTexture){B&&y1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,N1,U1,e2[0].width,e2[0].height,g1.depth);for(let m1=0,f1=e2.length;m1<f1;m1++)if(b1=e2[m1],S.format!==_e)if(T1!==null)if(B){if(S1)if(S.layerUpdates.size>0){const H1=d9(b1.width,b1.height,S.format,S.type);for(const G1 of S.layerUpdates){const S2=b1.data.subarray(G1*H1/b1.data.BYTES_PER_ELEMENT,(G1+1)*H1/b1.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,m1,0,0,G1,b1.width,b1.height,1,T1,S2)}S.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,m1,0,0,0,b1.width,b1.height,g1.depth,T1,b1.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,m1,U1,b1.width,b1.height,g1.depth,0,b1.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else B?S1&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,m1,0,0,0,b1.width,b1.height,g1.depth,T1,z1,b1.data):t.texImage3D(n.TEXTURE_2D_ARRAY,m1,U1,b1.width,b1.height,g1.depth,0,T1,z1,b1.data)}else{B&&y1&&t.texStorage2D(n.TEXTURE_2D,N1,U1,e2[0].width,e2[0].height);for(let m1=0,f1=e2.length;m1<f1;m1++)b1=e2[m1],S.format!==_e?T1!==null?B?S1&&t.compressedTexSubImage2D(n.TEXTURE_2D,m1,0,0,b1.width,b1.height,T1,b1.data):t.compressedTexImage2D(n.TEXTURE_2D,m1,U1,b1.width,b1.height,0,b1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):B?S1&&t.texSubImage2D(n.TEXTURE_2D,m1,0,0,b1.width,b1.height,T1,z1,b1.data):t.texImage2D(n.TEXTURE_2D,m1,U1,b1.width,b1.height,0,T1,z1,b1.data)}else if(S.isDataArrayTexture)if(B){if(y1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,N1,U1,g1.width,g1.height,g1.depth),S1)if(S.layerUpdates.size>0){const m1=d9(g1.width,g1.height,S.format,S.type);for(const f1 of S.layerUpdates){const H1=g1.data.subarray(f1*m1/g1.data.BYTES_PER_ELEMENT,(f1+1)*m1/g1.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,f1,g1.width,g1.height,1,T1,z1,H1)}S.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,g1.width,g1.height,g1.depth,T1,z1,g1.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,U1,g1.width,g1.height,g1.depth,0,T1,z1,g1.data);else if(S.isData3DTexture)B?(y1&&t.texStorage3D(n.TEXTURE_3D,N1,U1,g1.width,g1.height,g1.depth),S1&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,g1.width,g1.height,g1.depth,T1,z1,g1.data)):t.texImage3D(n.TEXTURE_3D,0,U1,g1.width,g1.height,g1.depth,0,T1,z1,g1.data);else if(S.isFramebufferTexture){if(y1)if(B)t.texStorage2D(n.TEXTURE_2D,N1,U1,g1.width,g1.height);else{let m1=g1.width,f1=g1.height;for(let H1=0;H1<N1;H1++)t.texImage2D(n.TEXTURE_2D,H1,U1,m1,f1,0,T1,z1,null),m1>>=1,f1>>=1}}else if(e2.length>0){if(B&&y1){const m1=w1(e2[0]);t.texStorage2D(n.TEXTURE_2D,N1,U1,m1.width,m1.height)}for(let m1=0,f1=e2.length;m1<f1;m1++)b1=e2[m1],B?S1&&t.texSubImage2D(n.TEXTURE_2D,m1,0,0,T1,z1,b1):t.texImage2D(n.TEXTURE_2D,m1,U1,T1,z1,b1);S.generateMipmaps=!1}else if(B){if(y1){const m1=w1(g1);t.texStorage2D(n.TEXTURE_2D,N1,U1,m1.width,m1.height)}S1&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,T1,z1,g1)}else t.texImage2D(n.TEXTURE_2D,0,U1,T1,z1,g1);m(S)&&d(Y),A1.__version=K.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function u1(A,S,N){if(S.image.length!==6)return;const Y=l2(A,S),o1=S.source;t.bindTexture(n.TEXTURE_CUBE_MAP,A.__webglTexture,n.TEXTURE0+N);const K=i.get(o1);if(o1.version!==K.__version||Y===!0){t.activeTexture(n.TEXTURE0+N);const A1=m2.getPrimaries(m2.workingColorSpace),_1=S.colorSpace===mt?null:m2.getPrimaries(S.colorSpace),P1=S.colorSpace===mt||A1===_1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,S.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,S.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,P1);const I1=S.isCompressedTexture||S.image[0].isCompressedTexture,g1=S.image[0]&&S.image[0].isDataTexture,T1=[];for(let f1=0;f1<6;f1++)!I1&&!g1?T1[f1]=_(S.image[f1],!0,r.maxCubemapSize):T1[f1]=g1?S.image[f1].image:S.image[f1],T1[f1]=c1(S,T1[f1]);const z1=T1[0],U1=s.convert(S.format,S.colorSpace),b1=s.convert(S.type),e2=T(S.internalFormat,U1,b1,S.colorSpace),B=S.isVideoTexture!==!0,y1=K.__version===void 0||Y===!0,S1=o1.dataReady;let N1=w(S,z1);B1(n.TEXTURE_CUBE_MAP,S);let m1;if(I1){B&&y1&&t.texStorage2D(n.TEXTURE_CUBE_MAP,N1,e2,z1.width,z1.height);for(let f1=0;f1<6;f1++){m1=T1[f1].mipmaps;for(let H1=0;H1<m1.length;H1++){const G1=m1[H1];S.format!==_e?U1!==null?B?S1&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1,0,0,G1.width,G1.height,U1,G1.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1,e2,G1.width,G1.height,0,G1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):B?S1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1,0,0,G1.width,G1.height,U1,b1,G1.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1,e2,G1.width,G1.height,0,U1,b1,G1.data)}}}else{if(m1=S.mipmaps,B&&y1){m1.length>0&&N1++;const f1=w1(T1[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,N1,e2,f1.width,f1.height)}for(let f1=0;f1<6;f1++)if(g1){B?S1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,0,0,0,T1[f1].width,T1[f1].height,U1,b1,T1[f1].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,0,e2,T1[f1].width,T1[f1].height,0,U1,b1,T1[f1].data);for(let H1=0;H1<m1.length;H1++){const S2=m1[H1].image[f1].image;B?S1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1+1,0,0,S2.width,S2.height,U1,b1,S2.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1+1,e2,S2.width,S2.height,0,U1,b1,S2.data)}}else{B?S1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,0,0,0,U1,b1,T1[f1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,0,e2,U1,b1,T1[f1]);for(let H1=0;H1<m1.length;H1++){const G1=m1[H1];B?S1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1+1,0,0,U1,b1,G1.image[f1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f1,H1+1,e2,U1,b1,G1.image[f1])}}}m(S)&&d(n.TEXTURE_CUBE_MAP),K.__version=o1.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function M1(A,S,N,Y,o1,K){const A1=s.convert(N.format,N.colorSpace),_1=s.convert(N.type),P1=T(N.internalFormat,A1,_1,N.colorSpace),I1=i.get(S),g1=i.get(N);if(g1.__renderTarget=S,!I1.__hasExternalTextures){const T1=Math.max(1,S.width>>K),z1=Math.max(1,S.height>>K);o1===n.TEXTURE_3D||o1===n.TEXTURE_2D_ARRAY?t.texImage3D(o1,K,P1,T1,z1,S.depth,0,A1,_1,null):t.texImage2D(o1,K,P1,T1,z1,0,A1,_1,null)}t.bindFramebuffer(n.FRAMEBUFFER,A),k(S)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,Y,o1,g1.__webglTexture,0,h1(S)):(o1===n.TEXTURE_2D||o1>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&o1<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,Y,o1,g1.__webglTexture,K),t.bindFramebuffer(n.FRAMEBUFFER,null)}function D1(A,S,N){if(n.bindRenderbuffer(n.RENDERBUFFER,A),S.depthBuffer){const Y=S.depthTexture,o1=Y&&Y.isDepthTexture?Y.type:null,K=y(S.stencilBuffer,o1),A1=S.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,_1=h1(S);k(S)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,_1,K,S.width,S.height):N?n.renderbufferStorageMultisample(n.RENDERBUFFER,_1,K,S.width,S.height):n.renderbufferStorage(n.RENDERBUFFER,K,S.width,S.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,A1,n.RENDERBUFFER,A)}else{const Y=S.textures;for(let o1=0;o1<Y.length;o1++){const K=Y[o1],A1=s.convert(K.format,K.colorSpace),_1=s.convert(K.type),P1=T(K.internalFormat,A1,_1,K.colorSpace),I1=h1(S);N&&k(S)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,I1,P1,S.width,S.height):k(S)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,I1,P1,S.width,S.height):n.renderbufferStorage(n.RENDERBUFFER,P1,S.width,S.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function O1(A,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,A),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Y=i.get(S.depthTexture);Y.__renderTarget=S,(!Y.__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),e1(S.depthTexture,0);const o1=Y.__webglTexture,K=h1(S);if(S.depthTexture.format===Wn)k(S)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,o1,0,K):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,o1,0);else if(S.depthTexture.format===Xn)k(S)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,o1,0,K):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,o1,0);else throw new Error("Unknown depthTexture format")}function Q1(A){const S=i.get(A),N=A.isWebGLCubeRenderTarget===!0;if(S.__boundDepthTexture!==A.depthTexture){const Y=A.depthTexture;if(S.__depthDisposeCallback&&S.__depthDisposeCallback(),Y){const o1=()=>{delete S.__boundDepthTexture,delete S.__depthDisposeCallback,Y.removeEventListener("dispose",o1)};Y.addEventListener("dispose",o1),S.__depthDisposeCallback=o1}S.__boundDepthTexture=Y}if(A.depthTexture&&!S.__autoAllocateDepthBuffer){if(N)throw new Error("target.depthTexture not supported in Cube render targets");const Y=A.texture.mipmaps;Y&&Y.length>0?O1(S.__webglFramebuffer[0],A):O1(S.__webglFramebuffer,A)}else if(N){S.__webglDepthbuffer=[];for(let Y=0;Y<6;Y++)if(t.bindFramebuffer(n.FRAMEBUFFER,S.__webglFramebuffer[Y]),S.__webglDepthbuffer[Y]===void 0)S.__webglDepthbuffer[Y]=n.createRenderbuffer(),D1(S.__webglDepthbuffer[Y],A,!1);else{const o1=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,K=S.__webglDepthbuffer[Y];n.bindRenderbuffer(n.RENDERBUFFER,K),n.framebufferRenderbuffer(n.FRAMEBUFFER,o1,n.RENDERBUFFER,K)}}else{const Y=A.texture.mipmaps;if(Y&&Y.length>0?t.bindFramebuffer(n.FRAMEBUFFER,S.__webglFramebuffer[0]):t.bindFramebuffer(n.FRAMEBUFFER,S.__webglFramebuffer),S.__webglDepthbuffer===void 0)S.__webglDepthbuffer=n.createRenderbuffer(),D1(S.__webglDepthbuffer,A,!1);else{const o1=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,K=S.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,K),n.framebufferRenderbuffer(n.FRAMEBUFFER,o1,n.RENDERBUFFER,K)}}t.bindFramebuffer(n.FRAMEBUFFER,null)}function F(A,S,N){const Y=i.get(A);S!==void 0&&M1(Y.__webglFramebuffer,A,A.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),N!==void 0&&Q1(A)}function M(A){const S=A.texture,N=i.get(A),Y=i.get(S);A.addEventListener("dispose",D);const o1=A.textures,K=A.isWebGLCubeRenderTarget===!0,A1=o1.length>1;if(A1||(Y.__webglTexture===void 0&&(Y.__webglTexture=n.createTexture()),Y.__version=S.version,a.memory.textures++),K){N.__webglFramebuffer=[];for(let _1=0;_1<6;_1++)if(S.mipmaps&&S.mipmaps.length>0){N.__webglFramebuffer[_1]=[];for(let P1=0;P1<S.mipmaps.length;P1++)N.__webglFramebuffer[_1][P1]=n.createFramebuffer()}else N.__webglFramebuffer[_1]=n.createFramebuffer()}else{if(S.mipmaps&&S.mipmaps.length>0){N.__webglFramebuffer=[];for(let _1=0;_1<S.mipmaps.length;_1++)N.__webglFramebuffer[_1]=n.createFramebuffer()}else N.__webglFramebuffer=n.createFramebuffer();if(A1)for(let _1=0,P1=o1.length;_1<P1;_1++){const I1=i.get(o1[_1]);I1.__webglTexture===void 0&&(I1.__webglTexture=n.createTexture(),a.memory.textures++)}if(A.samples>0&&k(A)===!1){N.__webglMultisampledFramebuffer=n.createFramebuffer(),N.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,N.__webglMultisampledFramebuffer);for(let _1=0;_1<o1.length;_1++){const P1=o1[_1];N.__webglColorRenderbuffer[_1]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,N.__webglColorRenderbuffer[_1]);const I1=s.convert(P1.format,P1.colorSpace),g1=s.convert(P1.type),T1=T(P1.internalFormat,I1,g1,P1.colorSpace,A.isXRRenderTarget===!0),z1=h1(A);n.renderbufferStorageMultisample(n.RENDERBUFFER,z1,T1,A.width,A.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+_1,n.RENDERBUFFER,N.__webglColorRenderbuffer[_1])}n.bindRenderbuffer(n.RENDERBUFFER,null),A.depthBuffer&&(N.__webglDepthRenderbuffer=n.createRenderbuffer(),D1(N.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(K){t.bindTexture(n.TEXTURE_CUBE_MAP,Y.__webglTexture),B1(n.TEXTURE_CUBE_MAP,S);for(let _1=0;_1<6;_1++)if(S.mipmaps&&S.mipmaps.length>0)for(let P1=0;P1<S.mipmaps.length;P1++)M1(N.__webglFramebuffer[_1][P1],A,S,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+_1,P1);else M1(N.__webglFramebuffer[_1],A,S,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+_1,0);m(S)&&d(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(A1){for(let _1=0,P1=o1.length;_1<P1;_1++){const I1=o1[_1],g1=i.get(I1);let T1=n.TEXTURE_2D;(A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(T1=A.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(T1,g1.__webglTexture),B1(T1,I1),M1(N.__webglFramebuffer,A,I1,n.COLOR_ATTACHMENT0+_1,T1,0),m(I1)&&d(T1)}t.unbindTexture()}else{let _1=n.TEXTURE_2D;if((A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(_1=A.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(_1,Y.__webglTexture),B1(_1,S),S.mipmaps&&S.mipmaps.length>0)for(let P1=0;P1<S.mipmaps.length;P1++)M1(N.__webglFramebuffer[P1],A,S,n.COLOR_ATTACHMENT0,_1,P1);else M1(N.__webglFramebuffer,A,S,n.COLOR_ATTACHMENT0,_1,0);m(S)&&d(_1),t.unbindTexture()}A.depthBuffer&&Q1(A)}function j(A){const S=A.textures;for(let N=0,Y=S.length;N<Y;N++){const o1=S[N];if(m(o1)){const K=b(A),A1=i.get(o1).__webglTexture;t.bindTexture(K,A1),d(K),t.unbindTexture()}}}const i1=[],$=[];function q(A){if(A.samples>0){if(k(A)===!1){const S=A.textures,N=A.width,Y=A.height;let o1=n.COLOR_BUFFER_BIT;const K=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,A1=i.get(A),_1=S.length>1;if(_1)for(let I1=0;I1<S.length;I1++)t.bindFramebuffer(n.FRAMEBUFFER,A1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,A1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,A1.__webglMultisampledFramebuffer);const P1=A.texture.mipmaps;P1&&P1.length>0?t.bindFramebuffer(n.DRAW_FRAMEBUFFER,A1.__webglFramebuffer[0]):t.bindFramebuffer(n.DRAW_FRAMEBUFFER,A1.__webglFramebuffer);for(let I1=0;I1<S.length;I1++){if(A.resolveDepthBuffer&&(A.depthBuffer&&(o1|=n.DEPTH_BUFFER_BIT),A.stencilBuffer&&A.resolveStencilBuffer&&(o1|=n.STENCIL_BUFFER_BIT)),_1){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,A1.__webglColorRenderbuffer[I1]);const g1=i.get(S[I1]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,g1,0)}n.blitFramebuffer(0,0,N,Y,0,0,N,Y,o1,n.NEAREST),l===!0&&(i1.length=0,$.length=0,i1.push(n.COLOR_ATTACHMENT0+I1),A.depthBuffer&&A.resolveDepthBuffer===!1&&(i1.push(K),$.push(K),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,$)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,i1))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),_1)for(let I1=0;I1<S.length;I1++){t.bindFramebuffer(n.FRAMEBUFFER,A1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.RENDERBUFFER,A1.__webglColorRenderbuffer[I1]);const g1=i.get(S[I1]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,A1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.TEXTURE_2D,g1,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,A1.__webglMultisampledFramebuffer)}else if(A.depthBuffer&&A.resolveDepthBuffer===!1&&l){const S=A.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[S])}}}function h1(A){return Math.min(r.maxSamples,A.samples)}function k(A){const S=i.get(A);return A.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function l1(A){const S=a.render.frame;u.get(A)!==S&&(u.set(A,S),A.update())}function c1(A,S){const N=A.colorSpace,Y=A.format,o1=A.type;return A.isCompressedTexture===!0||A.isVideoTexture===!0||N!==Z0&&N!==mt&&(m2.getTransfer(N)===E2?(Y!==_e||o1!==De)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",N)),S}function w1(A){return typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement?(c.width=A.naturalWidth||A.width,c.height=A.naturalHeight||A.height):typeof VideoFrame<"u"&&A instanceof VideoFrame?(c.width=A.displayWidth,c.height=A.displayHeight):(c.width=A.width,c.height=A.height),c}this.allocateTextureUnit=X,this.resetTextureUnits=G,this.setTexture2D=e1,this.setTexture2DArray=Z,this.setTexture3D=Q,this.setTextureCube=V,this.rebindTextures=F,this.setupRenderTarget=M,this.updateRenderTargetMipmap=j,this.updateMultisampleRenderTarget=q,this.setupDepthRenderbuffer=Q1,this.setupFrameBufferTexture=M1,this.useMultisampledRTT=k}function F8(n,e){function t(i,r=mt){let s;const a=m2.getTransfer(r);if(i===De)return n.UNSIGNED_BYTE;if(i===Oo)return n.UNSIGNED_SHORT_4_4_4_4;if(i===No)return n.UNSIGNED_SHORT_5_5_5_1;if(i===xc)return n.UNSIGNED_INT_5_9_9_9_REV;if(i===yc)return n.UNSIGNED_INT_10F_11F_11F_REV;if(i===gc)return n.BYTE;if(i===vc)return n.SHORT;if(i===Vn)return n.UNSIGNED_SHORT;if(i===Fo)return n.INT;if(i===a0)return n.UNSIGNED_INT;if(i===Je)return n.FLOAT;if(i===ni)return n.HALF_FLOAT;if(i===Mc)return n.ALPHA;if(i===Sc)return n.RGB;if(i===_e)return n.RGBA;if(i===Wn)return n.DEPTH_COMPONENT;if(i===Xn)return n.DEPTH_STENCIL;if(i===Ec)return n.RED;if(i===Bo)return n.RED_INTEGER;if(i===bc)return n.RG;if(i===zo)return n.RG_INTEGER;if(i===ko)return n.RGBA_INTEGER;if(i===Xi||i===qi||i===$i||i===Yi)if(a===E2)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===Xi)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===qi)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===$i)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Yi)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===Xi)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===qi)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===$i)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Yi)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Sa||i===Ea||i===ba||i===Ta)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===Sa)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Ea)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===ba)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Ta)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===wa||i===Aa||i===Ca)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===wa||i===Aa)return a===E2?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===Ca)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Ra||i===La||i===Pa||i===Ia||i===Da||i===Ua||i===Fa||i===Oa||i===Na||i===Ba||i===za||i===ka||i===Ha||i===Va)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Ra)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===La)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Pa)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Ia)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Da)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Ua)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Fa)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Oa)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Na)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Ba)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===za)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===ka)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Ha)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Va)return a===E2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Ga||i===Wa||i===Xa)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===Ga)return a===E2?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Wa)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Xa)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===qa||i===$a||i===Ya||i===ja)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===qa)return s.COMPRESSED_RED_RGTC1_EXT;if(i===$a)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Ya)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===ja)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Gn?n.UNSIGNED_INT_24_8:n[i]!==void 0?n[i]:null}return{convert:t}}const O8=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,N8=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class B8{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const i=new kc(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Ct({vertexShader:O8,fragmentShader:N8,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new te(new Nr(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class z8 extends on{constructor(e,t){super();const i=this;let r=null,s=1,a=null,o="local-floor",l=1,c=null,u=null,h=null,f=null,p=null,v=null;const _=typeof XRWebGLBinding<"u",m=new B8,d={},b=t.getContextAttributes();let T=null,y=null;const w=[],I=[],D=new y2;let L=null;const E=new J3;E.viewport=new B2;const C=new J3;C.viewport=new B2;const O=[E,C],G=new ad;let X=null,s1=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a1){let u1=w[a1];return u1===void 0&&(u1=new ws,w[a1]=u1),u1.getTargetRaySpace()},this.getControllerGrip=function(a1){let u1=w[a1];return u1===void 0&&(u1=new ws,w[a1]=u1),u1.getGripSpace()},this.getHand=function(a1){let u1=w[a1];return u1===void 0&&(u1=new ws,w[a1]=u1),u1.getHandSpace()};function e1(a1){const u1=I.indexOf(a1.inputSource);if(u1===-1)return;const M1=w[u1];M1!==void 0&&(M1.update(a1.inputSource,a1.frame,c||a),M1.dispatchEvent({type:a1.type,data:a1.inputSource}))}function Z(){r.removeEventListener("select",e1),r.removeEventListener("selectstart",e1),r.removeEventListener("selectend",e1),r.removeEventListener("squeeze",e1),r.removeEventListener("squeezestart",e1),r.removeEventListener("squeezeend",e1),r.removeEventListener("end",Z),r.removeEventListener("inputsourceschange",Q);for(let a1=0;a1<w.length;a1++){const u1=I[a1];u1!==null&&(I[a1]=null,w[a1].disconnect(u1))}X=null,s1=null,m.reset();for(const a1 in d)delete d[a1];e.setRenderTarget(T),p=null,f=null,h=null,r=null,y=null,V1.stop(),i.isPresenting=!1,e.setPixelRatio(L),e.setSize(D.width,D.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(a1){s=a1,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a1){o=a1,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(a1){c=a1},this.getBaseLayer=function(){return f!==null?f:p},this.getBinding=function(){return h===null&&_&&(h=new XRWebGLBinding(r,t)),h},this.getFrame=function(){return v},this.getSession=function(){return r},this.setSession=async function(a1){if(r=a1,r!==null){if(T=e.getRenderTarget(),r.addEventListener("select",e1),r.addEventListener("selectstart",e1),r.addEventListener("selectend",e1),r.addEventListener("squeeze",e1),r.addEventListener("squeezestart",e1),r.addEventListener("squeezeend",e1),r.addEventListener("end",Z),r.addEventListener("inputsourceschange",Q),b.xrCompatible!==!0&&await t.makeXRCompatible(),L=e.getPixelRatio(),e.getSize(D),_&&"createProjectionLayer"in XRWebGLBinding.prototype){let M1=null,D1=null,O1=null;b.depth&&(O1=b.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,M1=b.stencil?Xn:Wn,D1=b.stencil?Gn:a0);const Q1={colorFormat:t.RGBA8,depthFormat:O1,scaleFactor:s};h=this.getBinding(),f=h.createProjectionLayer(Q1),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),y=new o0(f.textureWidth,f.textureHeight,{format:_e,type:De,depthTexture:new zc(f.textureWidth,f.textureHeight,D1,void 0,void 0,void 0,void 0,void 0,void 0,M1),stencilBuffer:b.stencil,colorSpace:e.outputColorSpace,samples:b.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const M1={antialias:b.antialias,alpha:!0,depth:b.depth,stencil:b.stencil,framebufferScaleFactor:s};p=new XRWebGLLayer(r,t,M1),r.updateRenderState({baseLayer:p}),e.setPixelRatio(1),e.setSize(p.framebufferWidth,p.framebufferHeight,!1),y=new o0(p.framebufferWidth,p.framebufferHeight,{format:_e,type:De,colorSpace:e.outputColorSpace,stencilBuffer:b.stencil,resolveDepthBuffer:p.ignoreDepthValues===!1,resolveStencilBuffer:p.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await r.requestReferenceSpace(o),V1.setContext(r),V1.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function Q(a1){for(let u1=0;u1<a1.removed.length;u1++){const M1=a1.removed[u1],D1=I.indexOf(M1);D1>=0&&(I[D1]=null,w[D1].disconnect(M1))}for(let u1=0;u1<a1.added.length;u1++){const M1=a1.added[u1];let D1=I.indexOf(M1);if(D1===-1){for(let Q1=0;Q1<w.length;Q1++)if(Q1>=I.length){I.push(M1),D1=Q1;break}else if(I[Q1]===null){I[Q1]=M1,D1=Q1;break}if(D1===-1)break}const O1=w[D1];O1&&O1.connect(M1)}}const V=new J,p1=new J;function E1(a1,u1,M1){V.setFromMatrixPosition(u1.matrixWorld),p1.setFromMatrixPosition(M1.matrixWorld);const D1=V.distanceTo(p1),O1=u1.projectionMatrix.elements,Q1=M1.projectionMatrix.elements,F=O1[14]/(O1[10]-1),M=O1[14]/(O1[10]+1),j=(O1[9]+1)/O1[5],i1=(O1[9]-1)/O1[5],$=(O1[8]-1)/O1[0],q=(Q1[8]+1)/Q1[0],h1=F*$,k=F*q,l1=D1/(-$+q),c1=l1*-$;if(u1.matrixWorld.decompose(a1.position,a1.quaternion,a1.scale),a1.translateX(c1),a1.translateZ(l1),a1.matrixWorld.compose(a1.position,a1.quaternion,a1.scale),a1.matrixWorldInverse.copy(a1.matrixWorld).invert(),O1[10]===-1)a1.projectionMatrix.copy(u1.projectionMatrix),a1.projectionMatrixInverse.copy(u1.projectionMatrixInverse);else{const w1=F+l1,A=M+l1,S=h1-c1,N=k+(D1-c1),Y=j*M/A*w1,o1=i1*M/A*w1;a1.projectionMatrix.makePerspective(S,N,Y,o1,w1,A),a1.projectionMatrixInverse.copy(a1.projectionMatrix).invert()}}function L1(a1,u1){u1===null?a1.matrixWorld.copy(a1.matrix):a1.matrixWorld.multiplyMatrices(u1.matrixWorld,a1.matrix),a1.matrixWorldInverse.copy(a1.matrixWorld).invert()}this.updateCamera=function(a1){if(r===null)return;let u1=a1.near,M1=a1.far;m.texture!==null&&(m.depthNear>0&&(u1=m.depthNear),m.depthFar>0&&(M1=m.depthFar)),G.near=C.near=E.near=u1,G.far=C.far=E.far=M1,(X!==G.near||s1!==G.far)&&(r.updateRenderState({depthNear:G.near,depthFar:G.far}),X=G.near,s1=G.far),G.layers.mask=a1.layers.mask|6,E.layers.mask=G.layers.mask&3,C.layers.mask=G.layers.mask&5;const D1=a1.parent,O1=G.cameras;L1(G,D1);for(let Q1=0;Q1<O1.length;Q1++)L1(O1[Q1],D1);O1.length===2?E1(G,E,C):G.projectionMatrix.copy(E.projectionMatrix),B1(a1,G,D1)};function B1(a1,u1,M1){M1===null?a1.matrix.copy(u1.matrixWorld):(a1.matrix.copy(M1.matrixWorld),a1.matrix.invert(),a1.matrix.multiply(u1.matrixWorld)),a1.matrix.decompose(a1.position,a1.quaternion,a1.scale),a1.updateMatrixWorld(!0),a1.projectionMatrix.copy(u1.projectionMatrix),a1.projectionMatrixInverse.copy(u1.projectionMatrixInverse),a1.isPerspectiveCamera&&(a1.fov=Ka*2*Math.atan(1/a1.projectionMatrix.elements[5]),a1.zoom=1)}this.getCamera=function(){return G},this.getFoveation=function(){if(!(f===null&&p===null))return l},this.setFoveation=function(a1){l=a1,f!==null&&(f.fixedFoveation=a1),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=a1)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(G)},this.getCameraTexture=function(a1){return d[a1]};let l2=null;function n2(a1,u1){if(u=u1.getViewerPose(c||a),v=u1,u!==null){const M1=u.views;p!==null&&(e.setRenderTargetFramebuffer(y,p.framebuffer),e.setRenderTarget(y));let D1=!1;M1.length!==G.cameras.length&&(G.cameras.length=0,D1=!0);for(let M=0;M<M1.length;M++){const j=M1[M];let i1=null;if(p!==null)i1=p.getViewport(j);else{const q=h.getViewSubImage(f,j);i1=q.viewport,M===0&&(e.setRenderTargetTextures(y,q.colorTexture,q.depthStencilTexture),e.setRenderTarget(y))}let $=O[M];$===void 0&&($=new J3,$.layers.enable(M),$.viewport=new B2,O[M]=$),$.matrix.fromArray(j.transform.matrix),$.matrix.decompose($.position,$.quaternion,$.scale),$.projectionMatrix.fromArray(j.projectionMatrix),$.projectionMatrixInverse.copy($.projectionMatrix).invert(),$.viewport.set(i1.x,i1.y,i1.width,i1.height),M===0&&(G.matrix.copy($.matrix),G.matrix.decompose(G.position,G.quaternion,G.scale)),D1===!0&&G.cameras.push($)}const O1=r.enabledFeatures;if(O1&&O1.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&_){h=i.getBinding();const M=h.getDepthInformation(M1[0]);M&&M.isValid&&M.texture&&m.init(M,r.renderState)}if(O1&&O1.includes("camera-access")&&_){e.state.unbindTexture(),h=i.getBinding();for(let M=0;M<M1.length;M++){const j=M1[M].camera;if(j){let i1=d[j];i1||(i1=new kc,d[j]=i1);const $=h.getCameraImage(j);i1.sourceTexture=$}}}}for(let M1=0;M1<w.length;M1++){const D1=I[M1],O1=w[M1];D1!==null&&O1!==void 0&&O1.update(D1,u1,c||a)}l2&&l2(a1,u1),u1.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:u1}),v=null}const V1=new Gc;V1.setAnimationLoop(n2),this.setAnimationLoop=function(a1){l2=a1},this.dispose=function(){}}}const Ht=new Ue,k8=new k2;function H8(n,e){function t(m,d){m.matrixAutoUpdate===!0&&m.updateMatrix(),d.value.copy(m.matrix)}function i(m,d){d.color.getRGB(m.fogColor.value,Fc(n)),d.isFog?(m.fogNear.value=d.near,m.fogFar.value=d.far):d.isFogExp2&&(m.fogDensity.value=d.density)}function r(m,d,b,T,y){d.isMeshBasicMaterial||d.isMeshLambertMaterial?s(m,d):d.isMeshToonMaterial?(s(m,d),h(m,d)):d.isMeshPhongMaterial?(s(m,d),u(m,d)):d.isMeshStandardMaterial?(s(m,d),f(m,d),d.isMeshPhysicalMaterial&&p(m,d,y)):d.isMeshMatcapMaterial?(s(m,d),v(m,d)):d.isMeshDepthMaterial?s(m,d):d.isMeshDistanceMaterial?(s(m,d),_(m,d)):d.isMeshNormalMaterial?s(m,d):d.isLineBasicMaterial?(a(m,d),d.isLineDashedMaterial&&o(m,d)):d.isPointsMaterial?l(m,d,b,T):d.isSpriteMaterial?c(m,d):d.isShadowMaterial?(m.color.value.copy(d.color),m.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function s(m,d){m.opacity.value=d.opacity,d.color&&m.diffuse.value.copy(d.color),d.emissive&&m.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(m.map.value=d.map,t(d.map,m.mapTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.bumpMap&&(m.bumpMap.value=d.bumpMap,t(d.bumpMap,m.bumpMapTransform),m.bumpScale.value=d.bumpScale,d.side===C3&&(m.bumpScale.value*=-1)),d.normalMap&&(m.normalMap.value=d.normalMap,t(d.normalMap,m.normalMapTransform),m.normalScale.value.copy(d.normalScale),d.side===C3&&m.normalScale.value.negate()),d.displacementMap&&(m.displacementMap.value=d.displacementMap,t(d.displacementMap,m.displacementMapTransform),m.displacementScale.value=d.displacementScale,m.displacementBias.value=d.displacementBias),d.emissiveMap&&(m.emissiveMap.value=d.emissiveMap,t(d.emissiveMap,m.emissiveMapTransform)),d.specularMap&&(m.specularMap.value=d.specularMap,t(d.specularMap,m.specularMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest);const b=e.get(d),T=b.envMap,y=b.envMapRotation;T&&(m.envMap.value=T,Ht.copy(y),Ht.x*=-1,Ht.y*=-1,Ht.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(Ht.y*=-1,Ht.z*=-1),m.envMapRotation.value.setFromMatrix4(k8.makeRotationFromEuler(Ht)),m.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=d.reflectivity,m.ior.value=d.ior,m.refractionRatio.value=d.refractionRatio),d.lightMap&&(m.lightMap.value=d.lightMap,m.lightMapIntensity.value=d.lightMapIntensity,t(d.lightMap,m.lightMapTransform)),d.aoMap&&(m.aoMap.value=d.aoMap,m.aoMapIntensity.value=d.aoMapIntensity,t(d.aoMap,m.aoMapTransform))}function a(m,d){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,d.map&&(m.map.value=d.map,t(d.map,m.mapTransform))}function o(m,d){m.dashSize.value=d.dashSize,m.totalSize.value=d.dashSize+d.gapSize,m.scale.value=d.scale}function l(m,d,b,T){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,m.size.value=d.size*b,m.scale.value=T*.5,d.map&&(m.map.value=d.map,t(d.map,m.uvTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest)}function c(m,d){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,m.rotation.value=d.rotation,d.map&&(m.map.value=d.map,t(d.map,m.mapTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest)}function u(m,d){m.specular.value.copy(d.specular),m.shininess.value=Math.max(d.shininess,1e-4)}function h(m,d){d.gradientMap&&(m.gradientMap.value=d.gradientMap)}function f(m,d){m.metalness.value=d.metalness,d.metalnessMap&&(m.metalnessMap.value=d.metalnessMap,t(d.metalnessMap,m.metalnessMapTransform)),m.roughness.value=d.roughness,d.roughnessMap&&(m.roughnessMap.value=d.roughnessMap,t(d.roughnessMap,m.roughnessMapTransform)),d.envMap&&(m.envMapIntensity.value=d.envMapIntensity)}function p(m,d,b){m.ior.value=d.ior,d.sheen>0&&(m.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),m.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(m.sheenColorMap.value=d.sheenColorMap,t(d.sheenColorMap,m.sheenColorMapTransform)),d.sheenRoughnessMap&&(m.sheenRoughnessMap.value=d.sheenRoughnessMap,t(d.sheenRoughnessMap,m.sheenRoughnessMapTransform))),d.clearcoat>0&&(m.clearcoat.value=d.clearcoat,m.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(m.clearcoatMap.value=d.clearcoatMap,t(d.clearcoatMap,m.clearcoatMapTransform)),d.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap,t(d.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),d.clearcoatNormalMap&&(m.clearcoatNormalMap.value=d.clearcoatNormalMap,t(d.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),d.side===C3&&m.clearcoatNormalScale.value.negate())),d.dispersion>0&&(m.dispersion.value=d.dispersion),d.iridescence>0&&(m.iridescence.value=d.iridescence,m.iridescenceIOR.value=d.iridescenceIOR,m.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(m.iridescenceMap.value=d.iridescenceMap,t(d.iridescenceMap,m.iridescenceMapTransform)),d.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=d.iridescenceThicknessMap,t(d.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),d.transmission>0&&(m.transmission.value=d.transmission,m.transmissionSamplerMap.value=b.texture,m.transmissionSamplerSize.value.set(b.width,b.height),d.transmissionMap&&(m.transmissionMap.value=d.transmissionMap,t(d.transmissionMap,m.transmissionMapTransform)),m.thickness.value=d.thickness,d.thicknessMap&&(m.thicknessMap.value=d.thicknessMap,t(d.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=d.attenuationDistance,m.attenuationColor.value.copy(d.attenuationColor)),d.anisotropy>0&&(m.anisotropyVector.value.set(d.anisotropy*Math.cos(d.anisotropyRotation),d.anisotropy*Math.sin(d.anisotropyRotation)),d.anisotropyMap&&(m.anisotropyMap.value=d.anisotropyMap,t(d.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=d.specularIntensity,m.specularColor.value.copy(d.specularColor),d.specularColorMap&&(m.specularColorMap.value=d.specularColorMap,t(d.specularColorMap,m.specularColorMapTransform)),d.specularIntensityMap&&(m.specularIntensityMap.value=d.specularIntensityMap,t(d.specularIntensityMap,m.specularIntensityMapTransform))}function v(m,d){d.matcap&&(m.matcap.value=d.matcap)}function _(m,d){const b=e.get(d).light;m.referencePosition.value.setFromMatrixPosition(b.matrixWorld),m.nearDistance.value=b.shadow.camera.near,m.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function V8(n,e,t,i){let r={},s={},a=[];const o=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(b,T){const y=T.program;i.uniformBlockBinding(b,y)}function c(b,T){let y=r[b.id];y===void 0&&(v(b),y=u(b),r[b.id]=y,b.addEventListener("dispose",m));const w=T.program;i.updateUBOMapping(b,w);const I=e.render.frame;s[b.id]!==I&&(f(b),s[b.id]=I)}function u(b){const T=h();b.__bindingPointIndex=T;const y=n.createBuffer(),w=b.__size,I=b.usage;return n.bindBuffer(n.UNIFORM_BUFFER,y),n.bufferData(n.UNIFORM_BUFFER,w,I),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,T,y),y}function h(){for(let b=0;b<o;b++)if(a.indexOf(b)===-1)return a.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(b){const T=r[b.id],y=b.uniforms,w=b.__cache;n.bindBuffer(n.UNIFORM_BUFFER,T);for(let I=0,D=y.length;I<D;I++){const L=Array.isArray(y[I])?y[I]:[y[I]];for(let E=0,C=L.length;E<C;E++){const O=L[E];if(p(O,I,E,w)===!0){const G=O.__offset,X=Array.isArray(O.value)?O.value:[O.value];let s1=0;for(let e1=0;e1<X.length;e1++){const Z=X[e1],Q=_(Z);typeof Z=="number"||typeof Z=="boolean"?(O.__data[0]=Z,n.bufferSubData(n.UNIFORM_BUFFER,G+s1,O.__data)):Z.isMatrix3?(O.__data[0]=Z.elements[0],O.__data[1]=Z.elements[1],O.__data[2]=Z.elements[2],O.__data[3]=0,O.__data[4]=Z.elements[3],O.__data[5]=Z.elements[4],O.__data[6]=Z.elements[5],O.__data[7]=0,O.__data[8]=Z.elements[6],O.__data[9]=Z.elements[7],O.__data[10]=Z.elements[8],O.__data[11]=0):(Z.toArray(O.__data,s1),s1+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,G,O.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function p(b,T,y,w){const I=b.value,D=T+"_"+y;if(w[D]===void 0)return typeof I=="number"||typeof I=="boolean"?w[D]=I:w[D]=I.clone(),!0;{const L=w[D];if(typeof I=="number"||typeof I=="boolean"){if(L!==I)return w[D]=I,!0}else if(L.equals(I)===!1)return L.copy(I),!0}return!1}function v(b){const T=b.uniforms;let y=0;const w=16;for(let D=0,L=T.length;D<L;D++){const E=Array.isArray(T[D])?T[D]:[T[D]];for(let C=0,O=E.length;C<O;C++){const G=E[C],X=Array.isArray(G.value)?G.value:[G.value];for(let s1=0,e1=X.length;s1<e1;s1++){const Z=X[s1],Q=_(Z),V=y%w,p1=V%Q.boundary,E1=V+p1;y+=p1,E1!==0&&w-E1<Q.storage&&(y+=w-E1),G.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),G.__offset=y,y+=Q.storage}}}const I=y%w;return I>0&&(y+=w-I),b.__size=y,b.__cache={},this}function _(b){const T={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(T.boundary=4,T.storage=4):b.isVector2?(T.boundary=8,T.storage=8):b.isVector3||b.isColor?(T.boundary=16,T.storage=12):b.isVector4?(T.boundary=16,T.storage=16):b.isMatrix3?(T.boundary=48,T.storage=48):b.isMatrix4?(T.boundary=64,T.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),T}function m(b){const T=b.target;T.removeEventListener("dispose",m);const y=a.indexOf(T.__bindingPointIndex);a.splice(y,1),n.deleteBuffer(r[T.id]),delete r[T.id],delete s[T.id]}function d(){for(const b in r)n.deleteBuffer(r[b]);a=[],r={},s={}}return{bind:l,update:c,dispose:d}}class G8{constructor(e={}){const{canvas:t=Sf(),context:i=null,depth:r=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let p;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=a;const v=new Uint32Array(4),_=new Int32Array(4);let m=null,d=null;const b=[],T=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Mt,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let w=!1;this._outputColorSpace=Z3;let I=0,D=0,L=null,E=-1,C=null;const O=new B2,G=new B2;let X=null;const s1=new _2(0);let e1=0,Z=t.width,Q=t.height,V=1,p1=null,E1=null;const L1=new B2(0,0,Z,Q),B1=new B2(0,0,Z,Q);let l2=!1;const n2=new Vo;let V1=!1,a1=!1;const u1=new k2,M1=new J,D1=new B2,O1={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Q1=!1;function F(){return L===null?V:1}let M=i;function j(R,H){return t.getContext(R,H)}try{const R={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Do}`),t.addEventListener("webglcontextlost",S1,!1),t.addEventListener("webglcontextrestored",N1,!1),t.addEventListener("webglcontextcreationerror",m1,!1),M===null){const H="webgl2";if(M=j(H,R),M===null)throw j(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let i1,$,q,h1,k,l1,c1,w1,A,S,N,Y,o1,K,A1,_1,P1,I1,g1,T1,z1,U1,b1,e2;function B(){i1=new Qp(M),i1.init(),U1=new F8(M,i1),$=new qp(M,i1,e,U1),q=new D8(M,i1),$.reversedDepthBuffer&&f&&q.buffers.depth.setReversed(!0),h1=new nm(M),k=new y8,l1=new U8(M,i1,q,k,$,U1,h1),c1=new Yp(y),w1=new Jp(y),A=new ld(M),b1=new Wp(M,A),S=new em(M,A,h1,b1),N=new rm(M,S,A,h1),g1=new im(M,$,l1),_1=new $p(k),Y=new x8(y,c1,w1,i1,$,b1,_1),o1=new H8(y,k),K=new S8,A1=new C8(i1),I1=new Gp(y,c1,w1,q,N,p,l),P1=new P8(y,N,$),e2=new V8(M,h1,$,q),T1=new Xp(M,i1,h1),z1=new tm(M,i1,h1),h1.programs=Y.programs,y.capabilities=$,y.extensions=i1,y.properties=k,y.renderLists=K,y.shadowMap=P1,y.state=q,y.info=h1}B();const y1=new z8(y,M);this.xr=y1,this.getContext=function(){return M},this.getContextAttributes=function(){return M.getContextAttributes()},this.forceContextLoss=function(){const R=i1.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=i1.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(R){R!==void 0&&(V=R,this.setSize(Z,Q,!1))},this.getSize=function(R){return R.set(Z,Q)},this.setSize=function(R,H,n1=!0){if(y1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Z=R,Q=H,t.width=Math.floor(R*V),t.height=Math.floor(H*V),n1===!0&&(t.style.width=R+"px",t.style.height=H+"px"),this.setViewport(0,0,R,H)},this.getDrawingBufferSize=function(R){return R.set(Z*V,Q*V).floor()},this.setDrawingBufferSize=function(R,H,n1){Z=R,Q=H,V=n1,t.width=Math.floor(R*n1),t.height=Math.floor(H*n1),this.setViewport(0,0,R,H)},this.getCurrentViewport=function(R){return R.copy(O)},this.getViewport=function(R){return R.copy(L1)},this.setViewport=function(R,H,n1,r1){R.isVector4?L1.set(R.x,R.y,R.z,R.w):L1.set(R,H,n1,r1),q.viewport(O.copy(L1).multiplyScalar(V).round())},this.getScissor=function(R){return R.copy(B1)},this.setScissor=function(R,H,n1,r1){R.isVector4?B1.set(R.x,R.y,R.z,R.w):B1.set(R,H,n1,r1),q.scissor(G.copy(B1).multiplyScalar(V).round())},this.getScissorTest=function(){return l2},this.setScissorTest=function(R){q.setScissorTest(l2=R)},this.setOpaqueSort=function(R){p1=R},this.setTransparentSort=function(R){E1=R},this.getClearColor=function(R){return R.copy(I1.getClearColor())},this.setClearColor=function(){I1.setClearColor(...arguments)},this.getClearAlpha=function(){return I1.getClearAlpha()},this.setClearAlpha=function(){I1.setClearAlpha(...arguments)},this.clear=function(R=!0,H=!0,n1=!0){let r1=0;if(R){let W=!1;if(L!==null){const v1=L.texture.format;W=v1===ko||v1===zo||v1===Bo}if(W){const v1=L.texture.type,C1=v1===De||v1===a0||v1===Vn||v1===Gn||v1===Oo||v1===No,k1=I1.getClearColor(),F1=I1.getClearAlpha(),Y1=k1.r,K1=k1.g,X1=k1.b;C1?(v[0]=Y1,v[1]=K1,v[2]=X1,v[3]=F1,M.clearBufferuiv(M.COLOR,0,v)):(_[0]=Y1,_[1]=K1,_[2]=X1,_[3]=F1,M.clearBufferiv(M.COLOR,0,_))}else r1|=M.COLOR_BUFFER_BIT}H&&(r1|=M.DEPTH_BUFFER_BIT),n1&&(r1|=M.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),M.clear(r1)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",S1,!1),t.removeEventListener("webglcontextrestored",N1,!1),t.removeEventListener("webglcontextcreationerror",m1,!1),I1.dispose(),K.dispose(),A1.dispose(),k.dispose(),c1.dispose(),w1.dispose(),N.dispose(),b1.dispose(),e2.dispose(),Y.dispose(),y1.dispose(),y1.removeEventListener("sessionstart",b3),y1.removeEventListener("sessionend",li),oe.stop()};function S1(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function N1(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const R=h1.autoReset,H=P1.enabled,n1=P1.autoUpdate,r1=P1.needsUpdate,W=P1.type;B(),h1.autoReset=R,P1.enabled=H,P1.autoUpdate=n1,P1.needsUpdate=r1,P1.type=W}function m1(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function f1(R){const H=R.target;H.removeEventListener("dispose",f1),H1(H)}function H1(R){G1(R),k.remove(R)}function G1(R){const H=k.get(R).programs;H!==void 0&&(H.forEach(function(n1){Y.releaseProgram(n1)}),R.isShaderMaterial&&Y.releaseShaderCache(R))}this.renderBufferDirect=function(R,H,n1,r1,W,v1){H===null&&(H=O1);const C1=W.isMesh&&W.matrixWorld.determinant()<0,k1=d0(R,H,n1,r1,W);q.setMaterial(r1,C1);let F1=n1.index,Y1=1;if(r1.wireframe===!0){if(F1=S.getWireframeAttribute(n1),F1===void 0)return;Y1=2}const K1=n1.drawRange,X1=n1.attributes.position;let i2=K1.start*Y1,g2=(K1.start+K1.count)*Y1;v1!==null&&(i2=Math.max(i2,v1.start*Y1),g2=Math.min(g2,(v1.start+v1.count)*Y1)),F1!==null?(i2=Math.max(i2,0),g2=Math.min(g2,F1.count)):X1!=null&&(i2=Math.max(i2,0),g2=Math.min(g2,X1.count));const P2=g2-i2;if(P2<0||P2===1/0)return;b1.setup(W,r1,k1,n1,F1);let b2,v2=T1;if(F1!==null&&(b2=A.get(F1),v2=z1,v2.setIndex(b2)),W.isMesh)r1.wireframe===!0?(q.setLineWidth(r1.wireframeLinewidth*F()),v2.setMode(M.LINES)):v2.setMode(M.TRIANGLES);else if(W.isLine){let q1=r1.linewidth;q1===void 0&&(q1=1),q.setLineWidth(q1*F()),W.isLineSegments?v2.setMode(M.LINES):W.isLineLoop?v2.setMode(M.LINE_LOOP):v2.setMode(M.LINE_STRIP)}else W.isPoints?v2.setMode(M.POINTS):W.isSprite&&v2.setMode(M.TRIANGLES);if(W.isBatchedMesh)if(W._multiDrawInstances!==null)qn("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),v2.renderMultiDrawInstances(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount,W._multiDrawInstances);else if(i1.get("WEBGL_multi_draw"))v2.renderMultiDraw(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount);else{const q1=W._multiDrawStarts,T2=W._multiDrawCounts,f2=W._multiDrawCount,o3=F1?A.get(F1).bytesPerElement:1,ze=k.get(r1).currentProgram.getUniforms();for(let K2=0;K2<f2;K2++)ze.setValue(M,"_gl_DrawID",K2),v2.render(q1[K2]/o3,T2[K2])}else if(W.isInstancedMesh)v2.renderInstances(i2,P2,W.count);else if(n1.isInstancedBufferGeometry){const q1=n1._maxInstanceCount!==void 0?n1._maxInstanceCount:1/0,T2=Math.min(n1.instanceCount,q1);v2.renderInstances(i2,P2,T2)}else v2.render(i2,P2)};function S2(R,H,n1){R.transparent===!0&&R.side===Ze&&R.forceSinglePass===!1?(R.side=C3,R.needsUpdate=!0,Be(R,H,n1),R.side=At,R.needsUpdate=!0,Be(R,H,n1),R.side=Ze):Be(R,H,n1)}this.compile=function(R,H,n1=null){n1===null&&(n1=R),d=A1.get(n1),d.init(H),T.push(d),n1.traverseVisible(function(W){W.isLight&&W.layers.test(H.layers)&&(d.pushLight(W),W.castShadow&&d.pushShadow(W))}),R!==n1&&R.traverseVisible(function(W){W.isLight&&W.layers.test(H.layers)&&(d.pushLight(W),W.castShadow&&d.pushShadow(W))}),d.setupLights();const r1=new Set;return R.traverse(function(W){if(!(W.isMesh||W.isPoints||W.isLine||W.isSprite))return;const v1=W.material;if(v1)if(Array.isArray(v1))for(let C1=0;C1<v1.length;C1++){const k1=v1[C1];S2(k1,n1,W),r1.add(k1)}else S2(v1,n1,W),r1.add(v1)}),d=T.pop(),r1},this.compileAsync=function(R,H,n1=null){const r1=this.compile(R,H,n1);return new Promise(W=>{function v1(){if(r1.forEach(function(C1){k.get(C1).currentProgram.isReady()&&r1.delete(C1)}),r1.size===0){W(R);return}setTimeout(v1,10)}i1.get("KHR_parallel_shader_compile")!==null?v1():setTimeout(v1,10)})};let d2=null;function E3(R){d2&&d2(R)}function b3(){oe.stop()}function li(){oe.start()}const oe=new Gc;oe.setAnimationLoop(E3),typeof self<"u"&&oe.setContext(self),this.setAnimationLoop=function(R){d2=R,y1.setAnimationLoop(R),R===null?oe.stop():oe.start()},y1.addEventListener("sessionstart",b3),y1.addEventListener("sessionend",li),this.render=function(R,H){if(H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;if(R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),H.parent===null&&H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),y1.enabled===!0&&y1.isPresenting===!0&&(y1.cameraAutoUpdate===!0&&y1.updateCamera(H),H=y1.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,H,L),d=A1.get(R,T.length),d.init(H),T.push(d),u1.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),n2.setFromProjectionMatrix(u1,Le,H.reversedDepth),a1=this.localClippingEnabled,V1=_1.init(this.clippingPlanes,a1),m=K.get(R,b.length),m.init(),b.push(m),y1.enabled===!0&&y1.isPresenting===!0){const v1=y.xr.getDepthSensingMesh();v1!==null&&h0(v1,H,-1/0,y.sortObjects)}h0(R,H,0,y.sortObjects),m.finish(),y.sortObjects===!0&&m.sort(p1,E1),Q1=y1.enabled===!1||y1.isPresenting===!1||y1.hasDepthSensing()===!1,Q1&&I1.addToRenderList(m,R),this.info.render.frame++,V1===!0&&_1.beginShadows();const n1=d.state.shadowsArray;P1.render(n1,R,H),V1===!0&&_1.endShadows(),this.info.autoReset===!0&&this.info.reset();const r1=m.opaque,W=m.transmissive;if(d.setupLights(),H.isArrayCamera){const v1=H.cameras;if(W.length>0)for(let C1=0,k1=v1.length;C1<k1;C1++){const F1=v1[C1];Y3(r1,W,R,F1)}Q1&&I1.render(R);for(let C1=0,k1=v1.length;C1<k1;C1++){const F1=v1[C1];f0(m,R,F1,F1.viewport)}}else W.length>0&&Y3(r1,W,R,H),Q1&&I1.render(R),f0(m,R,H);L!==null&&D===0&&(l1.updateMultisampleRenderTarget(L),l1.updateRenderTargetMipmap(L)),R.isScene===!0&&R.onAfterRender(y,R,H),b1.resetDefaultState(),E=-1,C=null,T.pop(),T.length>0?(d=T[T.length-1],V1===!0&&_1.setGlobalState(y.clippingPlanes,d.state.camera)):d=null,b.pop(),b.length>0?m=b[b.length-1]:m=null};function h0(R,H,n1,r1){if(R.visible===!1)return;if(R.layers.test(H.layers)){if(R.isGroup)n1=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(H);else if(R.isLight)d.pushLight(R),R.castShadow&&d.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||n2.intersectsSprite(R)){r1&&D1.setFromMatrixPosition(R.matrixWorld).applyMatrix4(u1);const C1=N.update(R),k1=R.material;k1.visible&&m.push(R,C1,k1,n1,D1.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||n2.intersectsObject(R))){const C1=N.update(R),k1=R.material;if(r1&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),D1.copy(R.boundingSphere.center)):(C1.boundingSphere===null&&C1.computeBoundingSphere(),D1.copy(C1.boundingSphere.center)),D1.applyMatrix4(R.matrixWorld).applyMatrix4(u1)),Array.isArray(k1)){const F1=C1.groups;for(let Y1=0,K1=F1.length;Y1<K1;Y1++){const X1=F1[Y1],i2=k1[X1.materialIndex];i2&&i2.visible&&m.push(R,C1,i2,n1,D1.z,X1)}}else k1.visible&&m.push(R,C1,k1,n1,D1.z,null)}}const v1=R.children;for(let C1=0,k1=v1.length;C1<k1;C1++)h0(v1[C1],H,n1,r1)}function f0(R,H,n1,r1){const W=R.opaque,v1=R.transmissive,C1=R.transparent;d.setupLightsView(n1),V1===!0&&_1.setGlobalState(y.clippingPlanes,n1),r1&&q.viewport(O.copy(r1)),W.length>0&&st(W,H,n1),v1.length>0&&st(v1,H,n1),C1.length>0&&st(C1,H,n1),q.buffers.depth.setTest(!0),q.buffers.depth.setMask(!0),q.buffers.color.setMask(!0),q.setPolygonOffset(!1)}function Y3(R,H,n1,r1){if((n1.isScene===!0?n1.overrideMaterial:null)!==null)return;d.state.transmissionRenderTarget[r1.id]===void 0&&(d.state.transmissionRenderTarget[r1.id]=new o0(1,1,{generateMipmaps:!0,type:i1.has("EXT_color_buffer_half_float")||i1.has("EXT_color_buffer_float")?ni:De,minFilter:Qt,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:m2.workingColorSpace}));const v1=d.state.transmissionRenderTarget[r1.id],C1=r1.viewport||O;v1.setSize(C1.z*y.transmissionResolutionScale,C1.w*y.transmissionResolutionScale);const k1=y.getRenderTarget(),F1=y.getActiveCubeFace(),Y1=y.getActiveMipmapLevel();y.setRenderTarget(v1),y.getClearColor(s1),e1=y.getClearAlpha(),e1<1&&y.setClearColor(16777215,.5),y.clear(),Q1&&I1.render(n1);const K1=y.toneMapping;y.toneMapping=Mt;const X1=r1.viewport;if(r1.viewport!==void 0&&(r1.viewport=void 0),d.setupLightsView(r1),V1===!0&&_1.setGlobalState(y.clippingPlanes,r1),st(R,n1,r1),l1.updateMultisampleRenderTarget(v1),l1.updateRenderTargetMipmap(v1),i1.has("WEBGL_multisampled_render_to_texture")===!1){let i2=!1;for(let g2=0,P2=H.length;g2<P2;g2++){const b2=H[g2],v2=b2.object,q1=b2.geometry,T2=b2.material,f2=b2.group;if(T2.side===Ze&&v2.layers.test(r1.layers)){const o3=T2.side;T2.side=C3,T2.needsUpdate=!0,Ne(v2,n1,r1,q1,T2,f2),T2.side=o3,T2.needsUpdate=!0,i2=!0}}i2===!0&&(l1.updateMultisampleRenderTarget(v1),l1.updateRenderTargetMipmap(v1))}y.setRenderTarget(k1,F1,Y1),y.setClearColor(s1,e1),X1!==void 0&&(r1.viewport=X1),y.toneMapping=K1}function st(R,H,n1){const r1=H.isScene===!0?H.overrideMaterial:null;for(let W=0,v1=R.length;W<v1;W++){const C1=R[W],k1=C1.object,F1=C1.geometry,Y1=C1.group;let K1=C1.material;K1.allowOverride===!0&&r1!==null&&(K1=r1),k1.layers.test(n1.layers)&&Ne(k1,H,n1,F1,K1,Y1)}}function Ne(R,H,n1,r1,W,v1){R.onBeforeRender(y,H,n1,r1,W,v1),R.modelViewMatrix.multiplyMatrices(n1.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),W.onBeforeRender(y,H,n1,r1,R,v1),W.transparent===!0&&W.side===Ze&&W.forceSinglePass===!1?(W.side=C3,W.needsUpdate=!0,y.renderBufferDirect(n1,H,r1,W,R,v1),W.side=At,W.needsUpdate=!0,y.renderBufferDirect(n1,H,r1,W,R,v1),W.side=Ze):y.renderBufferDirect(n1,H,r1,W,R,v1),R.onAfterRender(y,H,n1,r1,W,v1)}function Be(R,H,n1){H.isScene!==!0&&(H=O1);const r1=k.get(R),W=d.state.lights,v1=d.state.shadowsArray,C1=W.state.version,k1=Y.getParameters(R,W.state,v1,H,n1),F1=Y.getProgramCacheKey(k1);let Y1=r1.programs;r1.environment=R.isMeshStandardMaterial?H.environment:null,r1.fog=H.fog,r1.envMap=(R.isMeshStandardMaterial?w1:c1).get(R.envMap||r1.environment),r1.envMapRotation=r1.environment!==null&&R.envMap===null?H.environmentRotation:R.envMapRotation,Y1===void 0&&(R.addEventListener("dispose",f1),Y1=new Map,r1.programs=Y1);let K1=Y1.get(F1);if(K1!==void 0){if(r1.currentProgram===K1&&r1.lightsStateVersion===C1)return ci(R,k1),K1}else k1.uniforms=Y.getUniforms(R),R.onBeforeCompile(k1,y),K1=Y.acquireProgram(k1,F1),Y1.set(F1,K1),r1.uniforms=k1.uniforms;const X1=r1.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(X1.clippingPlanes=_1.uniform),ci(R,k1),r1.needsLights=Gr(R),r1.lightsStateVersion=C1,r1.needsLights&&(X1.ambientLightColor.value=W.state.ambient,X1.lightProbe.value=W.state.probe,X1.directionalLights.value=W.state.directional,X1.directionalLightShadows.value=W.state.directionalShadow,X1.spotLights.value=W.state.spot,X1.spotLightShadows.value=W.state.spotShadow,X1.rectAreaLights.value=W.state.rectArea,X1.ltc_1.value=W.state.rectAreaLTC1,X1.ltc_2.value=W.state.rectAreaLTC2,X1.pointLights.value=W.state.point,X1.pointLightShadows.value=W.state.pointShadow,X1.hemisphereLights.value=W.state.hemi,X1.directionalShadowMap.value=W.state.directionalShadowMap,X1.directionalShadowMatrix.value=W.state.directionalShadowMatrix,X1.spotShadowMap.value=W.state.spotShadowMap,X1.spotLightMatrix.value=W.state.spotLightMatrix,X1.spotLightMap.value=W.state.spotLightMap,X1.pointShadowMap.value=W.state.pointShadowMap,X1.pointShadowMatrix.value=W.state.pointShadowMatrix),r1.currentProgram=K1,r1.uniformsList=null,K1}function un(R){if(R.uniformsList===null){const H=R.currentProgram.getUniforms();R.uniformsList=ji.seqWithValue(H.seq,R.uniforms)}return R.uniformsList}function ci(R,H){const n1=k.get(R);n1.outputColorSpace=H.outputColorSpace,n1.batching=H.batching,n1.batchingColor=H.batchingColor,n1.instancing=H.instancing,n1.instancingColor=H.instancingColor,n1.instancingMorph=H.instancingMorph,n1.skinning=H.skinning,n1.morphTargets=H.morphTargets,n1.morphNormals=H.morphNormals,n1.morphColors=H.morphColors,n1.morphTargetsCount=H.morphTargetsCount,n1.numClippingPlanes=H.numClippingPlanes,n1.numIntersection=H.numClipIntersection,n1.vertexAlphas=H.vertexAlphas,n1.vertexTangents=H.vertexTangents,n1.toneMapping=H.toneMapping}function d0(R,H,n1,r1,W){H.isScene!==!0&&(H=O1),l1.resetTextureUnits();const v1=H.fog,C1=r1.isMeshStandardMaterial?H.environment:null,k1=L===null?y.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:Z0,F1=(r1.isMeshStandardMaterial?w1:c1).get(r1.envMap||C1),Y1=r1.vertexColors===!0&&!!n1.attributes.color&&n1.attributes.color.itemSize===4,K1=!!n1.attributes.tangent&&(!!r1.normalMap||r1.anisotropy>0),X1=!!n1.morphAttributes.position,i2=!!n1.morphAttributes.normal,g2=!!n1.morphAttributes.color;let P2=Mt;r1.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(P2=y.toneMapping);const b2=n1.morphAttributes.position||n1.morphAttributes.normal||n1.morphAttributes.color,v2=b2!==void 0?b2.length:0,q1=k.get(r1),T2=d.state.lights;if(V1===!0&&(a1===!0||R!==C)){const Z2=R===C&&r1.id===E;_1.setState(r1,R,Z2)}let f2=!1;r1.version===q1.__version?(q1.needsLights&&q1.lightsStateVersion!==T2.state.version||q1.outputColorSpace!==k1||W.isBatchedMesh&&q1.batching===!1||!W.isBatchedMesh&&q1.batching===!0||W.isBatchedMesh&&q1.batchingColor===!0&&W.colorTexture===null||W.isBatchedMesh&&q1.batchingColor===!1&&W.colorTexture!==null||W.isInstancedMesh&&q1.instancing===!1||!W.isInstancedMesh&&q1.instancing===!0||W.isSkinnedMesh&&q1.skinning===!1||!W.isSkinnedMesh&&q1.skinning===!0||W.isInstancedMesh&&q1.instancingColor===!0&&W.instanceColor===null||W.isInstancedMesh&&q1.instancingColor===!1&&W.instanceColor!==null||W.isInstancedMesh&&q1.instancingMorph===!0&&W.morphTexture===null||W.isInstancedMesh&&q1.instancingMorph===!1&&W.morphTexture!==null||q1.envMap!==F1||r1.fog===!0&&q1.fog!==v1||q1.numClippingPlanes!==void 0&&(q1.numClippingPlanes!==_1.numPlanes||q1.numIntersection!==_1.numIntersection)||q1.vertexAlphas!==Y1||q1.vertexTangents!==K1||q1.morphTargets!==X1||q1.morphNormals!==i2||q1.morphColors!==g2||q1.toneMapping!==P2||q1.morphTargetsCount!==v2)&&(f2=!0):(f2=!0,q1.__version=r1.version);let o3=q1.currentProgram;f2===!0&&(o3=Be(r1,H,W));let ze=!1,K2=!1,Dt=!1;const Z1=o3.getUniforms(),l3=q1.uniforms;if(q.useProgram(o3.program)&&(ze=!0,K2=!0,Dt=!0),r1.id!==E&&(E=r1.id,K2=!0),ze||C!==R){q.buffers.depth.getReversed()&&R.reversedDepth!==!0&&(R._reversedDepth=!0,R.updateProjectionMatrix()),Z1.setValue(M,"projectionMatrix",R.projectionMatrix),Z1.setValue(M,"viewMatrix",R.matrixWorldInverse);const n3=Z1.map.cameraPosition;n3!==void 0&&n3.setValue(M,M1.setFromMatrixPosition(R.matrixWorld)),$.logarithmicDepthBuffer&&Z1.setValue(M,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(r1.isMeshPhongMaterial||r1.isMeshToonMaterial||r1.isMeshLambertMaterial||r1.isMeshBasicMaterial||r1.isMeshStandardMaterial||r1.isShaderMaterial)&&Z1.setValue(M,"isOrthographic",R.isOrthographicCamera===!0),C!==R&&(C=R,K2=!0,Dt=!0)}if(W.isSkinnedMesh){Z1.setOptional(M,W,"bindMatrix"),Z1.setOptional(M,W,"bindMatrixInverse");const Z2=W.skeleton;Z2&&(Z2.boneTexture===null&&Z2.computeBoneTexture(),Z1.setValue(M,"boneTexture",Z2.boneTexture,l1))}W.isBatchedMesh&&(Z1.setOptional(M,W,"batchingTexture"),Z1.setValue(M,"batchingTexture",W._matricesTexture,l1),Z1.setOptional(M,W,"batchingIdTexture"),Z1.setValue(M,"batchingIdTexture",W._indirectTexture,l1),Z1.setOptional(M,W,"batchingColorTexture"),W._colorsTexture!==null&&Z1.setValue(M,"batchingColorTexture",W._colorsTexture,l1));const O2=n1.morphAttributes;if((O2.position!==void 0||O2.normal!==void 0||O2.color!==void 0)&&g1.update(W,n1,o3),(K2||q1.receiveShadow!==W.receiveShadow)&&(q1.receiveShadow=W.receiveShadow,Z1.setValue(M,"receiveShadow",W.receiveShadow)),r1.isMeshGouraudMaterial&&r1.envMap!==null&&(l3.envMap.value=F1,l3.flipEnvMap.value=F1.isCubeTexture&&F1.isRenderTargetTexture===!1?-1:1),r1.isMeshStandardMaterial&&r1.envMap===null&&H.environment!==null&&(l3.envMapIntensity.value=H.environmentIntensity),K2&&(Z1.setValue(M,"toneMappingExposure",y.toneMappingExposure),q1.needsLights&&hn(l3,Dt),v1&&r1.fog===!0&&o1.refreshFogUniforms(l3,v1),o1.refreshMaterialUniforms(l3,r1,V,Q,d.state.transmissionRenderTarget[R.id]),ji.upload(M,un(q1),l3,l1)),r1.isShaderMaterial&&r1.uniformsNeedUpdate===!0&&(ji.upload(M,un(q1),l3,l1),r1.uniformsNeedUpdate=!1),r1.isSpriteMaterial&&Z1.setValue(M,"center",W.center),Z1.setValue(M,"modelViewMatrix",W.modelViewMatrix),Z1.setValue(M,"normalMatrix",W.normalMatrix),Z1.setValue(M,"modelMatrix",W.matrixWorld),r1.isShaderMaterial||r1.isRawShaderMaterial){const Z2=r1.uniformsGroups;for(let n3=0,T3=Z2.length;n3<T3;n3++){const J2=Z2[n3];e2.update(J2,o3),e2.bind(J2,o3)}}return o3}function hn(R,H){R.ambientLightColor.needsUpdate=H,R.lightProbe.needsUpdate=H,R.directionalLights.needsUpdate=H,R.directionalLightShadows.needsUpdate=H,R.pointLights.needsUpdate=H,R.pointLightShadows.needsUpdate=H,R.spotLights.needsUpdate=H,R.spotLightShadows.needsUpdate=H,R.rectAreaLights.needsUpdate=H,R.hemisphereLights.needsUpdate=H}function Gr(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return I},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(R,H,n1){const r1=k.get(R);r1.__autoAllocateDepthBuffer=R.resolveDepthBuffer===!1,r1.__autoAllocateDepthBuffer===!1&&(r1.__useRenderToTexture=!1),k.get(R.texture).__webglTexture=H,k.get(R.depthTexture).__webglTexture=r1.__autoAllocateDepthBuffer?void 0:n1,r1.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(R,H){const n1=k.get(R);n1.__webglFramebuffer=H,n1.__useDefaultFramebuffer=H===void 0};const Wr=M.createFramebuffer();this.setRenderTarget=function(R,H=0,n1=0){L=R,I=H,D=n1;let r1=!0,W=null,v1=!1,C1=!1;if(R){const F1=k.get(R);if(F1.__useDefaultFramebuffer!==void 0)q.bindFramebuffer(M.FRAMEBUFFER,null),r1=!1;else if(F1.__webglFramebuffer===void 0)l1.setupRenderTarget(R);else if(F1.__hasExternalTextures)l1.rebindTextures(R,k.get(R.texture).__webglTexture,k.get(R.depthTexture).__webglTexture);else if(R.depthBuffer){const X1=R.depthTexture;if(F1.__boundDepthTexture!==X1){if(X1!==null&&k.has(X1)&&(R.width!==X1.image.width||R.height!==X1.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");l1.setupDepthRenderbuffer(R)}}const Y1=R.texture;(Y1.isData3DTexture||Y1.isDataArrayTexture||Y1.isCompressedArrayTexture)&&(C1=!0);const K1=k.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(K1[H])?W=K1[H][n1]:W=K1[H],v1=!0):R.samples>0&&l1.useMultisampledRTT(R)===!1?W=k.get(R).__webglMultisampledFramebuffer:Array.isArray(K1)?W=K1[n1]:W=K1,O.copy(R.viewport),G.copy(R.scissor),X=R.scissorTest}else O.copy(L1).multiplyScalar(V).floor(),G.copy(B1).multiplyScalar(V).floor(),X=l2;if(n1!==0&&(W=Wr),q.bindFramebuffer(M.FRAMEBUFFER,W)&&r1&&q.drawBuffers(R,W),q.viewport(O),q.scissor(G),q.setScissorTest(X),v1){const F1=k.get(R.texture);M.framebufferTexture2D(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_CUBE_MAP_POSITIVE_X+H,F1.__webglTexture,n1)}else if(C1){const F1=H;for(let Y1=0;Y1<R.textures.length;Y1++){const K1=k.get(R.textures[Y1]);M.framebufferTextureLayer(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0+Y1,K1.__webglTexture,n1,F1)}}else if(R!==null&&n1!==0){const F1=k.get(R.texture);M.framebufferTexture2D(M.FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,F1.__webglTexture,n1)}E=-1},this.readRenderTargetPixels=function(R,H,n1,r1,W,v1,C1,k1=0){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let F1=k.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&C1!==void 0&&(F1=F1[C1]),F1){q.bindFramebuffer(M.FRAMEBUFFER,F1);try{const Y1=R.textures[k1],K1=Y1.format,X1=Y1.type;if(!$.textureFormatReadable(K1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!$.textureTypeReadable(X1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=R.width-r1&&n1>=0&&n1<=R.height-W&&(R.textures.length>1&&M.readBuffer(M.COLOR_ATTACHMENT0+k1),M.readPixels(H,n1,r1,W,U1.convert(K1),U1.convert(X1),v1))}finally{const Y1=L!==null?k.get(L).__webglFramebuffer:null;q.bindFramebuffer(M.FRAMEBUFFER,Y1)}}},this.readRenderTargetPixelsAsync=async function(R,H,n1,r1,W,v1,C1,k1=0){if(!(R&&R.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let F1=k.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&C1!==void 0&&(F1=F1[C1]),F1)if(H>=0&&H<=R.width-r1&&n1>=0&&n1<=R.height-W){q.bindFramebuffer(M.FRAMEBUFFER,F1);const Y1=R.textures[k1],K1=Y1.format,X1=Y1.type;if(!$.textureFormatReadable(K1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(X1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const i2=M.createBuffer();M.bindBuffer(M.PIXEL_PACK_BUFFER,i2),M.bufferData(M.PIXEL_PACK_BUFFER,v1.byteLength,M.STREAM_READ),R.textures.length>1&&M.readBuffer(M.COLOR_ATTACHMENT0+k1),M.readPixels(H,n1,r1,W,U1.convert(K1),U1.convert(X1),0);const g2=L!==null?k.get(L).__webglFramebuffer:null;q.bindFramebuffer(M.FRAMEBUFFER,g2);const P2=M.fenceSync(M.SYNC_GPU_COMMANDS_COMPLETE,0);return M.flush(),await Ef(M,P2,4),M.bindBuffer(M.PIXEL_PACK_BUFFER,i2),M.getBufferSubData(M.PIXEL_PACK_BUFFER,0,v1),M.deleteBuffer(i2),M.deleteSync(P2),v1}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(R,H=null,n1=0){const r1=Math.pow(2,-n1),W=Math.floor(R.image.width*r1),v1=Math.floor(R.image.height*r1),C1=H!==null?H.x:0,k1=H!==null?H.y:0;l1.setTexture2D(R,0),M.copyTexSubImage2D(M.TEXTURE_2D,n1,0,0,C1,k1,W,v1),q.unbindTexture()};const Xr=M.createFramebuffer(),ui=M.createFramebuffer();this.copyTextureToTexture=function(R,H,n1=null,r1=null,W=0,v1=null){v1===null&&(W!==0?(qn("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),v1=W,W=0):v1=0);let C1,k1,F1,Y1,K1,X1,i2,g2,P2;const b2=R.isCompressedTexture?R.mipmaps[v1]:R.image;if(n1!==null)C1=n1.max.x-n1.min.x,k1=n1.max.y-n1.min.y,F1=n1.isBox3?n1.max.z-n1.min.z:1,Y1=n1.min.x,K1=n1.min.y,X1=n1.isBox3?n1.min.z:0;else{const O2=Math.pow(2,-W);C1=Math.floor(b2.width*O2),k1=Math.floor(b2.height*O2),R.isDataArrayTexture?F1=b2.depth:R.isData3DTexture?F1=Math.floor(b2.depth*O2):F1=1,Y1=0,K1=0,X1=0}r1!==null?(i2=r1.x,g2=r1.y,P2=r1.z):(i2=0,g2=0,P2=0);const v2=U1.convert(H.format),q1=U1.convert(H.type);let T2;H.isData3DTexture?(l1.setTexture3D(H,0),T2=M.TEXTURE_3D):H.isDataArrayTexture||H.isCompressedArrayTexture?(l1.setTexture2DArray(H,0),T2=M.TEXTURE_2D_ARRAY):(l1.setTexture2D(H,0),T2=M.TEXTURE_2D),M.pixelStorei(M.UNPACK_FLIP_Y_WEBGL,H.flipY),M.pixelStorei(M.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),M.pixelStorei(M.UNPACK_ALIGNMENT,H.unpackAlignment);const f2=M.getParameter(M.UNPACK_ROW_LENGTH),o3=M.getParameter(M.UNPACK_IMAGE_HEIGHT),ze=M.getParameter(M.UNPACK_SKIP_PIXELS),K2=M.getParameter(M.UNPACK_SKIP_ROWS),Dt=M.getParameter(M.UNPACK_SKIP_IMAGES);M.pixelStorei(M.UNPACK_ROW_LENGTH,b2.width),M.pixelStorei(M.UNPACK_IMAGE_HEIGHT,b2.height),M.pixelStorei(M.UNPACK_SKIP_PIXELS,Y1),M.pixelStorei(M.UNPACK_SKIP_ROWS,K1),M.pixelStorei(M.UNPACK_SKIP_IMAGES,X1);const Z1=R.isDataArrayTexture||R.isData3DTexture,l3=H.isDataArrayTexture||H.isData3DTexture;if(R.isDepthTexture){const O2=k.get(R),Z2=k.get(H),n3=k.get(O2.__renderTarget),T3=k.get(Z2.__renderTarget);q.bindFramebuffer(M.READ_FRAMEBUFFER,n3.__webglFramebuffer),q.bindFramebuffer(M.DRAW_FRAMEBUFFER,T3.__webglFramebuffer);for(let J2=0;J2<F1;J2++)Z1&&(M.framebufferTextureLayer(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,k.get(R).__webglTexture,W,X1+J2),M.framebufferTextureLayer(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,k.get(H).__webglTexture,v1,P2+J2)),M.blitFramebuffer(Y1,K1,C1,k1,i2,g2,C1,k1,M.DEPTH_BUFFER_BIT,M.NEAREST);q.bindFramebuffer(M.READ_FRAMEBUFFER,null),q.bindFramebuffer(M.DRAW_FRAMEBUFFER,null)}else if(W!==0||R.isRenderTargetTexture||k.has(R)){const O2=k.get(R),Z2=k.get(H);q.bindFramebuffer(M.READ_FRAMEBUFFER,Xr),q.bindFramebuffer(M.DRAW_FRAMEBUFFER,ui);for(let n3=0;n3<F1;n3++)Z1?M.framebufferTextureLayer(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,O2.__webglTexture,W,X1+n3):M.framebufferTexture2D(M.READ_FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,O2.__webglTexture,W),l3?M.framebufferTextureLayer(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,Z2.__webglTexture,v1,P2+n3):M.framebufferTexture2D(M.DRAW_FRAMEBUFFER,M.COLOR_ATTACHMENT0,M.TEXTURE_2D,Z2.__webglTexture,v1),W!==0?M.blitFramebuffer(Y1,K1,C1,k1,i2,g2,C1,k1,M.COLOR_BUFFER_BIT,M.NEAREST):l3?M.copyTexSubImage3D(T2,v1,i2,g2,P2+n3,Y1,K1,C1,k1):M.copyTexSubImage2D(T2,v1,i2,g2,Y1,K1,C1,k1);q.bindFramebuffer(M.READ_FRAMEBUFFER,null),q.bindFramebuffer(M.DRAW_FRAMEBUFFER,null)}else l3?R.isDataTexture||R.isData3DTexture?M.texSubImage3D(T2,v1,i2,g2,P2,C1,k1,F1,v2,q1,b2.data):H.isCompressedArrayTexture?M.compressedTexSubImage3D(T2,v1,i2,g2,P2,C1,k1,F1,v2,b2.data):M.texSubImage3D(T2,v1,i2,g2,P2,C1,k1,F1,v2,q1,b2):R.isDataTexture?M.texSubImage2D(M.TEXTURE_2D,v1,i2,g2,C1,k1,v2,q1,b2.data):R.isCompressedTexture?M.compressedTexSubImage2D(M.TEXTURE_2D,v1,i2,g2,b2.width,b2.height,v2,b2.data):M.texSubImage2D(M.TEXTURE_2D,v1,i2,g2,C1,k1,v2,q1,b2);M.pixelStorei(M.UNPACK_ROW_LENGTH,f2),M.pixelStorei(M.UNPACK_IMAGE_HEIGHT,o3),M.pixelStorei(M.UNPACK_SKIP_PIXELS,ze),M.pixelStorei(M.UNPACK_SKIP_ROWS,K2),M.pixelStorei(M.UNPACK_SKIP_IMAGES,Dt),v1===0&&H.generateMipmaps&&M.generateMipmap(T2),q.unbindTexture()},this.initRenderTarget=function(R){k.get(R).__webglFramebuffer===void 0&&l1.setupRenderTarget(R)},this.initTexture=function(R){R.isCubeTexture?l1.setTextureCube(R,0):R.isData3DTexture?l1.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?l1.setTexture2DArray(R,0):l1.setTexture2D(R,0),q.unbindTexture()},this.resetState=function(){I=0,D=0,L=null,q.reset(),b1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Le}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=m2._getDrawingBufferColorSpace(e),t.unpackColorSpace=m2._getUnpackColorSpace()}}function Ye(n){if(n===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function Yc(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var X3={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},Q0={duration:.5,overwrite:!1,delay:0},Wo,a3,D2,ne=1e8,C2=1/ne,Ja=Math.PI*2,W8=Ja/4,X8=0,jc=Math.sqrt,q8=Math.cos,$8=Math.sin,t3=function(e){return typeof e=="string"},z2=function(e){return typeof e=="function"},nt=function(e){return typeof e=="number"},Xo=function(e){return typeof e>"u"},Fe=function(e){return typeof e=="object"},R3=function(e){return e!==!1},qo=function(){return typeof window<"u"},ki=function(e){return z2(e)||t3(e)},Kc=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},p3=Array.isArray,Qa=/(?:-?\.?\d|\.)+/gi,Zc=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,I0=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Bs=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,Jc=/[+-]=-?[.\d]+/,Qc=/[^,'"\[\]\s]+/gi,Y8=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,U2,be,eo,$o,q3={},gr={},e6,t6=function(e){return(gr=en(e,q3))&&D3},Yo=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},$n=function(e,t){return!t&&console.warn(e)},n6=function(e,t){return e&&(q3[e]=t)&&gr&&(gr[e]=t)||q3},Yn=function(){return 0},j8={suppressEvents:!0,isStart:!0,kill:!1},Ki={suppressEvents:!0,kill:!1},K8={suppressEvents:!0},jo={},St=[],to={},i6,z3={},zs={},B9=30,Zi=[],Ko="",Zo=function(e){var t=e[0],i,r;if(Fe(t)||z2(t)||(e=[e]),!(i=(t._gsap||{}).harness)){for(r=Zi.length;r--&&!Zi[r].targetTest(t););i=Zi[r]}for(r=e.length;r--;)e[r]&&(e[r]._gsap||(e[r]._gsap=new A6(e[r],i)))||e.splice(r,1);return e},n0=function(e){return e._gsap||Zo(ie(e))[0]._gsap},r6=function(e,t,i){return(i=e[t])&&z2(i)?e[t]():Xo(i)&&e.getAttribute&&e.getAttribute(t)||i},L3=function(e,t){return(e=e.split(",")).forEach(t)||e},V2=function(e){return Math.round(e*1e5)/1e5||0},q2=function(e){return Math.round(e*1e7)/1e7||0},V0=function(e,t){var i=t.charAt(0),r=parseFloat(t.substr(2));return e=parseFloat(e),i==="+"?e+r:i==="-"?e-r:i==="*"?e*r:e/r},Z8=function(e,t){for(var i=t.length,r=0;e.indexOf(t[r])<0&&++r<i;);return r<i},vr=function(){var e=St.length,t=St.slice(0),i,r;for(to={},St.length=0,i=0;i<e;i++)r=t[i],r&&r._lazy&&(r.render(r._lazy[0],r._lazy[1],!0)._lazy=0)},Jo=function(e){return!!(e._initted||e._startAt||e.add)},s6=function(e,t,i,r){St.length&&!a3&&vr(),e.render(t,i,!!(a3&&t<0&&Jo(e))),St.length&&!a3&&vr()},a6=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(Qc).length<2?t:t3(e)?e.trim():e},o6=function(e){return e},$3=function(e,t){for(var i in t)i in e||(e[i]=t[i]);return e},J8=function(e){return function(t,i){for(var r in i)r in t||r==="duration"&&e||r==="ease"||(t[r]=i[r])}},en=function(e,t){for(var i in t)e[i]=t[i];return e},z9=function n(e,t){for(var i in t)i!=="__proto__"&&i!=="constructor"&&i!=="prototype"&&(e[i]=Fe(t[i])?n(e[i]||(e[i]={}),t[i]):t[i]);return e},xr=function(e,t){var i={},r;for(r in e)r in t||(i[r]=e[r]);return i},Un=function(e){var t=e.parent||U2,i=e.keyframes?J8(p3(e.keyframes)):$3;if(R3(e.inherit))for(;t;)i(e,t.vars.defaults),t=t.parent||t._dp;return e},Q8=function(e,t){for(var i=e.length,r=i===t.length;r&&i--&&e[i]===t[i];);return i<0},l6=function(e,t,i,r,s){var a=e[r],o;if(s)for(o=t[s];a&&a[s]>o;)a=a._prev;return a?(t._next=a._next,a._next=t):(t._next=e[i],e[i]=t),t._next?t._next._prev=t:e[r]=t,t._prev=a,t.parent=t._dp=e,t},zr=function(e,t,i,r){i===void 0&&(i="_first"),r===void 0&&(r="_last");var s=t._prev,a=t._next;s?s._next=a:e[i]===t&&(e[i]=a),a?a._prev=s:e[r]===t&&(e[r]=s),t._next=t._prev=t.parent=null},Rt=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},i0=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var i=e;i;)i._dirty=1,i=i.parent;return e},e_=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},no=function(e,t,i,r){return e._startAt&&(a3?e._startAt.revert(Ki):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,r))},t_=function n(e){return!e||e._ts&&n(e.parent)},k9=function(e){return e._repeat?tn(e._tTime,e=e.duration()+e._rDelay)*e:0},tn=function(e,t){var i=Math.floor(e=q2(e/t));return e&&i===e?i-1:i},yr=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},kr=function(e){return e._end=q2(e._start+(e._tDur/Math.abs(e._ts||e._rts||C2)||0))},Hr=function(e,t){var i=e._dp;return i&&i.smoothChildTiming&&e._ts&&(e._start=q2(i._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),kr(e),i._dirty||i0(i,e)),e},c6=function(e,t){var i;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(i=yr(e.rawTime(),t),(!t._dur||oi(0,t.totalDuration(),i)-t._tTime>C2)&&t.render(i,!0)),i0(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(i=e;i._dp;)i.rawTime()>=0&&i.totalTime(i._tTime),i=i._dp;e._zTime=-C2}},Ae=function(e,t,i,r){return t.parent&&Rt(t),t._start=q2((nt(i)?i:i||e!==U2?K3(e,i,t):e._time)+t._delay),t._end=q2(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),l6(e,t,"_first","_last",e._sort?"_start":0),io(t)||(e._recent=t),r||c6(e,t),e._ts<0&&Hr(e,e._tTime),e},u6=function(e,t){return(q3.ScrollTrigger||Yo("scrollTrigger",t))&&q3.ScrollTrigger.create(t,e)},h6=function(e,t,i,r,s){if(e4(e,t,s),!e._initted)return 1;if(!i&&e._pt&&!a3&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&i6!==H3.frame)return St.push(e),e._lazy=[s,r],1},n_=function n(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||n(t))},io=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},i_=function(e,t,i,r){var s=e.ratio,a=t<0||!t&&(!e._start&&n_(e)&&!(!e._initted&&io(e))||(e._ts<0||e._dp._ts<0)&&!io(e))?0:1,o=e._rDelay,l=0,c,u,h;if(o&&e._repeat&&(l=oi(0,e._tDur,t),u=tn(l,o),e._yoyo&&u&1&&(a=1-a),u!==tn(e._tTime,o)&&(s=1-a,e.vars.repeatRefresh&&e._initted&&e.invalidate())),a!==s||a3||r||e._zTime===C2||!t&&e._zTime){if(!e._initted&&h6(e,t,r,i,l))return;for(h=e._zTime,e._zTime=t||(i?C2:0),i||(i=t&&!h),e.ratio=a,e._from&&(a=1-a),e._time=0,e._tTime=l,c=e._pt;c;)c.r(a,c.d),c=c._next;t<0&&no(e,t,i,!0),e._onUpdate&&!i&&G3(e,"onUpdate"),l&&e._repeat&&!i&&e.parent&&G3(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===a&&(a&&Rt(e,1),!i&&!a3&&(G3(e,a?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},r_=function(e,t,i){var r;if(i>t)for(r=e._first;r&&r._start<=i;){if(r.data==="isPause"&&r._start>t)return r;r=r._next}else for(r=e._last;r&&r._start>=i;){if(r.data==="isPause"&&r._start<t)return r;r=r._prev}},nn=function(e,t,i,r){var s=e._repeat,a=q2(t)||0,o=e._tTime/e._tDur;return o&&!r&&(e._time*=a/e._dur),e._dur=a,e._tDur=s?s<0?1e10:q2(a*(s+1)+e._rDelay*s):a,o>0&&!r&&Hr(e,e._tTime=e._tDur*o),e.parent&&kr(e),i||i0(e.parent,e),e},H9=function(e){return e instanceof M3?i0(e):nn(e,e._dur)},s_={_start:0,endTime:Yn,totalDuration:Yn},K3=function n(e,t,i){var r=e.labels,s=e._recent||s_,a=e.duration()>=ne?s.endTime(!1):e._dur,o,l,c;return t3(t)&&(isNaN(t)||t in r)?(l=t.charAt(0),c=t.substr(-1)==="%",o=t.indexOf("="),l==="<"||l===">"?(o>=0&&(t=t.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(t.substr(1))||0)*(c?(o<0?s:i).totalDuration()/100:1)):o<0?(t in r||(r[t]=a),r[t]):(l=parseFloat(t.charAt(o-1)+t.substr(o+1)),c&&i&&(l=l/100*(p3(i)?i[0]:i).totalDuration()),o>1?n(e,t.substr(0,o-1),i)+l:a+l)):t==null?a:+t},Fn=function(e,t,i){var r=nt(t[1]),s=(r?2:1)+(e<2?0:1),a=t[s],o,l;if(r&&(a.duration=t[1]),a.parent=i,e){for(o=a,l=i;l&&!("immediateRender"in o);)o=l.vars.defaults||{},l=R3(l.vars.inherit)&&l.parent;a.immediateRender=R3(o.immediateRender),e<2?a.runBackwards=1:a.startAt=t[s-1]}return new X2(t[0],a,t[s+1])},It=function(e,t){return e||e===0?t(e):t},oi=function(e,t,i){return i<e?e:i>t?t:i},f3=function(e,t){return!t3(e)||!(t=Y8.exec(e))?"":t[1]},a_=function(e,t,i){return It(i,function(r){return oi(e,t,r)})},ro=[].slice,f6=function(e,t){return e&&Fe(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Fe(e[0]))&&!e.nodeType&&e!==be},o_=function(e,t,i){return i===void 0&&(i=[]),e.forEach(function(r){var s;return t3(r)&&!t||f6(r,1)?(s=i).push.apply(s,ie(r)):i.push(r)})||i},ie=function(e,t,i){return D2&&!t&&D2.selector?D2.selector(e):t3(e)&&!i&&(eo||!rn())?ro.call((t||$o).querySelectorAll(e),0):p3(e)?o_(e,i):f6(e)?ro.call(e,0):e?[e]:[]},so=function(e){return e=ie(e)[0]||$n("Invalid scope")||{},function(t){var i=e.current||e.nativeElement||e;return ie(t,i.querySelectorAll?i:i===e?$n("Invalid scope")||$o.createElement("div"):e)}},d6=function(e){return e.sort(function(){return .5-Math.random()})},p6=function(e){if(z2(e))return e;var t=Fe(e)?e:{each:e},i=r0(t.ease),r=t.from||0,s=parseFloat(t.base)||0,a={},o=r>0&&r<1,l=isNaN(r)||o,c=t.axis,u=r,h=r;return t3(r)?u=h={center:.5,edges:.5,end:1}[r]||0:!o&&l&&(u=r[0],h=r[1]),function(f,p,v){var _=(v||t).length,m=a[_],d,b,T,y,w,I,D,L,E;if(!m){if(E=t.grid==="auto"?0:(t.grid||[1,ne])[1],!E){for(D=-ne;D<(D=v[E++].getBoundingClientRect().left)&&E<_;);E<_&&E--}for(m=a[_]=[],d=l?Math.min(E,_)*u-.5:r%E,b=E===ne?0:l?_*h/E-.5:r/E|0,D=0,L=ne,I=0;I<_;I++)T=I%E-d,y=b-(I/E|0),m[I]=w=c?Math.abs(c==="y"?y:T):jc(T*T+y*y),w>D&&(D=w),w<L&&(L=w);r==="random"&&d6(m),m.max=D-L,m.min=L,m.v=_=(parseFloat(t.amount)||parseFloat(t.each)*(E>_?_-1:c?c==="y"?_/E:E:Math.max(E,_/E))||0)*(r==="edges"?-1:1),m.b=_<0?s-_:s,m.u=f3(t.amount||t.each)||0,i=i&&_<0?b6(i):i}return _=(m[f]-m.min)/m.max||0,q2(m.b+(i?i(_):_)*m.v)+m.u}},ao=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(i){var r=q2(Math.round(parseFloat(i)/e)*e*t);return(r-r%1)/t+(nt(i)?0:f3(i))}},m6=function(e,t){var i=p3(e),r,s;return!i&&Fe(e)&&(r=i=e.radius||ne,e.values?(e=ie(e.values),(s=!nt(e[0]))&&(r*=r)):e=ao(e.increment)),It(t,i?z2(e)?function(a){return s=e(a),Math.abs(s-a)<=r?s:a}:function(a){for(var o=parseFloat(s?a.x:a),l=parseFloat(s?a.y:0),c=ne,u=0,h=e.length,f,p;h--;)s?(f=e[h].x-o,p=e[h].y-l,f=f*f+p*p):f=Math.abs(e[h]-o),f<c&&(c=f,u=h);return u=!r||c<=r?e[u]:a,s||u===a||nt(a)?u:u+f3(a)}:ao(e))},_6=function(e,t,i,r){return It(p3(e)?!t:i===!0?!!(i=0):!r,function(){return p3(e)?e[~~(Math.random()*e.length)]:(i=i||1e-5)&&(r=i<1?Math.pow(10,(i+"").length-2):1)&&Math.floor(Math.round((e-i/2+Math.random()*(t-e+i*.99))/i)*i*r)/r})},l_=function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return function(r){return t.reduce(function(s,a){return a(s)},r)}},c_=function(e,t){return function(i){return e(parseFloat(i))+(t||f3(i))}},u_=function(e,t,i){return v6(e,t,0,1,i)},g6=function(e,t,i){return It(i,function(r){return e[~~t(r)]})},h_=function n(e,t,i){var r=t-e;return p3(e)?g6(e,n(0,e.length),t):It(i,function(s){return(r+(s-e)%r)%r+e})},f_=function n(e,t,i){var r=t-e,s=r*2;return p3(e)?g6(e,n(0,e.length-1),t):It(i,function(a){return a=(s+(a-e)%s)%s||0,e+(a>r?s-a:a)})},jn=function(e){for(var t=0,i="",r,s,a,o;~(r=e.indexOf("random(",t));)a=e.indexOf(")",r),o=e.charAt(r+7)==="[",s=e.substr(r+7,a-r-7).match(o?Qc:Qa),i+=e.substr(t,r-t)+_6(o?s:+s[0],o?0:+s[1],+s[2]||1e-5),t=a+1;return i+e.substr(t,e.length-t)},v6=function(e,t,i,r,s){var a=t-e,o=r-i;return It(s,function(l){return i+((l-e)/a*o||0)})},d_=function n(e,t,i,r){var s=isNaN(e+t)?0:function(p){return(1-p)*e+p*t};if(!s){var a=t3(e),o={},l,c,u,h,f;if(i===!0&&(r=1)&&(i=null),a)e={p:e},t={p:t};else if(p3(e)&&!p3(t)){for(u=[],h=e.length,f=h-2,c=1;c<h;c++)u.push(n(e[c-1],e[c]));h--,s=function(v){v*=h;var _=Math.min(f,~~v);return u[_](v-_)},i=t}else r||(e=en(p3(e)?[]:{},e));if(!u){for(l in t)Qo.call(o,e,l,"get",t[l]);s=function(v){return i4(v,o)||(a?e.p:e)}}}return It(i,s)},V9=function(e,t,i){var r=e.labels,s=ne,a,o,l;for(a in r)o=r[a]-t,o<0==!!i&&o&&s>(o=Math.abs(o))&&(l=a,s=o);return l},G3=function(e,t,i){var r=e.vars,s=r[t],a=D2,o=e._ctx,l,c,u;if(s)return l=r[t+"Params"],c=r.callbackScope||e,i&&St.length&&vr(),o&&(D2=o),u=l?s.apply(c,l):s.call(c),D2=a,u},Tn=function(e){return Rt(e),e.scrollTrigger&&e.scrollTrigger.kill(!!a3),e.progress()<1&&G3(e,"onInterrupt"),e},D0,x6=[],y6=function(e){if(e)if(e=!e.name&&e.default||e,qo()||e.headless){var t=e.name,i=z2(e),r=t&&!i&&e.init?function(){this._props=[]}:e,s={init:Yn,render:i4,add:Qo,kill:R_,modifier:C_,rawVars:0},a={targetTest:0,get:0,getSetter:n4,aliases:{},register:0};if(rn(),e!==r){if(z3[t])return;$3(r,$3(xr(e,s),a)),en(r.prototype,en(s,xr(e,a))),z3[r.prop=t]=r,e.targetTest&&(Zi.push(r),jo[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}n6(t,r),e.register&&e.register(D3,r,P3)}else x6.push(e)},A2=255,wn={aqua:[0,A2,A2],lime:[0,A2,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,A2],navy:[0,0,128],white:[A2,A2,A2],olive:[128,128,0],yellow:[A2,A2,0],orange:[A2,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[A2,0,0],pink:[A2,192,203],cyan:[0,A2,A2],transparent:[A2,A2,A2,0]},ks=function(e,t,i){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(i-t)*e*6:e<.5?i:e*3<2?t+(i-t)*(2/3-e)*6:t)*A2+.5|0},M6=function(e,t,i){var r=e?nt(e)?[e>>16,e>>8&A2,e&A2]:0:wn.black,s,a,o,l,c,u,h,f,p,v;if(!r){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),wn[e])r=wn[e];else if(e.charAt(0)==="#"){if(e.length<6&&(s=e.charAt(1),a=e.charAt(2),o=e.charAt(3),e="#"+s+s+a+a+o+o+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return r=parseInt(e.substr(1,6),16),[r>>16,r>>8&A2,r&A2,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),r=[e>>16,e>>8&A2,e&A2]}else if(e.substr(0,3)==="hsl"){if(r=v=e.match(Qa),!t)l=+r[0]%360/360,c=+r[1]/100,u=+r[2]/100,a=u<=.5?u*(c+1):u+c-u*c,s=u*2-a,r.length>3&&(r[3]*=1),r[0]=ks(l+1/3,s,a),r[1]=ks(l,s,a),r[2]=ks(l-1/3,s,a);else if(~e.indexOf("="))return r=e.match(Zc),i&&r.length<4&&(r[3]=1),r}else r=e.match(Qa)||wn.transparent;r=r.map(Number)}return t&&!v&&(s=r[0]/A2,a=r[1]/A2,o=r[2]/A2,h=Math.max(s,a,o),f=Math.min(s,a,o),u=(h+f)/2,h===f?l=c=0:(p=h-f,c=u>.5?p/(2-h-f):p/(h+f),l=h===s?(a-o)/p+(a<o?6:0):h===a?(o-s)/p+2:(s-a)/p+4,l*=60),r[0]=~~(l+.5),r[1]=~~(c*100+.5),r[2]=~~(u*100+.5)),i&&r.length<4&&(r[3]=1),r},S6=function(e){var t=[],i=[],r=-1;return e.split(Et).forEach(function(s){var a=s.match(I0)||[];t.push.apply(t,a),i.push(r+=a.length+1)}),t.c=i,t},G9=function(e,t,i){var r="",s=(e+r).match(Et),a=t?"hsla(":"rgba(",o=0,l,c,u,h;if(!s)return e;if(s=s.map(function(f){return(f=M6(f,t,1))&&a+(t?f[0]+","+f[1]+"%,"+f[2]+"%,"+f[3]:f.join(","))+")"}),i&&(u=S6(e),l=i.c,l.join(r)!==u.c.join(r)))for(c=e.replace(Et,"1").split(I0),h=c.length-1;o<h;o++)r+=c[o]+(~l.indexOf(o)?s.shift()||a+"0,0,0,0)":(u.length?u:s.length?s:i).shift());if(!c)for(c=e.split(Et),h=c.length-1;o<h;o++)r+=c[o]+s[o];return r+c[h]},Et=(function(){var n="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in wn)n+="|"+e+"\\b";return new RegExp(n+")","gi")})(),p_=/hsl[a]?\(/,E6=function(e){var t=e.join(" "),i;if(Et.lastIndex=0,Et.test(t))return i=p_.test(t),e[1]=G9(e[1],i),e[0]=G9(e[0],i,S6(e[1])),!0},Kn,H3=(function(){var n=Date.now,e=500,t=33,i=n(),r=i,s=1e3/240,a=s,o=[],l,c,u,h,f,p,v=function _(m){var d=n()-r,b=m===!0,T,y,w,I;if((d>e||d<0)&&(i+=d-t),r+=d,w=r-i,T=w-a,(T>0||b)&&(I=++h.frame,f=w-h.time*1e3,h.time=w=w/1e3,a+=T+(T>=s?4:s-T),y=1),b||(l=c(_)),y)for(p=0;p<o.length;p++)o[p](w,f,I,m)};return h={time:0,frame:0,tick:function(){v(!0)},deltaRatio:function(m){return f/(1e3/(m||60))},wake:function(){e6&&(!eo&&qo()&&(be=eo=window,$o=be.document||{},q3.gsap=D3,(be.gsapVersions||(be.gsapVersions=[])).push(D3.version),t6(gr||be.GreenSockGlobals||!be.gsap&&be||{}),x6.forEach(y6)),u=typeof requestAnimationFrame<"u"&&requestAnimationFrame,l&&h.sleep(),c=u||function(m){return setTimeout(m,a-h.time*1e3+1|0)},Kn=1,v(2))},sleep:function(){(u?cancelAnimationFrame:clearTimeout)(l),Kn=0,c=Yn},lagSmoothing:function(m,d){e=m||1/0,t=Math.min(d||33,e)},fps:function(m){s=1e3/(m||240),a=h.time*1e3+s},add:function(m,d,b){var T=d?function(y,w,I,D){m(y,w,I,D),h.remove(T)}:m;return h.remove(m),o[b?"unshift":"push"](T),rn(),T},remove:function(m,d){~(d=o.indexOf(m))&&o.splice(d,1)&&p>=d&&p--},_listeners:o},h})(),rn=function(){return!Kn&&H3.wake()},h2={},m_=/^[\d.\-M][\d.\-,\s]/,__=/["']/g,g_=function(e){for(var t={},i=e.substr(1,e.length-3).split(":"),r=i[0],s=1,a=i.length,o,l,c;s<a;s++)l=i[s],o=s!==a-1?l.lastIndexOf(","):l.length,c=l.substr(0,o),t[r]=isNaN(c)?c.replace(__,"").trim():+c,r=l.substr(o+1).trim();return t},v_=function(e){var t=e.indexOf("(")+1,i=e.indexOf(")"),r=e.indexOf("(",t);return e.substring(t,~r&&r<i?e.indexOf(")",i+1):i)},x_=function(e){var t=(e+"").split("("),i=h2[t[0]];return i&&t.length>1&&i.config?i.config.apply(null,~e.indexOf("{")?[g_(t[1])]:v_(e).split(",").map(a6)):h2._CE&&m_.test(e)?h2._CE("",e):i},b6=function(e){return function(t){return 1-e(1-t)}},T6=function n(e,t){for(var i=e._first,r;i;)i instanceof M3?n(i,t):i.vars.yoyoEase&&(!i._yoyo||!i._repeat)&&i._yoyo!==t&&(i.timeline?n(i.timeline,t):(r=i._ease,i._ease=i._yEase,i._yEase=r,i._yoyo=t)),i=i._next},r0=function(e,t){return e&&(z2(e)?e:h2[e]||x_(e))||t},u0=function(e,t,i,r){i===void 0&&(i=function(l){return 1-t(1-l)}),r===void 0&&(r=function(l){return l<.5?t(l*2)/2:1-t((1-l)*2)/2});var s={easeIn:t,easeOut:i,easeInOut:r},a;return L3(e,function(o){h2[o]=q3[o]=s,h2[a=o.toLowerCase()]=i;for(var l in s)h2[a+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=h2[o+"."+l]=s[l]}),s},w6=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},Hs=function n(e,t,i){var r=t>=1?t:1,s=(i||(e?.3:.45))/(t<1?t:1),a=s/Ja*(Math.asin(1/r)||0),o=function(u){return u===1?1:r*Math.pow(2,-10*u)*$8((u-a)*s)+1},l=e==="out"?o:e==="in"?function(c){return 1-o(1-c)}:w6(o);return s=Ja/s,l.config=function(c,u){return n(e,c,u)},l},Vs=function n(e,t){t===void 0&&(t=1.70158);var i=function(a){return a?--a*a*((t+1)*a+t)+1:0},r=e==="out"?i:e==="in"?function(s){return 1-i(1-s)}:w6(i);return r.config=function(s){return n(e,s)},r};L3("Linear,Quad,Cubic,Quart,Quint,Strong",function(n,e){var t=e<5?e+1:e;u0(n+",Power"+(t-1),e?function(i){return Math.pow(i,t)}:function(i){return i},function(i){return 1-Math.pow(1-i,t)},function(i){return i<.5?Math.pow(i*2,t)/2:1-Math.pow((1-i)*2,t)/2})});h2.Linear.easeNone=h2.none=h2.Linear.easeIn;u0("Elastic",Hs("in"),Hs("out"),Hs());(function(n,e){var t=1/e,i=2*t,r=2.5*t,s=function(o){return o<t?n*o*o:o<i?n*Math.pow(o-1.5/e,2)+.75:o<r?n*(o-=2.25/e)*o+.9375:n*Math.pow(o-2.625/e,2)+.984375};u0("Bounce",function(a){return 1-s(1-a)},s)})(7.5625,2.75);u0("Expo",function(n){return Math.pow(2,10*(n-1))*n+n*n*n*n*n*n*(1-n)});u0("Circ",function(n){return-(jc(1-n*n)-1)});u0("Sine",function(n){return n===1?1:-q8(n*W8)+1});u0("Back",Vs("in"),Vs("out"),Vs());h2.SteppedEase=h2.steps=q3.SteppedEase={config:function(e,t){e===void 0&&(e=1);var i=1/e,r=e+(t?0:1),s=t?1:0,a=1-C2;return function(o){return((r*oi(0,a,o)|0)+s)*i}}};Q0.ease=h2["quad.out"];L3("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(n){return Ko+=n+","+n+"Params,"});var A6=function(e,t){this.id=X8++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:r6,this.set=t?t.getSetter:n4},Zn=(function(){function n(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,nn(this,+t.duration,1,1),this.data=t.data,D2&&(this._ctx=D2,D2.data.push(this)),Kn||H3.wake()}var e=n.prototype;return e.delay=function(i){return i||i===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+i-this._delay),this._delay=i,this):this._delay},e.duration=function(i){return arguments.length?this.totalDuration(this._repeat>0?i+(i+this._rDelay)*this._repeat:i):this.totalDuration()&&this._dur},e.totalDuration=function(i){return arguments.length?(this._dirty=0,nn(this,this._repeat<0?i:(i-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(i,r){if(rn(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for(Hr(this,i),!s._dp||s.parent||c6(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&i<this._tDur||this._ts<0&&i>0||!this._tDur&&!i)&&Ae(this._dp,this,this._start-this._delay)}return(this._tTime!==i||!this._dur&&!r||this._initted&&Math.abs(this._zTime)===C2||!i&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=i),s6(this,i,r)),this},e.time=function(i,r){return arguments.length?this.totalTime(Math.min(this.totalDuration(),i+k9(this))%(this._dur+this._rDelay)||(i?this._dur:0),r):this._time},e.totalProgress=function(i,r){return arguments.length?this.totalTime(this.totalDuration()*i,r):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},e.progress=function(i,r){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-i:i)+k9(this),r):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},e.iteration=function(i,r){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(i-1)*s,r):this._repeat?tn(this._tTime,s)+1:1},e.timeScale=function(i,r){if(!arguments.length)return this._rts===-C2?0:this._rts;if(this._rts===i)return this;var s=this.parent&&this._ts?yr(this.parent._time,this):this._tTime;return this._rts=+i||0,this._ts=this._ps||i===-C2?0:this._rts,this.totalTime(oi(-Math.abs(this._delay),this.totalDuration(),s),r!==!1),kr(this),e_(this)},e.paused=function(i){return arguments.length?(this._ps!==i&&(this._ps=i,i?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(rn(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==C2&&(this._tTime-=C2)))),this):this._ps},e.startTime=function(i){if(arguments.length){this._start=i;var r=this.parent||this._dp;return r&&(r._sort||!this.parent)&&Ae(r,this,i-this._delay),this}return this._start},e.endTime=function(i){return this._start+(R3(i)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(i){var r=this.parent||this._dp;return r?i&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?yr(r.rawTime(i),this):this._tTime:this._tTime},e.revert=function(i){i===void 0&&(i=K8);var r=a3;return a3=i,Jo(this)&&(this.timeline&&this.timeline.revert(i),this.totalTime(-.01,i.suppressEvents)),this.data!=="nested"&&i.kill!==!1&&this.kill(),a3=r,this},e.globalTime=function(i){for(var r=this,s=arguments.length?i:r.rawTime();r;)s=r._start+s/(Math.abs(r._ts)||1),r=r._dp;return!this.parent&&this._sat?this._sat.globalTime(i):s},e.repeat=function(i){return arguments.length?(this._repeat=i===1/0?-2:i,H9(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(i){if(arguments.length){var r=this._time;return this._rDelay=i,H9(this),r?this.time(r):this}return this._rDelay},e.yoyo=function(i){return arguments.length?(this._yoyo=i,this):this._yoyo},e.seek=function(i,r){return this.totalTime(K3(this,i),R3(r))},e.restart=function(i,r){return this.play().totalTime(i?-this._delay:0,R3(r)),this._dur||(this._zTime=-C2),this},e.play=function(i,r){return i!=null&&this.seek(i,r),this.reversed(!1).paused(!1)},e.reverse=function(i,r){return i!=null&&this.seek(i||this.totalDuration(),r),this.reversed(!0).paused(!1)},e.pause=function(i,r){return i!=null&&this.seek(i,r),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(i){return arguments.length?(!!i!==this.reversed()&&this.timeScale(-this._rts||(i?-C2:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-C2,this},e.isActive=function(){var i=this.parent||this._dp,r=this._start,s;return!!(!i||this._ts&&this._initted&&i.isActive()&&(s=i.rawTime(!0))>=r&&s<this.endTime(!0)-C2)},e.eventCallback=function(i,r,s){var a=this.vars;return arguments.length>1?(r?(a[i]=r,s&&(a[i+"Params"]=s),i==="onUpdate"&&(this._onUpdate=r)):delete a[i],this):a[i]},e.then=function(i){var r=this;return new Promise(function(s){var a=z2(i)?i:o6,o=function(){var c=r.then;r.then=null,z2(a)&&(a=a(r))&&(a.then||a===r)&&(r.then=c),s(a),r.then=c};r._initted&&r.totalProgress()===1&&r._ts>=0||!r._tTime&&r._ts<0?o():r._prom=o})},e.kill=function(){Tn(this)},n})();$3(Zn.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-C2,_prom:0,_ps:!1,_rts:1});var M3=(function(n){Yc(e,n);function e(i,r){var s;return i===void 0&&(i={}),s=n.call(this,i)||this,s.labels={},s.smoothChildTiming=!!i.smoothChildTiming,s.autoRemoveChildren=!!i.autoRemoveChildren,s._sort=R3(i.sortChildren),U2&&Ae(i.parent||U2,Ye(s),r),i.reversed&&s.reverse(),i.paused&&s.paused(!0),i.scrollTrigger&&u6(Ye(s),i.scrollTrigger),s}var t=e.prototype;return t.to=function(r,s,a){return Fn(0,arguments,this),this},t.from=function(r,s,a){return Fn(1,arguments,this),this},t.fromTo=function(r,s,a,o){return Fn(2,arguments,this),this},t.set=function(r,s,a){return s.duration=0,s.parent=this,Un(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new X2(r,s,K3(this,a),1),this},t.call=function(r,s,a){return Ae(this,X2.delayedCall(0,r,s),a)},t.staggerTo=function(r,s,a,o,l,c,u){return a.duration=s,a.stagger=a.stagger||o,a.onComplete=c,a.onCompleteParams=u,a.parent=this,new X2(r,a,K3(this,l)),this},t.staggerFrom=function(r,s,a,o,l,c,u){return a.runBackwards=1,Un(a).immediateRender=R3(a.immediateRender),this.staggerTo(r,s,a,o,l,c,u)},t.staggerFromTo=function(r,s,a,o,l,c,u,h){return o.startAt=a,Un(o).immediateRender=R3(o.immediateRender),this.staggerTo(r,s,o,l,c,u,h)},t.render=function(r,s,a){var o=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,u=r<=0?0:q2(r),h=this._zTime<0!=r<0&&(this._initted||!c),f,p,v,_,m,d,b,T,y,w,I,D;if(this!==U2&&u>l&&r>=0&&(u=l),u!==this._tTime||a||h){if(o!==this._time&&c&&(u+=this._time-o,r+=this._time-o),f=u,y=this._start,T=this._ts,d=!T,h&&(c||(o=this._zTime),(r||!s)&&(this._zTime=r)),this._repeat){if(I=this._yoyo,m=c+this._rDelay,this._repeat<-1&&r<0)return this.totalTime(m*100+r,s,a);if(f=q2(u%m),u===l?(_=this._repeat,f=c):(w=q2(u/m),_=~~w,_&&_===w&&(f=c,_--),f>c&&(f=c)),w=tn(this._tTime,m),!o&&this._tTime&&w!==_&&this._tTime-w*m-this._dur<=0&&(w=_),I&&_&1&&(f=c-f,D=1),_!==w&&!this._lock){var L=I&&w&1,E=L===(I&&_&1);if(_<w&&(L=!L),o=L?0:u%c?c:u,this._lock=1,this.render(o||(D?0:q2(_*m)),s,!c)._lock=0,this._tTime=u,!s&&this.parent&&G3(this,"onRepeat"),this.vars.repeatRefresh&&!D&&(this.invalidate()._lock=1),o&&o!==this._time||d!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,E&&(this._lock=2,o=L?c:-1e-4,this.render(o,!0),this.vars.repeatRefresh&&!D&&this.invalidate()),this._lock=0,!this._ts&&!d)return this;T6(this,D)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(b=r_(this,q2(o),q2(f)),b&&(u-=f-(f=b._start))),this._tTime=u,this._time=f,this._act=!T,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=r,o=0),!o&&u&&!s&&!w&&(G3(this,"onStart"),this._tTime!==u))return this;if(f>=o&&r>=0)for(p=this._first;p;){if(v=p._next,(p._act||f>=p._start)&&p._ts&&b!==p){if(p.parent!==this)return this.render(r,s,a);if(p.render(p._ts>0?(f-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(f-p._start)*p._ts,s,a),f!==this._time||!this._ts&&!d){b=0,v&&(u+=this._zTime=-C2);break}}p=v}else{p=this._last;for(var C=r<0?r:f;p;){if(v=p._prev,(p._act||C<=p._end)&&p._ts&&b!==p){if(p.parent!==this)return this.render(r,s,a);if(p.render(p._ts>0?(C-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(C-p._start)*p._ts,s,a||a3&&Jo(p)),f!==this._time||!this._ts&&!d){b=0,v&&(u+=this._zTime=C?-C2:C2);break}}p=v}}if(b&&!s&&(this.pause(),b.render(f>=o?0:-C2)._zTime=f>=o?1:-1,this._ts))return this._start=y,kr(this),this.render(r,s,a);this._onUpdate&&!s&&G3(this,"onUpdate",!0),(u===l&&this._tTime>=this.totalDuration()||!u&&o)&&(y===this._start||Math.abs(T)!==Math.abs(this._ts))&&(this._lock||((r||!c)&&(u===l&&this._ts>0||!u&&this._ts<0)&&Rt(this,1),!s&&!(r<0&&!o)&&(u||o||!l)&&(G3(this,u===l&&r>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(r,s){var a=this;if(nt(s)||(s=K3(this,s,r)),!(r instanceof Zn)){if(p3(r))return r.forEach(function(o){return a.add(o,s)}),this;if(t3(r))return this.addLabel(r,s);if(z2(r))r=X2.delayedCall(0,r);else return this}return this!==r?Ae(this,r,s):this},t.getChildren=function(r,s,a,o){r===void 0&&(r=!0),s===void 0&&(s=!0),a===void 0&&(a=!0),o===void 0&&(o=-ne);for(var l=[],c=this._first;c;)c._start>=o&&(c instanceof X2?s&&l.push(c):(a&&l.push(c),r&&l.push.apply(l,c.getChildren(!0,s,a)))),c=c._next;return l},t.getById=function(r){for(var s=this.getChildren(1,1,1),a=s.length;a--;)if(s[a].vars.id===r)return s[a]},t.remove=function(r){return t3(r)?this.removeLabel(r):z2(r)?this.killTweensOf(r):(r.parent===this&&zr(this,r),r===this._recent&&(this._recent=this._last),i0(this))},t.totalTime=function(r,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=q2(H3.time-(this._ts>0?r/this._ts:(this.totalDuration()-r)/-this._ts))),n.prototype.totalTime.call(this,r,s),this._forcing=0,this):this._tTime},t.addLabel=function(r,s){return this.labels[r]=K3(this,s),this},t.removeLabel=function(r){return delete this.labels[r],this},t.addPause=function(r,s,a){var o=X2.delayedCall(0,s||Yn,a);return o.data="isPause",this._hasPause=1,Ae(this,o,K3(this,r))},t.removePause=function(r){var s=this._first;for(r=K3(this,r);s;)s._start===r&&s.data==="isPause"&&Rt(s),s=s._next},t.killTweensOf=function(r,s,a){for(var o=this.getTweensOf(r,a),l=o.length;l--;)_t!==o[l]&&o[l].kill(r,s);return this},t.getTweensOf=function(r,s){for(var a=[],o=ie(r),l=this._first,c=nt(s),u;l;)l instanceof X2?Z8(l._targets,o)&&(c?(!_t||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&a.push(l):(u=l.getTweensOf(o,s)).length&&a.push.apply(a,u),l=l._next;return a},t.tweenTo=function(r,s){s=s||{};var a=this,o=K3(a,r),l=s,c=l.startAt,u=l.onStart,h=l.onStartParams,f=l.immediateRender,p,v=X2.to(a,$3({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale())||C2,onStart:function(){if(a.pause(),!p){var m=s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale());v._dur!==m&&nn(v,m,0,1).render(v._time,!0,!0),p=1}u&&u.apply(v,h||[])}},s));return f?v.render(0):v},t.tweenFromTo=function(r,s,a){return this.tweenTo(s,$3({startAt:{time:K3(this,r)}},a))},t.recent=function(){return this._recent},t.nextLabel=function(r){return r===void 0&&(r=this._time),V9(this,K3(this,r))},t.previousLabel=function(r){return r===void 0&&(r=this._time),V9(this,K3(this,r),1)},t.currentLabel=function(r){return arguments.length?this.seek(r,!0):this.previousLabel(this._time+C2)},t.shiftChildren=function(r,s,a){a===void 0&&(a=0);for(var o=this._first,l=this.labels,c;o;)o._start>=a&&(o._start+=r,o._end+=r),o=o._next;if(s)for(c in l)l[c]>=a&&(l[c]+=r);return i0(this)},t.invalidate=function(r){var s=this._first;for(this._lock=0;s;)s.invalidate(r),s=s._next;return n.prototype.invalidate.call(this,r)},t.clear=function(r){r===void 0&&(r=!0);for(var s=this._first,a;s;)a=s._next,this.remove(s),s=a;return this._dp&&(this._time=this._tTime=this._pTime=0),r&&(this.labels={}),i0(this)},t.totalDuration=function(r){var s=0,a=this,o=a._last,l=ne,c,u,h;if(arguments.length)return a.timeScale((a._repeat<0?a.duration():a.totalDuration())/(a.reversed()?-r:r));if(a._dirty){for(h=a.parent;o;)c=o._prev,o._dirty&&o.totalDuration(),u=o._start,u>l&&a._sort&&o._ts&&!a._lock?(a._lock=1,Ae(a,o,u-o._delay,1)._lock=0):l=u,u<0&&o._ts&&(s-=u,(!h&&!a._dp||h&&h.smoothChildTiming)&&(a._start+=u/a._ts,a._time-=u,a._tTime-=u),a.shiftChildren(-u,!1,-1/0),l=0),o._end>s&&o._ts&&(s=o._end),o=c;nn(a,a===U2&&a._time>s?a._time:s,1,1),a._dirty=0}return a._tDur},e.updateRoot=function(r){if(U2._ts&&(s6(U2,yr(r,U2)),i6=H3.frame),H3.frame>=B9){B9+=X3.autoSleep||120;var s=U2._first;if((!s||!s._ts)&&X3.autoSleep&&H3._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||H3.sleep()}}},e})(Zn);$3(M3.prototype,{_lock:0,_hasPause:0,_forcing:0});var y_=function(e,t,i,r,s,a,o){var l=new P3(this._pt,e,t,0,1,D6,null,s),c=0,u=0,h,f,p,v,_,m,d,b;for(l.b=i,l.e=r,i+="",r+="",(d=~r.indexOf("random("))&&(r=jn(r)),a&&(b=[i,r],a(b,e,t),i=b[0],r=b[1]),f=i.match(Bs)||[];h=Bs.exec(r);)v=h[0],_=r.substring(c,h.index),p?p=(p+1)%5:_.substr(-5)==="rgba("&&(p=1),v!==f[u++]&&(m=parseFloat(f[u-1])||0,l._pt={_next:l._pt,p:_||u===1?_:",",s:m,c:v.charAt(1)==="="?V0(m,v)-m:parseFloat(v)-m,m:p&&p<4?Math.round:0},c=Bs.lastIndex);return l.c=c<r.length?r.substring(c,r.length):"",l.fp=o,(Jc.test(r)||d)&&(l.e=0),this._pt=l,l},Qo=function(e,t,i,r,s,a,o,l,c,u){z2(r)&&(r=r(s||0,e,a));var h=e[t],f=i!=="get"?i:z2(h)?c?e[t.indexOf("set")||!z2(e["get"+t.substr(3)])?t:"get"+t.substr(3)](c):e[t]():h,p=z2(h)?c?T_:P6:t4,v;if(t3(r)&&(~r.indexOf("random(")&&(r=jn(r)),r.charAt(1)==="="&&(v=V0(f,r)+(f3(f)||0),(v||v===0)&&(r=v))),!u||f!==r||oo)return!isNaN(f*r)&&r!==""?(v=new P3(this._pt,e,t,+f||0,r-(f||0),typeof h=="boolean"?A_:I6,0,p),c&&(v.fp=c),o&&v.modifier(o,this,e),this._pt=v):(!h&&!(t in e)&&Yo(t,r),y_.call(this,e,t,f,r,p,l||X3.stringFilter,c))},M_=function(e,t,i,r,s){if(z2(e)&&(e=On(e,s,t,i,r)),!Fe(e)||e.style&&e.nodeType||p3(e)||Kc(e))return t3(e)?On(e,s,t,i,r):e;var a={},o;for(o in e)a[o]=On(e[o],s,t,i,r);return a},C6=function(e,t,i,r,s,a){var o,l,c,u;if(z3[e]&&(o=new z3[e]).init(s,o.rawVars?t[e]:M_(t[e],r,s,a,i),i,r,a)!==!1&&(i._pt=l=new P3(i._pt,s,e,0,1,o.render,o,0,o.priority),i!==D0))for(c=i._ptLookup[i._targets.indexOf(s)],u=o._props.length;u--;)c[o._props[u]]=l;return o},_t,oo,e4=function n(e,t,i){var r=e.vars,s=r.ease,a=r.startAt,o=r.immediateRender,l=r.lazy,c=r.onUpdate,u=r.runBackwards,h=r.yoyoEase,f=r.keyframes,p=r.autoRevert,v=e._dur,_=e._startAt,m=e._targets,d=e.parent,b=d&&d.data==="nested"?d.vars.targets:m,T=e._overwrite==="auto"&&!Wo,y=e.timeline,w,I,D,L,E,C,O,G,X,s1,e1,Z,Q;if(y&&(!f||!s)&&(s="none"),e._ease=r0(s,Q0.ease),e._yEase=h?b6(r0(h===!0?s:h,Q0.ease)):0,h&&e._yoyo&&!e._repeat&&(h=e._yEase,e._yEase=e._ease,e._ease=h),e._from=!y&&!!r.runBackwards,!y||f&&!r.stagger){if(G=m[0]?n0(m[0]).harness:0,Z=G&&r[G.prop],w=xr(r,jo),_&&(_._zTime<0&&_.progress(1),t<0&&u&&o&&!p?_.render(-1,!0):_.revert(u&&v?Ki:j8),_._lazy=0),a){if(Rt(e._startAt=X2.set(m,$3({data:"isStart",overwrite:!1,parent:d,immediateRender:!0,lazy:!_&&R3(l),startAt:null,delay:0,onUpdate:c&&function(){return G3(e,"onUpdate")},stagger:0},a))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(a3||!o&&!p)&&e._startAt.revert(Ki),o&&v&&t<=0&&i<=0){t&&(e._zTime=t);return}}else if(u&&v&&!_){if(t&&(o=!1),D=$3({overwrite:!1,data:"isFromStart",lazy:o&&!_&&R3(l),immediateRender:o,stagger:0,parent:d},w),Z&&(D[G.prop]=Z),Rt(e._startAt=X2.set(m,D)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(a3?e._startAt.revert(Ki):e._startAt.render(-1,!0)),e._zTime=t,!o)n(e._startAt,C2,C2);else if(!t)return}for(e._pt=e._ptCache=0,l=v&&R3(l)||l&&!v,I=0;I<m.length;I++){if(E=m[I],O=E._gsap||Zo(m)[I]._gsap,e._ptLookup[I]=s1={},to[O.id]&&St.length&&vr(),e1=b===m?I:b.indexOf(E),G&&(X=new G).init(E,Z||w,e,e1,b)!==!1&&(e._pt=L=new P3(e._pt,E,X.name,0,1,X.render,X,0,X.priority),X._props.forEach(function(V){s1[V]=L}),X.priority&&(C=1)),!G||Z)for(D in w)z3[D]&&(X=C6(D,w,e,e1,E,b))?X.priority&&(C=1):s1[D]=L=Qo.call(e,E,D,"get",w[D],e1,b,0,r.stringFilter);e._op&&e._op[I]&&e.kill(E,e._op[I]),T&&e._pt&&(_t=e,U2.killTweensOf(E,s1,e.globalTime(t)),Q=!e.parent,_t=0),e._pt&&l&&(to[O.id]=1)}C&&U6(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!Q,f&&t<=0&&y.render(ne,!0,!0)},S_=function(e,t,i,r,s,a,o,l){var c=(e._pt&&e._ptCache||(e._ptCache={}))[t],u,h,f,p;if(!c)for(c=e._ptCache[t]=[],f=e._ptLookup,p=e._targets.length;p--;){if(u=f[p][t],u&&u.d&&u.d._pt)for(u=u.d._pt;u&&u.p!==t&&u.fp!==t;)u=u._next;if(!u)return oo=1,e.vars[t]="+=0",e4(e,o),oo=0,l?$n(t+" not eligible for reset"):1;c.push(u)}for(p=c.length;p--;)h=c[p],u=h._pt||h,u.s=(r||r===0)&&!s?r:u.s+(r||0)+a*u.c,u.c=i-u.s,h.e&&(h.e=V2(i)+f3(h.e)),h.b&&(h.b=u.s+f3(h.b))},E_=function(e,t){var i=e[0]?n0(e[0]).harness:0,r=i&&i.aliases,s,a,o,l;if(!r)return t;s=en({},t);for(a in r)if(a in s)for(l=r[a].split(","),o=l.length;o--;)s[l[o]]=s[a];return s},b_=function(e,t,i,r){var s=t.ease||r||"power1.inOut",a,o;if(p3(t))o=i[e]||(i[e]=[]),t.forEach(function(l,c){return o.push({t:c/(t.length-1)*100,v:l,e:s})});else for(a in t)o=i[a]||(i[a]=[]),a==="ease"||o.push({t:parseFloat(e),v:t[a],e:s})},On=function(e,t,i,r,s){return z2(e)?e.call(t,i,r,s):t3(e)&&~e.indexOf("random(")?jn(e):e},R6=Ko+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",L6={};L3(R6+",id,stagger,delay,duration,paused,scrollTrigger",function(n){return L6[n]=1});var X2=(function(n){Yc(e,n);function e(i,r,s,a){var o;typeof r=="number"&&(s.duration=r,r=s,s=null),o=n.call(this,a?r:Un(r))||this;var l=o.vars,c=l.duration,u=l.delay,h=l.immediateRender,f=l.stagger,p=l.overwrite,v=l.keyframes,_=l.defaults,m=l.scrollTrigger,d=l.yoyoEase,b=r.parent||U2,T=(p3(i)||Kc(i)?nt(i[0]):"length"in r)?[i]:ie(i),y,w,I,D,L,E,C,O;if(o._targets=T.length?Zo(T):$n("GSAP target "+i+" not found. https://gsap.com",!X3.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=p,v||f||ki(c)||ki(u)){if(r=o.vars,y=o.timeline=new M3({data:"nested",defaults:_||{},targets:b&&b.data==="nested"?b.vars.targets:T}),y.kill(),y.parent=y._dp=Ye(o),y._start=0,f||ki(c)||ki(u)){if(D=T.length,C=f&&p6(f),Fe(f))for(L in f)~R6.indexOf(L)&&(O||(O={}),O[L]=f[L]);for(w=0;w<D;w++)I=xr(r,L6),I.stagger=0,d&&(I.yoyoEase=d),O&&en(I,O),E=T[w],I.duration=+On(c,Ye(o),w,E,T),I.delay=(+On(u,Ye(o),w,E,T)||0)-o._delay,!f&&D===1&&I.delay&&(o._delay=u=I.delay,o._start+=u,I.delay=0),y.to(E,I,C?C(w,E,T):0),y._ease=h2.none;y.duration()?c=u=0:o.timeline=0}else if(v){Un($3(y.vars.defaults,{ease:"none"})),y._ease=r0(v.ease||r.ease||"none");var G=0,X,s1,e1;if(p3(v))v.forEach(function(Z){return y.to(T,Z,">")}),y.duration();else{I={};for(L in v)L==="ease"||L==="easeEach"||b_(L,v[L],I,v.easeEach);for(L in I)for(X=I[L].sort(function(Z,Q){return Z.t-Q.t}),G=0,w=0;w<X.length;w++)s1=X[w],e1={ease:s1.e,duration:(s1.t-(w?X[w-1].t:0))/100*c},e1[L]=s1.v,y.to(T,e1,G),G+=e1.duration;y.duration()<c&&y.to({},{duration:c-y.duration()})}}c||o.duration(c=y.duration())}else o.timeline=0;return p===!0&&!Wo&&(_t=Ye(o),U2.killTweensOf(T),_t=0),Ae(b,Ye(o),s),r.reversed&&o.reverse(),r.paused&&o.paused(!0),(h||!c&&!v&&o._start===q2(b._time)&&R3(h)&&t_(Ye(o))&&b.data!=="nested")&&(o._tTime=-C2,o.render(Math.max(0,-u)||0)),m&&u6(Ye(o),m),o}var t=e.prototype;return t.render=function(r,s,a){var o=this._time,l=this._tDur,c=this._dur,u=r<0,h=r>l-C2&&!u?l:r<C2?0:r,f,p,v,_,m,d,b,T,y;if(!c)i_(this,r,s,a);else if(h!==this._tTime||!r||a||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==u||this._lazy){if(f=h,T=this.timeline,this._repeat){if(_=c+this._rDelay,this._repeat<-1&&u)return this.totalTime(_*100+r,s,a);if(f=q2(h%_),h===l?(v=this._repeat,f=c):(m=q2(h/_),v=~~m,v&&v===m?(f=c,v--):f>c&&(f=c)),d=this._yoyo&&v&1,d&&(y=this._yEase,f=c-f),m=tn(this._tTime,_),f===o&&!a&&this._initted&&v===m)return this._tTime=h,this;v!==m&&(T&&this._yEase&&T6(T,d),this.vars.repeatRefresh&&!d&&!this._lock&&f!==_&&this._initted&&(this._lock=a=1,this.render(q2(_*v),!0).invalidate()._lock=0))}if(!this._initted){if(h6(this,u?r:f,a,s,h))return this._tTime=0,this;if(o!==this._time&&!(a&&this.vars.repeatRefresh&&v!==m))return this;if(c!==this._dur)return this.render(r,s,a)}if(this._tTime=h,this._time=f,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=b=(y||this._ease)(f/c),this._from&&(this.ratio=b=1-b),!o&&h&&!s&&!m&&(G3(this,"onStart"),this._tTime!==h))return this;for(p=this._pt;p;)p.r(b,p.d),p=p._next;T&&T.render(r<0?r:T._dur*T._ease(f/this._dur),s,a)||this._startAt&&(this._zTime=r),this._onUpdate&&!s&&(u&&no(this,r,s,a),G3(this,"onUpdate")),this._repeat&&v!==m&&this.vars.onRepeat&&!s&&this.parent&&G3(this,"onRepeat"),(h===this._tDur||!h)&&this._tTime===h&&(u&&!this._onUpdate&&no(this,r,!0,!0),(r||!c)&&(h===this._tDur&&this._ts>0||!h&&this._ts<0)&&Rt(this,1),!s&&!(u&&!o)&&(h||o||d)&&(G3(this,h===l?"onComplete":"onReverseComplete",!0),this._prom&&!(h<l&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(r){return(!r||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(r),n.prototype.invalidate.call(this,r)},t.resetTo=function(r,s,a,o,l){Kn||H3.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),u;return this._initted||e4(this,c),u=this._ease(c/this._dur),S_(this,r,s,a,o,u,c,l)?this.resetTo(r,s,a,o,1):(Hr(this,0),this.parent||l6(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(r,s){if(s===void 0&&(s="all"),!r&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?Tn(this):this.scrollTrigger&&this.scrollTrigger.kill(!!a3),this;if(this.timeline){var a=this.timeline.totalDuration();return this.timeline.killTweensOf(r,s,_t&&_t.vars.overwrite!==!0)._first||Tn(this),this.parent&&a!==this.timeline.totalDuration()&&nn(this,this._dur*this.timeline._tDur/a,0,1),this}var o=this._targets,l=r?ie(r):o,c=this._ptLookup,u=this._pt,h,f,p,v,_,m,d;if((!s||s==="all")&&Q8(o,l))return s==="all"&&(this._pt=0),Tn(this);for(h=this._op=this._op||[],s!=="all"&&(t3(s)&&(_={},L3(s,function(b){return _[b]=1}),s=_),s=E_(o,s)),d=o.length;d--;)if(~l.indexOf(o[d])){f=c[d],s==="all"?(h[d]=s,v=f,p={}):(p=h[d]=h[d]||{},v=s);for(_ in v)m=f&&f[_],m&&((!("kill"in m.d)||m.d.kill(_)===!0)&&zr(this,m,"_pt"),delete f[_]),p!=="all"&&(p[_]=1)}return this._initted&&!this._pt&&u&&Tn(this),this},e.to=function(r,s){return new e(r,s,arguments[2])},e.from=function(r,s){return Fn(1,arguments)},e.delayedCall=function(r,s,a,o){return new e(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:r,onComplete:s,onReverseComplete:s,onCompleteParams:a,onReverseCompleteParams:a,callbackScope:o})},e.fromTo=function(r,s,a){return Fn(2,arguments)},e.set=function(r,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new e(r,s)},e.killTweensOf=function(r,s,a){return U2.killTweensOf(r,s,a)},e})(Zn);$3(X2.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});L3("staggerTo,staggerFrom,staggerFromTo",function(n){X2[n]=function(){var e=new M3,t=ro.call(arguments,0);return t.splice(n==="staggerFromTo"?5:4,0,0),e[n].apply(e,t)}});var t4=function(e,t,i){return e[t]=i},P6=function(e,t,i){return e[t](i)},T_=function(e,t,i,r){return e[t](r.fp,i)},w_=function(e,t,i){return e.setAttribute(t,i)},n4=function(e,t){return z2(e[t])?P6:Xo(e[t])&&e.setAttribute?w_:t4},I6=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},A_=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},D6=function(e,t){var i=t._pt,r="";if(!e&&t.b)r=t.b;else if(e===1&&t.e)r=t.e;else{for(;i;)r=i.p+(i.m?i.m(i.s+i.c*e):Math.round((i.s+i.c*e)*1e4)/1e4)+r,i=i._next;r+=t.c}t.set(t.t,t.p,r,t)},i4=function(e,t){for(var i=t._pt;i;)i.r(e,i.d),i=i._next},C_=function(e,t,i,r){for(var s=this._pt,a;s;)a=s._next,s.p===r&&s.modifier(e,t,i),s=a},R_=function(e){for(var t=this._pt,i,r;t;)r=t._next,t.p===e&&!t.op||t.op===e?zr(this,t,"_pt"):t.dep||(i=1),t=r;return!i},L_=function(e,t,i,r){r.mSet(e,t,r.m.call(r.tween,i,r.mt),r)},U6=function(e){for(var t=e._pt,i,r,s,a;t;){for(i=t._next,r=s;r&&r.pr>t.pr;)r=r._next;(t._prev=r?r._prev:a)?t._prev._next=t:s=t,(t._next=r)?r._prev=t:a=t,t=i}e._pt=s},P3=(function(){function n(t,i,r,s,a,o,l,c,u){this.t=i,this.s=s,this.c=a,this.p=r,this.r=o||I6,this.d=l||this,this.set=c||t4,this.pr=u||0,this._next=t,t&&(t._prev=this)}var e=n.prototype;return e.modifier=function(i,r,s){this.mSet=this.mSet||this.set,this.set=L_,this.m=i,this.mt=s,this.tween=r},n})();L3(Ko+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(n){return jo[n]=1});q3.TweenMax=q3.TweenLite=X2;q3.TimelineLite=q3.TimelineMax=M3;U2=new M3({sortChildren:!1,defaults:Q0,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});X3.stringFilter=E6;var s0=[],Ji={},P_=[],W9=0,I_=0,Gs=function(e){return(Ji[e]||P_).map(function(t){return t()})},lo=function(){var e=Date.now(),t=[];e-W9>2&&(Gs("matchMediaInit"),s0.forEach(function(i){var r=i.queries,s=i.conditions,a,o,l,c;for(o in r)a=be.matchMedia(r[o]).matches,a&&(l=1),a!==s[o]&&(s[o]=a,c=1);c&&(i.revert(),l&&t.push(i))}),Gs("matchMediaRevert"),t.forEach(function(i){return i.onMatch(i,function(r){return i.add(null,r)})}),W9=e,Gs("matchMedia"))},F6=(function(){function n(t,i){this.selector=i&&so(i),this.data=[],this._r=[],this.isReverted=!1,this.id=I_++,t&&this.add(t)}var e=n.prototype;return e.add=function(i,r,s){z2(i)&&(s=r,r=i,i=z2);var a=this,o=function(){var c=D2,u=a.selector,h;return c&&c!==a&&c.data.push(a),s&&(a.selector=so(s)),D2=a,h=r.apply(a,arguments),z2(h)&&a._r.push(h),D2=c,a.selector=u,a.isReverted=!1,h};return a.last=o,i===z2?o(a,function(l){return a.add(null,l)}):i?a[i]=o:o},e.ignore=function(i){var r=D2;D2=null,i(this),D2=r},e.getTweens=function(){var i=[];return this.data.forEach(function(r){return r instanceof n?i.push.apply(i,r.getTweens()):r instanceof X2&&!(r.parent&&r.parent.data==="nested")&&i.push(r)}),i},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(i,r){var s=this;if(i?(function(){for(var o=s.getTweens(),l=s.data.length,c;l--;)c=s.data[l],c.data==="isFlip"&&(c.revert(),c.getChildren(!0,!0,!1).forEach(function(u){return o.splice(o.indexOf(u),1)}));for(o.map(function(u){return{g:u._dur||u._delay||u._sat&&!u._sat.vars.immediateRender?u.globalTime(0):-1/0,t:u}}).sort(function(u,h){return h.g-u.g||-1/0}).forEach(function(u){return u.t.revert(i)}),l=s.data.length;l--;)c=s.data[l],c instanceof M3?c.data!=="nested"&&(c.scrollTrigger&&c.scrollTrigger.revert(),c.kill()):!(c instanceof X2)&&c.revert&&c.revert(i);s._r.forEach(function(u){return u(i,s)}),s.isReverted=!0})():this.data.forEach(function(o){return o.kill&&o.kill()}),this.clear(),r)for(var a=s0.length;a--;)s0[a].id===this.id&&s0.splice(a,1)},e.revert=function(i){this.kill(i||{})},n})(),D_=(function(){function n(t){this.contexts=[],this.scope=t,D2&&D2.data.push(this)}var e=n.prototype;return e.add=function(i,r,s){Fe(i)||(i={matches:i});var a=new F6(0,s||this.scope),o=a.conditions={},l,c,u;D2&&!a.selector&&(a.selector=D2.selector),this.contexts.push(a),r=a.add("onMatch",r),a.queries=i;for(c in i)c==="all"?u=1:(l=be.matchMedia(i[c]),l&&(s0.indexOf(a)<0&&s0.push(a),(o[c]=l.matches)&&(u=1),l.addListener?l.addListener(lo):l.addEventListener("change",lo)));return u&&r(a,function(h){return a.add(null,h)}),this},e.revert=function(i){this.kill(i||{})},e.kill=function(i){this.contexts.forEach(function(r){return r.kill(i,!0)})},n})(),Mr={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];t.forEach(function(r){return y6(r)})},timeline:function(e){return new M3(e)},getTweensOf:function(e,t){return U2.getTweensOf(e,t)},getProperty:function(e,t,i,r){t3(e)&&(e=ie(e)[0]);var s=n0(e||{}).get,a=i?o6:a6;return i==="native"&&(i=""),e&&(t?a((z3[t]&&z3[t].get||s)(e,t,i,r)):function(o,l,c){return a((z3[o]&&z3[o].get||s)(e,o,l,c))})},quickSetter:function(e,t,i){if(e=ie(e),e.length>1){var r=e.map(function(u){return D3.quickSetter(u,t,i)}),s=r.length;return function(u){for(var h=s;h--;)r[h](u)}}e=e[0]||{};var a=z3[t],o=n0(e),l=o.harness&&(o.harness.aliases||{})[t]||t,c=a?function(u){var h=new a;D0._pt=0,h.init(e,i?u+i:u,D0,0,[e]),h.render(1,h),D0._pt&&i4(1,D0)}:o.set(e,l);return a?c:function(u){return c(e,l,i?u+i:u,o,1)}},quickTo:function(e,t,i){var r,s=D3.to(e,$3((r={},r[t]="+=0.1",r.paused=!0,r.stagger=0,r),i||{})),a=function(l,c,u){return s.resetTo(t,l,c,u)};return a.tween=s,a},isTweening:function(e){return U2.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=r0(e.ease,Q0.ease)),z9(Q0,e||{})},config:function(e){return z9(X3,e||{})},registerEffect:function(e){var t=e.name,i=e.effect,r=e.plugins,s=e.defaults,a=e.extendTimeline;(r||"").split(",").forEach(function(o){return o&&!z3[o]&&!q3[o]&&$n(t+" effect requires "+o+" plugin.")}),zs[t]=function(o,l,c){return i(ie(o),$3(l||{},s),c)},a&&(M3.prototype[t]=function(o,l,c){return this.add(zs[t](o,Fe(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,t){h2[e]=r0(t)},parseEase:function(e,t){return arguments.length?r0(e,t):h2},getById:function(e){return U2.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var i=new M3(e),r,s;for(i.smoothChildTiming=R3(e.smoothChildTiming),U2.remove(i),i._dp=0,i._time=i._tTime=U2._time,r=U2._first;r;)s=r._next,(t||!(!r._dur&&r instanceof X2&&r.vars.onComplete===r._targets[0]))&&Ae(i,r,r._start-r._delay),r=s;return Ae(U2,i,0),i},context:function(e,t){return e?new F6(e,t):D2},matchMedia:function(e){return new D_(e)},matchMediaRefresh:function(){return s0.forEach(function(e){var t=e.conditions,i,r;for(r in t)t[r]&&(t[r]=!1,i=1);i&&e.revert()})||lo()},addEventListener:function(e,t){var i=Ji[e]||(Ji[e]=[]);~i.indexOf(t)||i.push(t)},removeEventListener:function(e,t){var i=Ji[e],r=i&&i.indexOf(t);r>=0&&i.splice(r,1)},utils:{wrap:h_,wrapYoyo:f_,distribute:p6,random:_6,snap:m6,normalize:u_,getUnit:f3,clamp:a_,splitColor:M6,toArray:ie,selector:so,mapRange:v6,pipe:l_,unitize:c_,interpolate:d_,shuffle:d6},install:t6,effects:zs,ticker:H3,updateRoot:M3.updateRoot,plugins:z3,globalTimeline:U2,core:{PropTween:P3,globals:n6,Tween:X2,Timeline:M3,Animation:Zn,getCache:n0,_removeLinkedListItem:zr,reverting:function(){return a3},context:function(e){return e&&D2&&(D2.data.push(e),e._ctx=D2),D2},suppressOverwrites:function(e){return Wo=e}}};L3("to,from,fromTo,delayedCall,set,killTweensOf",function(n){return Mr[n]=X2[n]});H3.add(M3.updateRoot);D0=Mr.to({},{duration:0});var U_=function(e,t){for(var i=e._pt;i&&i.p!==t&&i.op!==t&&i.fp!==t;)i=i._next;return i},F_=function(e,t){var i=e._targets,r,s,a;for(r in t)for(s=i.length;s--;)a=e._ptLookup[s][r],a&&(a=a.d)&&(a._pt&&(a=U_(a,r)),a&&a.modifier&&a.modifier(t[r],e,i[s],r))},Ws=function(e,t){return{name:e,headless:1,rawVars:1,init:function(r,s,a){a._onInit=function(o){var l,c;if(t3(s)&&(l={},L3(s,function(u){return l[u]=1}),s=l),t){l={};for(c in s)l[c]=t(s[c]);s=l}F_(o,s)}}}},D3=Mr.registerPlugin({name:"attr",init:function(e,t,i,r,s){var a,o,l;this.tween=i;for(a in t)l=e.getAttribute(a)||"",o=this.add(e,"setAttribute",(l||0)+"",t[a],r,s,0,0,a),o.op=a,o.b=l,this._props.push(a)},render:function(e,t){for(var i=t._pt;i;)a3?i.set(i.t,i.p,i.b,i):i.r(e,i.d),i=i._next}},{name:"endArray",headless:1,init:function(e,t){for(var i=t.length;i--;)this.add(e,i,e[i]||0,t[i],0,0,0,0,0,1)}},Ws("roundProps",ao),Ws("modifiers"),Ws("snap",m6))||Mr;X2.version=M3.version=D3.version="3.13.0";e6=1;qo()&&rn();h2.Power0;h2.Power1;h2.Power2;h2.Power3;h2.Power4;h2.Linear;h2.Quad;h2.Cubic;h2.Quart;h2.Quint;h2.Strong;h2.Elastic;var O_=h2.Back;h2.SteppedEase;h2.Bounce;h2.Sine;h2.Expo;h2.Circ;/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var X9,gt,G0,r4,e0,q9,s4,N_=function(){return typeof window<"u"},it={},$t=180/Math.PI,W0=Math.PI/180,R0=Math.atan2,$9=1e8,a4=/([A-Z])/g,B_=/(left|right|width|margin|padding|x)/i,z_=/[\s,\(]\S/,Pe={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},co=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},k_=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},H_=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},V_=function(e,t){var i=t.s+t.c*e;t.set(t.t,t.p,~~(i+(i<0?-.5:.5))+t.u,t)},O6=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},N6=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},G_=function(e,t,i){return e.style[t]=i},W_=function(e,t,i){return e.style.setProperty(t,i)},X_=function(e,t,i){return e._gsap[t]=i},q_=function(e,t,i){return e._gsap.scaleX=e._gsap.scaleY=i},$_=function(e,t,i,r,s){var a=e._gsap;a.scaleX=a.scaleY=i,a.renderTransform(s,a)},Y_=function(e,t,i,r,s){var a=e._gsap;a[t]=i,a.renderTransform(s,a)},F2="transform",I3=F2+"Origin",j_=function n(e,t){var i=this,r=this.target,s=r.style,a=r._gsap;if(e in it&&s){if(this.tfm=this.tfm||{},e!=="transform")e=Pe[e]||e,~e.indexOf(",")?e.split(",").forEach(function(o){return i.tfm[o]=je(r,o)}):this.tfm[e]=a.x?a[e]:je(r,e),e===I3&&(this.tfm.zOrigin=a.zOrigin);else return Pe.transform.split(",").forEach(function(o){return n.call(i,o,t)});if(this.props.indexOf(F2)>=0)return;a.svg&&(this.svgo=r.getAttribute("data-svg-origin"),this.props.push(I3,t,"")),e=F2}(s||t)&&this.props.push(e,t,s[e])},B6=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},K_=function(){var e=this.props,t=this.target,i=t.style,r=t._gsap,s,a;for(s=0;s<e.length;s+=3)e[s+1]?e[s+1]===2?t[e[s]](e[s+2]):t[e[s]]=e[s+2]:e[s+2]?i[e[s]]=e[s+2]:i.removeProperty(e[s].substr(0,2)==="--"?e[s]:e[s].replace(a4,"-$1").toLowerCase());if(this.tfm){for(a in this.tfm)r[a]=this.tfm[a];r.svg&&(r.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),s=s4(),(!s||!s.isStart)&&!i[F2]&&(B6(i),r.zOrigin&&i[I3]&&(i[I3]+=" "+r.zOrigin+"px",r.zOrigin=0,r.renderTransform()),r.uncache=1)}},z6=function(e,t){var i={target:e,props:[],revert:K_,save:j_};return e._gsap||D3.core.getCache(e),t&&e.style&&e.nodeType&&t.split(",").forEach(function(r){return i.save(r)}),i},k6,uo=function(e,t){var i=gt.createElementNS?gt.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):gt.createElement(e);return i&&i.style?i:gt.createElement(e)},re=function n(e,t,i){var r=getComputedStyle(e);return r[t]||r.getPropertyValue(t.replace(a4,"-$1").toLowerCase())||r.getPropertyValue(t)||!i&&n(e,sn(t)||t,1)||""},Y9="O,Moz,ms,Ms,Webkit".split(","),sn=function(e,t,i){var r=t||e0,s=r.style,a=5;if(e in s&&!i)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);a--&&!(Y9[a]+e in s););return a<0?null:(a===3?"ms":a>=0?Y9[a]:"")+e},ho=function(){N_()&&window.document&&(X9=window,gt=X9.document,G0=gt.documentElement,e0=uo("div")||{style:{}},uo("div"),F2=sn(F2),I3=F2+"Origin",e0.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",k6=!!sn("perspective"),s4=D3.core.reverting,r4=1)},j9=function(e){var t=e.ownerSVGElement,i=uo("svg",t&&t.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),r=e.cloneNode(!0),s;r.style.display="block",i.appendChild(r),G0.appendChild(i);try{s=r.getBBox()}catch{}return i.removeChild(r),G0.removeChild(i),s},K9=function(e,t){for(var i=t.length;i--;)if(e.hasAttribute(t[i]))return e.getAttribute(t[i])},H6=function(e){var t,i;try{t=e.getBBox()}catch{t=j9(e),i=1}return t&&(t.width||t.height)||i||(t=j9(e)),t&&!t.width&&!t.x&&!t.y?{x:+K9(e,["x","cx","x1"])||0,y:+K9(e,["y","cy","y1"])||0,width:0,height:0}:t},V6=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&H6(e))},l0=function(e,t){if(t){var i=e.style,r;t in it&&t!==I3&&(t=F2),i.removeProperty?(r=t.substr(0,2),(r==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),i.removeProperty(r==="--"?t:t.replace(a4,"-$1").toLowerCase())):i.removeAttribute(t)}},vt=function(e,t,i,r,s,a){var o=new P3(e._pt,t,i,0,1,a?N6:O6);return e._pt=o,o.b=r,o.e=s,e._props.push(i),o},Z9={deg:1,rad:1,turn:1},Z_={grid:1,flex:1},Lt=function n(e,t,i,r){var s=parseFloat(i)||0,a=(i+"").trim().substr((s+"").length)||"px",o=e0.style,l=B_.test(t),c=e.tagName.toLowerCase()==="svg",u=(c?"client":"offset")+(l?"Width":"Height"),h=100,f=r==="px",p=r==="%",v,_,m,d;if(r===a||!s||Z9[r]||Z9[a])return s;if(a!=="px"&&!f&&(s=n(e,t,i,"px")),d=e.getCTM&&V6(e),(p||a==="%")&&(it[t]||~t.indexOf("adius")))return v=d?e.getBBox()[l?"width":"height"]:e[u],V2(p?s/v*h:s/100*v);if(o[l?"width":"height"]=h+(f?a:r),_=r!=="rem"&&~t.indexOf("adius")||r==="em"&&e.appendChild&&!c?e:e.parentNode,d&&(_=(e.ownerSVGElement||{}).parentNode),(!_||_===gt||!_.appendChild)&&(_=gt.body),m=_._gsap,m&&p&&m.width&&l&&m.time===H3.time&&!m.uncache)return V2(s/m.width*h);if(p&&(t==="height"||t==="width")){var b=e.style[t];e.style[t]=h+r,v=e[u],b?e.style[t]=b:l0(e,t)}else(p||a==="%")&&!Z_[re(_,"display")]&&(o.position=re(e,"position")),_===e&&(o.position="static"),_.appendChild(e0),v=e0[u],_.removeChild(e0),o.position="absolute";return l&&p&&(m=n0(_),m.time=H3.time,m.width=_[u]),V2(f?v*s/h:v&&s?h/v*s:0)},je=function(e,t,i,r){var s;return r4||ho(),t in Pe&&t!=="transform"&&(t=Pe[t],~t.indexOf(",")&&(t=t.split(",")[0])),it[t]&&t!=="transform"?(s=Qn(e,r),s=t!=="transformOrigin"?s[t]:s.svg?s.origin:Er(re(e,I3))+" "+s.zOrigin+"px"):(s=e.style[t],(!s||s==="auto"||r||~(s+"").indexOf("calc("))&&(s=Sr[t]&&Sr[t](e,t,i)||re(e,t)||r6(e,t)||(t==="opacity"?1:0))),i&&!~(s+"").trim().indexOf(" ")?Lt(e,t,s,i)+i:s},J_=function(e,t,i,r){if(!i||i==="none"){var s=sn(t,e,1),a=s&&re(e,s,1);a&&a!==i?(t=s,i=a):t==="borderColor"&&(i=re(e,"borderTopColor"))}var o=new P3(this._pt,e.style,t,0,1,D6),l=0,c=0,u,h,f,p,v,_,m,d,b,T,y,w;if(o.b=i,o.e=r,i+="",r+="",r.substring(0,6)==="var(--"&&(r=re(e,r.substring(4,r.indexOf(")")))),r==="auto"&&(_=e.style[t],e.style[t]=r,r=re(e,t)||r,_?e.style[t]=_:l0(e,t)),u=[i,r],E6(u),i=u[0],r=u[1],f=i.match(I0)||[],w=r.match(I0)||[],w.length){for(;h=I0.exec(r);)m=h[0],b=r.substring(l,h.index),v?v=(v+1)%5:(b.substr(-5)==="rgba("||b.substr(-5)==="hsla(")&&(v=1),m!==(_=f[c++]||"")&&(p=parseFloat(_)||0,y=_.substr((p+"").length),m.charAt(1)==="="&&(m=V0(p,m)+y),d=parseFloat(m),T=m.substr((d+"").length),l=I0.lastIndex-T.length,T||(T=T||X3.units[t]||y,l===r.length&&(r+=T,o.e+=T)),y!==T&&(p=Lt(e,t,_,T)||0),o._pt={_next:o._pt,p:b||c===1?b:",",s:p,c:d-p,m:v&&v<4||t==="zIndex"?Math.round:0});o.c=l<r.length?r.substring(l,r.length):""}else o.r=t==="display"&&r==="none"?N6:O6;return Jc.test(r)&&(o.e=0),this._pt=o,o},J9={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},Q_=function(e){var t=e.split(" "),i=t[0],r=t[1]||"50%";return(i==="top"||i==="bottom"||r==="left"||r==="right")&&(e=i,i=r,r=e),t[0]=J9[i]||i,t[1]=J9[r]||r,t.join(" ")},eg=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var i=t.t,r=i.style,s=t.u,a=i._gsap,o,l,c;if(s==="all"||s===!0)r.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)o=s[c],it[o]&&(l=1,o=o==="transformOrigin"?I3:F2),l0(i,o);l&&(l0(i,F2),a&&(a.svg&&i.removeAttribute("transform"),r.scale=r.rotate=r.translate="none",Qn(i,1),a.uncache=1,B6(r)))}},Sr={clearProps:function(e,t,i,r,s){if(s.data!=="isFromStart"){var a=e._pt=new P3(e._pt,t,i,0,0,eg);return a.u=r,a.pr=-10,a.tween=s,e._props.push(i),1}}},Jn=[1,0,0,1,0,0],G6={},W6=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},Q9=function(e){var t=re(e,F2);return W6(t)?Jn:t.substr(7).match(Zc).map(V2)},o4=function(e,t){var i=e._gsap||n0(e),r=e.style,s=Q9(e),a,o,l,c;return i.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?Jn:s):(s===Jn&&!e.offsetParent&&e!==G0&&!i.svg&&(l=r.display,r.display="block",a=e.parentNode,(!a||!e.offsetParent&&!e.getBoundingClientRect().width)&&(c=1,o=e.nextElementSibling,G0.appendChild(e)),s=Q9(e),l?r.display=l:l0(e,"display"),c&&(o?a.insertBefore(e,o):a?a.appendChild(e):G0.removeChild(e))),t&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},fo=function(e,t,i,r,s,a){var o=e._gsap,l=s||o4(e,!0),c=o.xOrigin||0,u=o.yOrigin||0,h=o.xOffset||0,f=o.yOffset||0,p=l[0],v=l[1],_=l[2],m=l[3],d=l[4],b=l[5],T=t.split(" "),y=parseFloat(T[0])||0,w=parseFloat(T[1])||0,I,D,L,E;i?l!==Jn&&(D=p*m-v*_)&&(L=y*(m/D)+w*(-_/D)+(_*b-m*d)/D,E=y*(-v/D)+w*(p/D)-(p*b-v*d)/D,y=L,w=E):(I=H6(e),y=I.x+(~T[0].indexOf("%")?y/100*I.width:y),w=I.y+(~(T[1]||T[0]).indexOf("%")?w/100*I.height:w)),r||r!==!1&&o.smooth?(d=y-c,b=w-u,o.xOffset=h+(d*p+b*_)-d,o.yOffset=f+(d*v+b*m)-b):o.xOffset=o.yOffset=0,o.xOrigin=y,o.yOrigin=w,o.smooth=!!r,o.origin=t,o.originIsAbsolute=!!i,e.style[I3]="0px 0px",a&&(vt(a,o,"xOrigin",c,y),vt(a,o,"yOrigin",u,w),vt(a,o,"xOffset",h,o.xOffset),vt(a,o,"yOffset",f,o.yOffset)),e.setAttribute("data-svg-origin",y+" "+w)},Qn=function(e,t){var i=e._gsap||new A6(e);if("x"in i&&!t&&!i.uncache)return i;var r=e.style,s=i.scaleX<0,a="px",o="deg",l=getComputedStyle(e),c=re(e,I3)||"0",u,h,f,p,v,_,m,d,b,T,y,w,I,D,L,E,C,O,G,X,s1,e1,Z,Q,V,p1,E1,L1,B1,l2,n2,V1;return u=h=f=_=m=d=b=T=y=0,p=v=1,i.svg=!!(e.getCTM&&V6(e)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(r[F2]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[F2]!=="none"?l[F2]:"")),r.scale=r.rotate=r.translate="none"),D=o4(e,i.svg),i.svg&&(i.uncache?(V=e.getBBox(),c=i.xOrigin-V.x+"px "+(i.yOrigin-V.y)+"px",Q=""):Q=!t&&e.getAttribute("data-svg-origin"),fo(e,Q||c,!!Q||i.originIsAbsolute,i.smooth!==!1,D)),w=i.xOrigin||0,I=i.yOrigin||0,D!==Jn&&(O=D[0],G=D[1],X=D[2],s1=D[3],u=e1=D[4],h=Z=D[5],D.length===6?(p=Math.sqrt(O*O+G*G),v=Math.sqrt(s1*s1+X*X),_=O||G?R0(G,O)*$t:0,b=X||s1?R0(X,s1)*$t+_:0,b&&(v*=Math.abs(Math.cos(b*W0))),i.svg&&(u-=w-(w*O+I*X),h-=I-(w*G+I*s1))):(V1=D[6],l2=D[7],E1=D[8],L1=D[9],B1=D[10],n2=D[11],u=D[12],h=D[13],f=D[14],L=R0(V1,B1),m=L*$t,L&&(E=Math.cos(-L),C=Math.sin(-L),Q=e1*E+E1*C,V=Z*E+L1*C,p1=V1*E+B1*C,E1=e1*-C+E1*E,L1=Z*-C+L1*E,B1=V1*-C+B1*E,n2=l2*-C+n2*E,e1=Q,Z=V,V1=p1),L=R0(-X,B1),d=L*$t,L&&(E=Math.cos(-L),C=Math.sin(-L),Q=O*E-E1*C,V=G*E-L1*C,p1=X*E-B1*C,n2=s1*C+n2*E,O=Q,G=V,X=p1),L=R0(G,O),_=L*$t,L&&(E=Math.cos(L),C=Math.sin(L),Q=O*E+G*C,V=e1*E+Z*C,G=G*E-O*C,Z=Z*E-e1*C,O=Q,e1=V),m&&Math.abs(m)+Math.abs(_)>359.9&&(m=_=0,d=180-d),p=V2(Math.sqrt(O*O+G*G+X*X)),v=V2(Math.sqrt(Z*Z+V1*V1)),L=R0(e1,Z),b=Math.abs(L)>2e-4?L*$t:0,y=n2?1/(n2<0?-n2:n2):0),i.svg&&(Q=e.getAttribute("transform"),i.forceCSS=e.setAttribute("transform","")||!W6(re(e,F2)),Q&&e.setAttribute("transform",Q))),Math.abs(b)>90&&Math.abs(b)<270&&(s?(p*=-1,b+=_<=0?180:-180,_+=_<=0?180:-180):(v*=-1,b+=b<=0?180:-180)),t=t||i.uncache,i.x=u-((i.xPercent=u&&(!t&&i.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-u)?-50:0)))?e.offsetWidth*i.xPercent/100:0)+a,i.y=h-((i.yPercent=h&&(!t&&i.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-h)?-50:0)))?e.offsetHeight*i.yPercent/100:0)+a,i.z=f+a,i.scaleX=V2(p),i.scaleY=V2(v),i.rotation=V2(_)+o,i.rotationX=V2(m)+o,i.rotationY=V2(d)+o,i.skewX=b+o,i.skewY=T+o,i.transformPerspective=y+a,(i.zOrigin=parseFloat(c.split(" ")[2])||!t&&i.zOrigin||0)&&(r[I3]=Er(c)),i.xOffset=i.yOffset=0,i.force3D=X3.force3D,i.renderTransform=i.svg?ng:k6?X6:tg,i.uncache=0,i},Er=function(e){return(e=e.split(" "))[0]+" "+e[1]},Xs=function(e,t,i){var r=f3(t);return V2(parseFloat(t)+parseFloat(Lt(e,"x",i+"px",r)))+r},tg=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,X6(e,t)},Vt="0deg",Sn="0px",Gt=") ",X6=function(e,t){var i=t||this,r=i.xPercent,s=i.yPercent,a=i.x,o=i.y,l=i.z,c=i.rotation,u=i.rotationY,h=i.rotationX,f=i.skewX,p=i.skewY,v=i.scaleX,_=i.scaleY,m=i.transformPerspective,d=i.force3D,b=i.target,T=i.zOrigin,y="",w=d==="auto"&&e&&e!==1||d===!0;if(T&&(h!==Vt||u!==Vt)){var I=parseFloat(u)*W0,D=Math.sin(I),L=Math.cos(I),E;I=parseFloat(h)*W0,E=Math.cos(I),a=Xs(b,a,D*E*-T),o=Xs(b,o,-Math.sin(I)*-T),l=Xs(b,l,L*E*-T+T)}m!==Sn&&(y+="perspective("+m+Gt),(r||s)&&(y+="translate("+r+"%, "+s+"%) "),(w||a!==Sn||o!==Sn||l!==Sn)&&(y+=l!==Sn||w?"translate3d("+a+", "+o+", "+l+") ":"translate("+a+", "+o+Gt),c!==Vt&&(y+="rotate("+c+Gt),u!==Vt&&(y+="rotateY("+u+Gt),h!==Vt&&(y+="rotateX("+h+Gt),(f!==Vt||p!==Vt)&&(y+="skew("+f+", "+p+Gt),(v!==1||_!==1)&&(y+="scale("+v+", "+_+Gt),b.style[F2]=y||"translate(0, 0)"},ng=function(e,t){var i=t||this,r=i.xPercent,s=i.yPercent,a=i.x,o=i.y,l=i.rotation,c=i.skewX,u=i.skewY,h=i.scaleX,f=i.scaleY,p=i.target,v=i.xOrigin,_=i.yOrigin,m=i.xOffset,d=i.yOffset,b=i.forceCSS,T=parseFloat(a),y=parseFloat(o),w,I,D,L,E;l=parseFloat(l),c=parseFloat(c),u=parseFloat(u),u&&(u=parseFloat(u),c+=u,l+=u),l||c?(l*=W0,c*=W0,w=Math.cos(l)*h,I=Math.sin(l)*h,D=Math.sin(l-c)*-f,L=Math.cos(l-c)*f,c&&(u*=W0,E=Math.tan(c-u),E=Math.sqrt(1+E*E),D*=E,L*=E,u&&(E=Math.tan(u),E=Math.sqrt(1+E*E),w*=E,I*=E)),w=V2(w),I=V2(I),D=V2(D),L=V2(L)):(w=h,L=f,I=D=0),(T&&!~(a+"").indexOf("px")||y&&!~(o+"").indexOf("px"))&&(T=Lt(p,"x",a,"px"),y=Lt(p,"y",o,"px")),(v||_||m||d)&&(T=V2(T+v-(v*w+_*D)+m),y=V2(y+_-(v*I+_*L)+d)),(r||s)&&(E=p.getBBox(),T=V2(T+r/100*E.width),y=V2(y+s/100*E.height)),E="matrix("+w+","+I+","+D+","+L+","+T+","+y+")",p.setAttribute("transform",E),b&&(p.style[F2]=E)},ig=function(e,t,i,r,s){var a=360,o=t3(s),l=parseFloat(s)*(o&&~s.indexOf("rad")?$t:1),c=l-r,u=r+c+"deg",h,f;return o&&(h=s.split("_")[1],h==="short"&&(c%=a,c!==c%(a/2)&&(c+=c<0?a:-a)),h==="cw"&&c<0?c=(c+a*$9)%a-~~(c/a)*a:h==="ccw"&&c>0&&(c=(c-a*$9)%a-~~(c/a)*a)),e._pt=f=new P3(e._pt,t,i,r,c,k_),f.e=u,f.u="deg",e._props.push(i),f},el=function(e,t){for(var i in t)e[i]=t[i];return e},rg=function(e,t,i){var r=el({},i._gsap),s="perspective,force3D,transformOrigin,svgOrigin",a=i.style,o,l,c,u,h,f,p,v;r.svg?(c=i.getAttribute("transform"),i.setAttribute("transform",""),a[F2]=t,o=Qn(i,1),l0(i,F2),i.setAttribute("transform",c)):(c=getComputedStyle(i)[F2],a[F2]=t,o=Qn(i,1),a[F2]=c);for(l in it)c=r[l],u=o[l],c!==u&&s.indexOf(l)<0&&(p=f3(c),v=f3(u),h=p!==v?Lt(i,l,c,v):parseFloat(c),f=parseFloat(u),e._pt=new P3(e._pt,o,l,h,f-h,co),e._pt.u=v||0,e._props.push(l));el(o,r)};L3("padding,margin,Width,Radius",function(n,e){var t="Top",i="Right",r="Bottom",s="Left",a=(e<3?[t,i,r,s]:[t+s,t+i,r+i,r+s]).map(function(o){return e<2?n+o:"border"+o+n});Sr[e>1?"border"+n:n]=function(o,l,c,u,h){var f,p;if(arguments.length<4)return f=a.map(function(v){return je(o,v,c)}),p=f.join(" "),p.split(f[0]).length===5?f[0]:p;f=(u+"").split(" "),p={},a.forEach(function(v,_){return p[v]=f[_]=f[_]||f[(_-1)/2|0]}),o.init(l,p,h)}});var q6={name:"css",register:ho,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,i,r,s){var a=this._props,o=e.style,l=i.vars.startAt,c,u,h,f,p,v,_,m,d,b,T,y,w,I,D,L;r4||ho(),this.styles=this.styles||z6(e),L=this.styles.props,this.tween=i;for(_ in t)if(_!=="autoRound"&&(u=t[_],!(z3[_]&&C6(_,t,i,r,e,s)))){if(p=typeof u,v=Sr[_],p==="function"&&(u=u.call(i,r,e,s),p=typeof u),p==="string"&&~u.indexOf("random(")&&(u=jn(u)),v)v(this,e,_,u,i)&&(D=1);else if(_.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(_)+"").trim(),u+="",Et.lastIndex=0,Et.test(c)||(m=f3(c),d=f3(u)),d?m!==d&&(c=Lt(e,_,c,d)+d):m&&(u+=m),this.add(o,"setProperty",c,u,r,s,0,0,_),a.push(_),L.push(_,0,o[_]);else if(p!=="undefined"){if(l&&_ in l?(c=typeof l[_]=="function"?l[_].call(i,r,e,s):l[_],t3(c)&&~c.indexOf("random(")&&(c=jn(c)),f3(c+"")||c==="auto"||(c+=X3.units[_]||f3(je(e,_))||""),(c+"").charAt(1)==="="&&(c=je(e,_))):c=je(e,_),f=parseFloat(c),b=p==="string"&&u.charAt(1)==="="&&u.substr(0,2),b&&(u=u.substr(2)),h=parseFloat(u),_ in Pe&&(_==="autoAlpha"&&(f===1&&je(e,"visibility")==="hidden"&&h&&(f=0),L.push("visibility",0,o.visibility),vt(this,o,"visibility",f?"inherit":"hidden",h?"inherit":"hidden",!h)),_!=="scale"&&_!=="transform"&&(_=Pe[_],~_.indexOf(",")&&(_=_.split(",")[0]))),T=_ in it,T){if(this.styles.save(_),p==="string"&&u.substring(0,6)==="var(--"&&(u=re(e,u.substring(4,u.indexOf(")"))),h=parseFloat(u)),y||(w=e._gsap,w.renderTransform&&!t.parseTransform||Qn(e,t.parseTransform),I=t.smoothOrigin!==!1&&w.smooth,y=this._pt=new P3(this._pt,o,F2,0,1,w.renderTransform,w,0,-1),y.dep=1),_==="scale")this._pt=new P3(this._pt,w,"scaleY",w.scaleY,(b?V0(w.scaleY,b+h):h)-w.scaleY||0,co),this._pt.u=0,a.push("scaleY",_),_+="X";else if(_==="transformOrigin"){L.push(I3,0,o[I3]),u=Q_(u),w.svg?fo(e,u,0,I,0,this):(d=parseFloat(u.split(" ")[2])||0,d!==w.zOrigin&&vt(this,w,"zOrigin",w.zOrigin,d),vt(this,o,_,Er(c),Er(u)));continue}else if(_==="svgOrigin"){fo(e,u,1,I,0,this);continue}else if(_ in G6){ig(this,w,_,f,b?V0(f,b+u):u);continue}else if(_==="smoothOrigin"){vt(this,w,"smooth",w.smooth,u);continue}else if(_==="force3D"){w[_]=u;continue}else if(_==="transform"){rg(this,u,e);continue}}else _ in o||(_=sn(_)||_);if(T||(h||h===0)&&(f||f===0)&&!z_.test(u)&&_ in o)m=(c+"").substr((f+"").length),h||(h=0),d=f3(u)||(_ in X3.units?X3.units[_]:m),m!==d&&(f=Lt(e,_,c,d)),this._pt=new P3(this._pt,T?w:o,_,f,(b?V0(f,b+h):h)-f,!T&&(d==="px"||_==="zIndex")&&t.autoRound!==!1?V_:co),this._pt.u=d||0,m!==d&&d!=="%"&&(this._pt.b=c,this._pt.r=H_);else if(_ in o)J_.call(this,e,_,c,b?b+u:u);else if(_ in e)this.add(e,_,c||e[_],b?b+u:u,r,s);else if(_!=="parseTransform"){Yo(_,u);continue}T||(_ in o?L.push(_,0,o[_]):typeof e[_]=="function"?L.push(_,2,e[_]()):L.push(_,1,c||e[_])),a.push(_)}}D&&U6(this)},render:function(e,t){if(t.tween._time||!s4())for(var i=t._pt;i;)i.r(e,i.d),i=i._next;else t.styles.revert()},get:je,aliases:Pe,getSetter:function(e,t,i){var r=Pe[t];return r&&r.indexOf(",")<0&&(t=r),t in it&&t!==I3&&(e._gsap.x||je(e,"x"))?i&&q9===i?t==="scale"?q_:X_:(q9=i||{})&&(t==="scale"?$_:Y_):e.style&&!Xo(e.style[t])?G_:~t.indexOf("-")?W_:n4(e,t)},core:{_removeProperty:l0,_getMatrix:o4}};D3.utils.checkPrefix=sn;D3.core.getStyleSaver=z6;(function(n,e,t,i){var r=L3(n+","+e+","+t,function(s){it[s]=1});L3(e,function(s){X3.units[s]="deg",G6[s]=1}),Pe[r[13]]=n+","+e,L3(i,function(s){var a=s.split(":");Pe[a[1]]=r[a[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");L3("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(n){X3.units[n]="px"});D3.registerPlugin(q6);var r2=D3.registerPlugin(q6)||D3;r2.core.Tween;const $6={themeId:"vader",displayName:"Vader",pageTitle:"I find your lack of faith disturbing.",favicon:"/svg/vaderfav.svg",colors:{background:"#000000",primary:"#FF0000",accent:"#8B0000"},font:{family:"'Arial Black', sans-serif",size:"16px"},searchBar:{container:{position:{top:"calc(40% + 300px)",left:"50%"},zIndex:1e3,textAlign:"center"},input:{size:{width:"400px",height:"20px",mobileWidth:"80vw"},shape:{borderRadius:"0px"},background:{color:"rgba(255, 0, 0, 0.1)"},border:{width:"1px",color:"#FF0000",style:"solid"},text:{color:"#f1830eff",fontFamily:"'Impact', 'Arial Black', sans-serif",fontSize:"14px",fontWeight:"normal",letterSpacing:"2px",verticalAlign:"baseline"},effects:{boxShadow:"none",transition:"all 0.3s"}},placeholder:{text:{color:"#f1830eff",fontWeight:"normal"},position:{top:"5px"},animation:{initialText:"Search... and together we can rule this browser...",phrases:["The Force is strong with this one.","I find your lack of keywords disturbing.","There is no escape from my search algorithm.","The Dark Side of the web holds the answers you seek."],typingSpeed:40}},icon:{svg:"./svg/Vader.svg",position:"above",size:{width:"80px",height:"80px"},effects:{filter:"drop-shadow(0 0 4px #58059cff) drop-shadow(0 0 12px #58059cff)",opacity:{initial:0,visible:1},transform:{initial:"scale(0.3)",visible:"scale(1)"},transition:"all 0.8s ease-out"}},loadAnimation:{searchBarDelay:14e3,iconDelay:800,effects:{opacity:{initial:0,visible:1},transform:{initial:"scale(0.1)",visible:"scale(1)"},transition:"all 1s cubic-bezier(0.25, 0.46, 0.45, 0.94)"}}},backgroundAnimation:{animationFrameId:null,theme:null,async loadSvgTexture(n){try{const e=new Image;return e.src=n.startsWith("./")?n:`./${n.replace(/^\//,"")}`,new Promise((t,i)=>{e.onload=()=>t(e),e.onerror=r=>{console.warn(`Failed to load SVG texture from ${n}:`,r),i(r)}})}catch(e){return console.warn(`Failed to load SVG texture from ${n}:`,e),null}},init:async function(n,e){this.theme=e;const t=new Yf,i=new J3(75,window.innerWidth/window.innerHeight,.1,15e3),r=new G8({canvas:n,antialias:!0});r.setSize(window.innerWidth,window.innerHeight),r.setClearColor(0,1);const s=await Promise.allSettled([this.loadSvgTexture("./svg/gas-planet.svg"),this.loadSvgTexture("./svg/rocky-planet.svg"),this.loadSvgTexture("./svg/star-killer.svg")]),a=s[0].status==="fulfilled"?s[0].value:null,o=s[1].status==="fulfilled"?s[1].value:null,l=s[2].status==="fulfilled"?s[2].value:null,c=document.createElement("canvas");c.width=512,c.height=256;const u=c.getContext("2d");for(let V1=0;V1<2940;V1++){const a1=Math.random()*512,u1=Math.random()*256;u.fillStyle="rgb(100, 100, 100)",u.fillRect(a1,u1,2,2)}for(let V1=0;V1<3e3;V1++){const a1=Math.random()*512,u1=Math.random()*256,M1=Math.random()*.3+.1;u.fillStyle=Math.random()>.5?`rgba(255, 255, 0, ${M1})`:`rgba(255, 100, 0, ${M1})`,u.fillRect(a1,u1,3,3)}o&&(u.globalAlpha=.3,u.globalCompositeOperation="multiply",u.drawImage(o,0,0,512,256),u.globalAlpha=1,u.globalCompositeOperation="source-over");const h=new Rs(c),f=document.createElement("canvas");f.width=512,f.height=256;const p=f.getContext("2d");a&&p.drawImage(a,0,0,512,256);const v=new Rs(f),_=document.createElement("canvas");_.width=1024,_.height=512;const m=_.getContext("2d");m.fillStyle="#222222",m.fillRect(0,0,1024,512),l&&m.drawImage(l,0,0,1024,512);const d=new Rs(_),b=new sd(4210752,.5);t.add(b);const T=new rd(16777215,.8);T.position.set(1,1,1),t.add(T);const y=new _r(50,32,32),w=new Ls({map:h}),I=new te(y,w);I.position.set(500,200,-800),t.add(I);const D=new Ls({map:v}),L=new te(y,D);L.position.set(-300,-100,-600),t.add(L);const E=new _r(300,64,64),C=new Ls({map:d,transparent:!0,opacity:0}),O=new te(E,C);O.scale.set(.1,.1,.1),t.add(O);const G=5e3,X=[],s1=new Float32Array(G*6);for(let V1=0;V1<G;V1++){const a1=(Math.random()-.5)*4e3,u1=(Math.random()-.5)*4e3,M1=(Math.random()-.5)*4e3;X.push({x:a1,y:u1,z:M1,velocity:0})}const e1=new Oe;e1.setAttribute("position",new ye(s1,3));const Z=new Bc({color:16777215,transparent:!0,opacity:.8,blending:la}),Q=new Qf(e1,Z);t.add(Q),i.position.z=1e3;let V={value:.5},p1="static",E1=Date.now(),L1=!1,B1=0,l2=!1;function n2(){this.animationFrameId=requestAnimationFrame(n2.bind(this));const V1=Date.now(),a1=(V1-E1)/1e3;if(p1==="static"&&a1>6&&(p1="jump",E1=V1,r2.to(I.scale,{x:.01,y:.01,z:.01,duration:1.5,onComplete:()=>I.visible=!1}),r2.to(L.scale,{x:.01,y:.01,z:.01,duration:1.5,onComplete:()=>L.visible=!1}),r2.to(Z.color,{r:.5,g:.7,b:1,duration:3}),r2.to(V,{value:20,duration:3}),this.theme.vortexLayer.animation.fadeIn(),this.theme.vortexLayer.animation.setSpeed("jump")),p1==="jump"&&(a1>3.5&&!L1&&(e1.computeBoundingSphere(),this.theme.vortexLayer.animation.fadeIntermedio(),L1=!0),a1>7)){p1="arrival",E1=V1,O.position.set(i.position.x+100,i.position.y+50,i.position.z-4875);for(const M1 of X)M1.velocity=0,M1.x=(Math.random()-.5)*4e3+i.position.x,M1.y=(Math.random()-.5)*4e3+i.position.y,M1.z=i.position.z-Math.random()*4e3;e1.computeBoundingSphere(),r2.to(V,{value:0,duration:3,ease:"power2.out"}),r2.to(Z.color,{r:1,g:1,b:1,duration:3}),r2.to(O.material,{opacity:1,duration:3}),r2.to(O.scale,{x:1,y:1,z:1,duration:3.5,ease:"power2.out"}),this.theme.vortexLayer.animation.fadeOut(),this.theme.vortexLayer.animation.setSpeed("final")}if(p1==="arrival"&&a1>3&&(p1="travel",E1=V1,r2.killTweensOf(V),V.value=0),p1==="travel"&&(i.position.z-=.1,this.theme.overlayLayer.animation.travelTimeline||this.theme.overlayLayer.animation.travelAnimation(),a1>5&&(p1="final")),p1!=="final"&&(i.position.z-=V.value),p1==="static"&&(I.rotation.y+=.005,L.rotation.y+=.003),p1==="final"){O.rotation.y+=.001,l2||(B1=Math.atan2(i.position.x-O.position.x,i.position.z-O.position.z),l2=!0);const M1=4875;B1+=-2e-5,i.position.x=O.position.x+Math.sin(B1)*M1,i.position.z=O.position.z+Math.cos(B1)*M1,i.lookAt(O.position)}const u1=e1.attributes.position.array;for(let M1=0;M1<G;M1++){const D1=X[M1];p1==="jump"?D1.velocity+=2:p1==="arrival"?D1.velocity*=.95:p1==="final"&&(D1.velocity=0),D1.z+=D1.velocity;let O1=2;p1==="jump"&&(O1+=D1.velocity*11);const Q1=M1*6;u1[Q1]=D1.x,u1[Q1+1]=D1.y,u1[Q1+2]=D1.z,u1[Q1+3]=D1.x,u1[Q1+4]=D1.y,u1[Q1+5]=D1.z-O1,D1.z>i.position.z&&(D1.z=i.position.z-4e3,D1.x=(Math.random()-.5)*4e3+i.position.x,D1.y=(Math.random()-.5)*4e3+i.position.y,p1==="jump"?D1.velocity=Math.random()*10+5:D1.velocity=0)}e1.attributes.position.needsUpdate=!0,r.render(t,i)}this.scene=t,this.renderer=r,n2.bind(this)()},destroy:function(){if(this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.scene)for(this.scene.traverse(n=>{n.geometry&&n.geometry.dispose(),n.material&&(n.material.map&&n.material.map.dispose(),n.material.dispose())});this.scene.children.length>0;)this.scene.remove(this.scene.children[0]);this.renderer&&this.renderer.dispose()}},overlayLayer:{type:"dotlottie-vue",lottieSrc:"https://lottie.host/7929d64a-c983-4efb-a55c-ca3574d390f1/IFELBomFxB.lottie",animation:{introTimeline:null,rotationTimeline:null,vibrationTimeline:null,joltsTimeline:null,travelTimeline:null,element:null,init:function(n,e){n&&(this.element=n,this.introTimeline=r2.fromTo(n,{opacity:0,scale:1.1},{opacity:.8,scale:1,duration:2.5,ease:"power2.out",onComplete:()=>{this.startRotationAnimation(n)}}))},startRotationAnimation:function(n){r2.set(n,{transformOrigin:"50% 50%"}),this.rotationTimeline=r2.to(n,{rotation:2.5,duration:1.25,yoyo:!0,repeat:1,ease:"power1.inOut",onComplete:()=>{this.startVibrationAnimation(n)}})},startVibrationAnimation:function(n){this.vibrationTimeline=r2.to(n,{x:()=>r2.utils.random(-5,5),y:()=>r2.utils.random(-5,5),rotation:()=>r2.utils.random(-.8,.8),duration:.05,repeat:-1,ease:"none"}),this.joltsTimeline=r2.timeline({repeat:-1,repeatDelay:.9}).to(n,{x:()=>r2.utils.random(-6,8),y:()=>r2.utils.random(-8,6),duration:.04,ease:"power4.inOut"}),r2.delayedCall(4.5,()=>{this.vibrationTimeline&&this.vibrationTimeline.kill(),this.joltsTimeline&&this.joltsTimeline.kill(),r2.to(n,{duration:5,x:1,y:-1,rotation:0,scale:.95,ease:O_.easeOut.config(2),onComplete:()=>{r2.to(n,{scale:1,duration:.5,ease:"power1.out"})}})})},travelAnimation:function(){this.element&&(this.travelTimeline=r2.to(this.element,{rotation:2.5,duration:3,yoyo:!0,repeat:3,ease:"sine.inOut"}))},destroy:function(n){this.introTimeline&&this.introTimeline.kill(),this.rotationTimeline&&this.rotationTimeline.kill(),this.vibrationTimeline&&this.vibrationTimeline.kill(),this.joltsTimeline&&this.joltsTimeline.kill(),this.travelTimeline&&this.travelTimeline.kill(),r2.killTweensOf(this.startVibrationAnimation),r2.killTweensOf(n)}}},vortexLayer:{type:"svg",styles:{position:"absolute",top:"50%",left:"50%",width:"100vmax",height:"100vmax",transform:"translate(-50%, -50%)","z-index":5,"pointer-events":"none",opacity:0,"mix-blend-mode":"screen"},async loadSvgContent(n){try{const e=n.startsWith("./")?n:`./${n.replace(/^\//,"")}`,t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.text()}catch(e){return console.error(`Failed to fetch SVG content from ${n}:`,e),null}},animation:{element:null,rotationTimeline:null,speeds:{initial:.01,jump:.5,final:.98},init:async function(n,e){if(!n)return;this.element=n;const t=await e.vortexLayer.loadSvgContent("./svg/vortex.svg");if(t){this.element.innerHTML=t;const i=this.element.querySelector("svg");i&&(i.style.width="100%",i.style.height="100%",i.setAttribute("preserveAspectRatio","xMidYMid slice"),this.startRotation())}},fadeIn:function(){this.element&&r2.to(this.element,{opacity:.3,duration:6,ease:"power2.out"})},fadeIntermedio:function(){this.element&&r2.to(this.element,{opacity:.2,duration:7,ease:"power2.inOut"})},fadeOut:function(){this.element&&r2.to(this.element,{opacity:0,duration:0,ease:"power2.inOut"})},startRotation:function(){this.element&&(r2.set(this.element,{transformOrigin:"50% 50%"}),this.rotationTimeline=r2.to(this.element,{rotation:360,duration:this.speeds.initial,repeat:-1,ease:"none"}))},setSpeed:function(n){this.rotationTimeline&&this.speeds[n]&&r2.to(this.rotationTimeline,{duration:.5,timeScale:this.speeds.initial/this.speeds[n]})},destroy:function(){this.rotationTimeline&&this.rotationTimeline.kill(),this.element&&(r2.killTweensOf(this.element),this.element.innerHTML="")}}},iconLayer:{type:"svg",styles:{position:"absolute",top:"calc(40% + 200px)",left:"50%",transform:"translateX(-50%)",width:"200px","z-index":1001,"pointer-events":"none",opacity:0},async loadSvgContent(n){try{const e=await fetch(n);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.text()}catch(e){return console.error(`Failed to fetch SVG content from ${n}:`,e),null}},animation:{element:null,blinkingTimeline:null,svgPath:"./svg/search-vader.svg",startTime:3e3,disappearOffset:200,fadeIn:{duration:.5,ease:"power1.out"},fadeOut:{duration:.1,ease:"power1.in"},blinking:{opacity:.4,duration:.2,ease:"power1.inOut"},init:async function(n,e){if(!n)return;this.element=n;const t=await e.iconLayer.loadSvgContent(this.svgPath);t&&(n.innerHTML=t),this.blinkingTimeline=r2.timeline({paused:!0,repeat:-1,yoyo:!0}).to(n,{opacity:this.blinking.opacity,duration:this.blinking.duration,ease:this.blinking.ease}),r2.delayedCall(this.startTime/1e3,()=>{r2.to(n,{opacity:1,duration:this.fadeIn.duration,ease:this.fadeIn.ease}),this.blinkingTimeline.play()});const r=(e.searchBar.loadAnimation.searchBarDelay-this.disappearOffset)/1e3;r2.delayedCall(r,()=>{this.blinkingTimeline.kill(),r2.to(n,{opacity:0,duration:this.fadeOut.duration,ease:this.fadeOut.ease})})},destroy:function(){this.blinkingTimeline&&this.blinkingTimeline.kill(),r2.killTweensOf(this.element)}}},additionalElements:[]},Vr=(n,e)=>{const t=n.__vccOpts||n;for(const[i,r]of e)t[i]=r;return t},sg={class:"theme-switcher"},ag=["onClick"],og={__name:"ThemeSelector",emits:["themeChanged"],setup(n,{emit:e}){const t=[ur,$6],i=k3(ur),r=e;function s(a){i.value=a,r("themeChanged",a)}return(a,o)=>(x3(),ee("div",sg,[(x3(),ee(fe,null,gu(t,l=>q0("button",{key:l.themeId,onClick:c=>s(l)},_l(l.displayName),9,ag)),64))]))}},lg=Vr(og,[["__scopeId","data-v-77c69b4c"]]);var cg=Object.defineProperty,ug=(n,e,t)=>e in n?cg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,J1=(n,e,t)=>ug(n,typeof e!="symbol"?e+"":e,t),hg=class{requestAnimationFrame(n){return requestAnimationFrame(n)}cancelAnimationFrame(n){cancelAnimationFrame(n)}},fg=class{constructor(){J1(this,"_lastHandleId",0),J1(this,"_lastImmediate",null)}requestAnimationFrame(n){return this._lastHandleId>=Number.MAX_SAFE_INTEGER&&(this._lastHandleId=0),this._lastHandleId+=1,this._lastImmediate=setImmediate(()=>{n(Date.now())}),this._lastHandleId}cancelAnimationFrame(n){this._lastImmediate&&clearImmediate(this._lastImmediate)}},dg=class{constructor(){J1(this,"_strategy"),this._strategy=typeof requestAnimationFrame=="function"?new hg:new fg}requestAnimationFrame(n){return this._strategy.requestAnimationFrame(n)}cancelAnimationFrame(n){this._strategy.cancelAnimationFrame(n)}},e3=typeof window<"u"&&typeof window.document<"u",qs=new Uint8Array([80,75,3,4]),pg=["v","ip","op","layers","fr","w","h"],Y6="0.54.1",j6="@lottiefiles/dotlottie-web",mg=.75,_g=4,gg=(()=>{var n=typeof document<"u"?document.currentScript?.src:void 0;return function(e={}){var t,i=e,r,s,a=new Promise((g,x)=>{r=g,s=x}),o=Object.assign({},i),l="./this.program",c="",u;typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),n&&(c=n),c.startsWith("blob:")?c="":c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1),u=async g=>{if(g=await fetch(g,{credentials:"same-origin"}),g.ok)return g.arrayBuffer();throw Error(g.status+" : "+g.url)};var h=i.printErr||console.error.bind(console);Object.assign(i,o),o=null,i.thisProgram&&(l=i.thisProgram);var f=i.wasmBinary,p,v=!1,_,m,d,b,T,y,w,I,D;function L(){var g=p.buffer;i.HEAP8=m=new Int8Array(g),i.HEAP16=b=new Int16Array(g),i.HEAPU8=d=new Uint8Array(g),i.HEAPU16=T=new Uint16Array(g),i.HEAP32=y=new Int32Array(g),i.HEAPU32=w=new Uint32Array(g),i.HEAPF32=I=new Float32Array(g),i.HEAPF64=D=new Float64Array(g)}var E=[],C=[],O=[];function G(){var g=i.preRun.shift();E.unshift(g)}var X=0,s1=null;function e1(g){throw i.onAbort?.(g),g="Aborted("+g+")",h(g),v=!0,g=new WebAssembly.RuntimeError(g+". Build with -sASSERTIONS for more info."),s(g),g}var Z=g=>g.startsWith("data:application/octet-stream;base64,"),Q;async function V(g){if(!f)try{var x=await u(g);return new Uint8Array(x)}catch{}if(g==Q&&f)g=new Uint8Array(f);else throw"both async and sync fetching of the wasm failed";return g}async function p1(g,x){try{var P=await V(g);return await WebAssembly.instantiate(P,x)}catch(U){h(`failed to asynchronously prepare wasm: ${U}`),e1(U)}}async function E1(g){var x=Q;if(!f&&typeof WebAssembly.instantiateStreaming=="function"&&!Z(x)&&typeof fetch=="function")try{var P=fetch(x,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(P,g)}catch(U){h(`wasm streaming compile failed: ${U}`),h("falling back to ArrayBuffer instantiation")}return p1(x,g)}class L1{constructor(x){J1(this,"name","ExitStatus"),this.message=`Program terminated with exit(${x})`,this.status=x}}var B1=g=>{for(;0<g.length;)g.shift()(i)},l2=i.noExitRuntime||!0,n2=typeof TextDecoder<"u"?new TextDecoder:void 0,V1=(g=0,x=NaN)=>{var P=d,U=g+x;for(x=g;P[x]&&!(x>=U);)++x;if(16<x-g&&P.buffer&&n2)return n2.decode(P.subarray(g,x));for(U="";g<x;){var z=P[g++];if(z&128){var t1=P[g++]&63;if((z&224)==192)U+=String.fromCharCode((z&31)<<6|t1);else{var x1=P[g++]&63;z=(z&240)==224?(z&15)<<12|t1<<6|x1:(z&7)<<18|t1<<12|x1<<6|P[g++]&63,65536>z?U+=String.fromCharCode(z):(z-=65536,U+=String.fromCharCode(55296|z>>10,56320|z&1023))}}else U+=String.fromCharCode(z)}return U};class a1{constructor(x){this.Ca=x-24}}var u1=0,M1=(g,x,P)=>{var U=d;if(0<P){P=x+P-1;for(var z=0;z<g.length;++z){var t1=g.charCodeAt(z);if(55296<=t1&&57343>=t1){var x1=g.charCodeAt(++z);t1=65536+((t1&1023)<<10)|x1&1023}if(127>=t1){if(x>=P)break;U[x++]=t1}else{if(2047>=t1){if(x+1>=P)break;U[x++]=192|t1>>6}else{if(65535>=t1){if(x+2>=P)break;U[x++]=224|t1>>12}else{if(x+3>=P)break;U[x++]=240|t1>>18,U[x++]=128|t1>>12&63}U[x++]=128|t1>>6&63}U[x++]=128|t1&63}}U[x]=0}},D1={},O1=g=>{for(;g.length;){var x=g.pop();g.pop()(x)}};function Q1(g){return this.fromWireType(w[g>>2])}var F={},M={},j={},i1,$=(g,x,P)=>{function U(d1){if(d1=P(d1),d1.length!==g.length)throw new i1("Mismatched type converter count");for(var W1=0;W1<g.length;++W1)c1(g[W1],d1[W1])}g.forEach(d1=>j[d1]=x);var z=Array(x.length),t1=[],x1=0;x.forEach((d1,W1)=>{M.hasOwnProperty(d1)?z[W1]=M[d1]:(t1.push(d1),F.hasOwnProperty(d1)||(F[d1]=[]),F[d1].push(()=>{z[W1]=M[d1],++x1,x1===t1.length&&U(z)}))}),t1.length===0&&U(z)},q,h1=g=>{for(var x="";d[g];)x+=q[d[g++]];return x},k;function l1(g,x,P={}){var U=x.name;if(!g)throw new k(`type "${U}" must have a positive integer typeid pointer`);if(M.hasOwnProperty(g)){if(P.hb)return;throw new k(`Cannot register type '${U}' twice`)}M[g]=x,delete j[g],F.hasOwnProperty(g)&&(x=F[g],delete F[g],x.forEach(z=>z()))}function c1(g,x,P={}){return l1(g,x,P)}var w1=g=>{throw new k(g.Aa.Da.Ba.name+" instance already deleted")},A=!1,S=()=>{},N=(g,x,P)=>x===P?g:P.Ga===void 0?null:(g=N(g,x,P.Ga),g===null?null:P.$a(g)),Y={},o1={},K=(g,x)=>{if(x===void 0)throw new k("ptr should not be undefined");for(;g.Ga;)x=g.Qa(x),g=g.Ga;return o1[x]},A1=(g,x)=>{if(!x.Da||!x.Ca)throw new i1("makeClassHandle requires ptr and ptrType");if(!!x.Ha!=!!x.Fa)throw new i1("Both smartPtrType and smartPtr must be specified");return x.count={value:1},_1(Object.create(g,{Aa:{value:x,writable:!0}}))},_1=g=>typeof FinalizationRegistry>"u"?(_1=x=>x,g):(A=new FinalizationRegistry(x=>{x=x.Aa,--x.count.value,x.count.value===0&&(x.Fa?x.Ha.Ka(x.Fa):x.Da.Ba.Ka(x.Ca))}),_1=x=>{var P=x.Aa;return P.Fa&&A.register(x,{Aa:P},x),x},S=x=>{A.unregister(x)},_1(g));function P1(){}var I1=(g,x)=>Object.defineProperty(x,"name",{value:g}),g1=(g,x,P)=>{if(g[x].Ea===void 0){var U=g[x];g[x]=function(...z){if(!g[x].Ea.hasOwnProperty(z.length))throw new k(`Function '${P}' called with an invalid number of arguments (${z.length}) - expects one of (${g[x].Ea})!`);return g[x].Ea[z.length].apply(this,z)},g[x].Ea=[],g[x].Ea[U.Na]=U}},T1=(g,x,P)=>{if(i.hasOwnProperty(g)){if(P===void 0||i[g].Ea!==void 0&&i[g].Ea[P]!==void 0)throw new k(`Cannot register public name '${g}' twice`);if(g1(i,g,g),i[g].Ea.hasOwnProperty(P))throw new k(`Cannot register multiple overloads of a function with the same number of arguments (${P})!`);i[g].Ea[P]=x}else i[g]=x,i[g].Na=P},z1=g=>{g=g.replace(/[^a-zA-Z0-9_]/g,"$");var x=g.charCodeAt(0);return 48<=x&&57>=x?`_${g}`:g};function U1(g,x,P,U,z,t1,x1,d1){this.name=g,this.constructor=x,this.Ma=P,this.Ka=U,this.Ga=z,this.bb=t1,this.Qa=x1,this.$a=d1,this.jb=[]}var b1=(g,x,P)=>{for(;x!==P;){if(!x.Qa)throw new k(`Expected null or instance of ${P.name}, got an instance of ${x.name}`);g=x.Qa(g),x=x.Ga}return g};function e2(g,x){if(x===null){if(this.Ta)throw new k(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new k(`Cannot pass "${hn(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new k(`Cannot pass deleted object as a pointer of type ${this.name}`);return b1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function B(g,x){if(x===null){if(this.Ta)throw new k(`null is not a valid ${this.name}`);if(this.Sa){var P=this.Ua();return g!==null&&g.push(this.Ka,P),P}return 0}if(!x||!x.Aa)throw new k(`Cannot pass "${hn(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new k(`Cannot pass deleted object as a pointer of type ${this.name}`);if(!this.Ra&&x.Aa.Da.Ra)throw new k(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);if(P=b1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba),this.Sa){if(x.Aa.Fa===void 0)throw new k("Passing raw pointer to smart pointer is illegal");switch(this.ob){case 0:if(x.Aa.Ha===this)P=x.Aa.Fa;else throw new k(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);break;case 1:P=x.Aa.Fa;break;case 2:if(x.Aa.Ha===this)P=x.Aa.Fa;else{var U=x.clone();P=this.kb(P,Be(()=>U.delete())),g!==null&&g.push(this.Ka,P)}break;default:throw new k("Unsupporting sharing policy")}}return P}function y1(g,x){if(x===null){if(this.Ta)throw new k(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new k(`Cannot pass "${hn(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new k(`Cannot pass deleted object as a pointer of type ${this.name}`);if(x.Aa.Da.Ra)throw new k(`Cannot convert argument of type ${x.Aa.Da.name} to parameter type ${this.name}`);return b1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function S1(g,x,P,U,z,t1,x1,d1,W1,j1,$1){this.name=g,this.Ba=x,this.Ta=P,this.Ra=U,this.Sa=z,this.ib=t1,this.ob=x1,this.Ya=d1,this.Ua=W1,this.kb=j1,this.Ka=$1,z||x.Ga!==void 0?this.toWireType=B:(this.toWireType=U?e2:y1,this.Ja=null)}var N1=(g,x,P)=>{if(!i.hasOwnProperty(g))throw new i1("Replacing nonexistent public symbol");i[g].Ea!==void 0&&P!==void 0?i[g].Ea[P]=x:(i[g]=x,i[g].Na=P)},m1,f1=(g,x,P=[])=>(g.includes("j")?(g=g.replace(/p/g,"i"),x=(0,i["dynCall_"+g])(x,...P)):x=m1.get(x)(...P),x),H1=(g,x)=>(...P)=>f1(g,x,P),G1=(g,x)=>{g=h1(g);var P=g.includes("j")?H1(g,x):m1.get(x);if(typeof P!="function")throw new k(`unknown function pointer with signature ${g}: ${x}`);return P},S2,d2=g=>{g=Z2(g);var x=h1(g);return O2(g),x},E3=(g,x)=>{function P(t1){z[t1]||M[t1]||(j[t1]?j[t1].forEach(P):(U.push(t1),z[t1]=!0))}var U=[],z={};throw x.forEach(P),new S2(`${g}: `+U.map(d2).join([", "]))},b3=(g,x)=>{for(var P=[],U=0;U<g;U++)P.push(w[x+4*U>>2]);return P};function li(g){for(var x=1;x<g.length;++x)if(g[x]!==null&&g[x].Ja===void 0)return!0;return!1}function oe(g,x,P,U,z){var t1=x.length;if(2>t1)throw new k("argTypes array size mismatch! Must at least get return value and 'this' types!");var x1=x[1]!==null&&P!==null,d1=li(x),W1=x[0].name!=="void",j1=t1-2,$1=Array(j1),p2=[],w2=[];return I1(g,function(...U3){if(w2.length=0,p2.length=x1?2:1,p2[0]=z,x1){var H2=x[1].toWireType(w2,this);p2[1]=H2}for(var G2=0;G2<j1;++G2)$1[G2]=x[G2+2].toWireType(w2,U3[G2]),p2.push($1[G2]);if(U3=U(...p2),d1)O1(w2);else for(G2=x1?1:2;G2<x.length;G2++){var le=G2===1?H2:$1[G2-2];x[G2].Ja!==null&&x[G2].Ja(le)}return H2=W1?x[0].fromWireType(U3):void 0,H2})}var h0=g=>{g=g.trim();let x=g.indexOf("(");return x!==-1?g.substr(0,x):g},f0=[],Y3=[],st=g=>{9<g&&--Y3[g+1]===0&&(Y3[g]=void 0,f0.push(g))},Ne=g=>{if(!g)throw new k("Cannot use deleted val. handle = "+g);return Y3[g]},Be=g=>{switch(g){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let x=f0.pop()||Y3.length;return Y3[x]=g,Y3[x+1]=1,x}},un={name:"emscripten::val",fromWireType:g=>{var x=Ne(g);return st(g),x},toWireType:(g,x)=>Be(x),Ia:8,readValueFromPointer:Q1,Ja:null},ci=(g,x,P)=>{switch(x){case 1:return P?function(U){return this.fromWireType(m[U])}:function(U){return this.fromWireType(d[U])};case 2:return P?function(U){return this.fromWireType(b[U>>1])}:function(U){return this.fromWireType(T[U>>1])};case 4:return P?function(U){return this.fromWireType(y[U>>2])}:function(U){return this.fromWireType(w[U>>2])};default:throw new TypeError(`invalid integer width (${x}): ${g}`)}},d0=(g,x)=>{var P=M[g];if(P===void 0)throw g=`${x} has unknown type ${d2(g)}`,new k(g);return P},hn=g=>{if(g===null)return"null";var x=typeof g;return x==="object"||x==="array"||x==="function"?g.toString():""+g},Gr=(g,x)=>{switch(x){case 4:return function(P){return this.fromWireType(I[P>>2])};case 8:return function(P){return this.fromWireType(D[P>>3])};default:throw new TypeError(`invalid float width (${x}): ${g}`)}},Wr=(g,x,P)=>{switch(x){case 1:return P?U=>m[U]:U=>d[U];case 2:return P?U=>b[U>>1]:U=>T[U>>1];case 4:return P?U=>y[U>>2]:U=>w[U>>2];default:throw new TypeError(`invalid integer width (${x}): ${g}`)}},Xr=Object.assign({optional:!0},un),ui=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,R=(g,x)=>{for(var P=g>>1,U=P+x/2;!(P>=U)&&T[P];)++P;if(P<<=1,32<P-g&&ui)return ui.decode(d.subarray(g,P));for(P="",U=0;!(U>=x/2);++U){var z=b[g+2*U>>1];if(z==0)break;P+=String.fromCharCode(z)}return P},H=(g,x,P)=>{if(P??(P=2147483647),2>P)return 0;P-=2;var U=x;P=P<2*g.length?P/2:g.length;for(var z=0;z<P;++z)b[x>>1]=g.charCodeAt(z),x+=2;return b[x>>1]=0,x-U},n1=g=>2*g.length,r1=(g,x)=>{for(var P=0,U="";!(P>=x/4);){var z=y[g+4*P>>2];if(z==0)break;++P,65536<=z?(z-=65536,U+=String.fromCharCode(55296|z>>10,56320|z&1023)):U+=String.fromCharCode(z)}return U},W=(g,x,P)=>{if(P??(P=2147483647),4>P)return 0;var U=x;P=U+P-4;for(var z=0;z<g.length;++z){var t1=g.charCodeAt(z);if(55296<=t1&&57343>=t1){var x1=g.charCodeAt(++z);t1=65536+((t1&1023)<<10)|x1&1023}if(y[x>>2]=t1,x+=4,x+4>P)break}return y[x>>2]=0,x-U},v1=g=>{for(var x=0,P=0;P<g.length;++P){var U=g.charCodeAt(P);55296<=U&&57343>=U&&++P,x+=4}return x},C1=0,k1=(g,x,P)=>{var U=[];return g=g.toWireType(U,P),U.length&&(w[x>>2]=Be(U)),g},F1=[],Y1=g=>{var x=F1.length;return F1.push(g),x},K1=(g,x)=>{for(var P=Array(g),U=0;U<g;++U)P[U]=d0(w[x+4*U>>2],"parameter "+U);return P},X1=Reflect.construct,i2={},g2=g=>{if(!(g instanceof L1||g=="unwind"))throw g},P2=g=>{throw _=g,l2||0<C1||(i.onExit?.(g),v=!0),new L1(g)},b2=g=>{if(!v)try{if(g(),!(l2||0<C1))try{_=g=_,P2(g)}catch(x){g2(x)}}catch(x){g2(x)}},v2={},q1=()=>{if(!T2){var g={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"},x;for(x in v2)v2[x]===void 0?delete g[x]:g[x]=v2[x];var P=[];for(x in g)P.push(`${x}=${g[x]}`);T2=P}return T2},T2,f2=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return g=>crypto.getRandomValues(g);e1("initRandomDevice")},o3=g=>(o3=f2())(g);i1=i.InternalError=class extends Error{constructor(g){super(g),this.name="InternalError"}};for(var ze=Array(256),K2=0;256>K2;++K2)ze[K2]=String.fromCharCode(K2);q=ze,k=i.BindingError=class extends Error{constructor(g){super(g),this.name="BindingError"}},Object.assign(P1.prototype,{isAliasOf:function(g){if(!(this instanceof P1&&g instanceof P1))return!1;var x=this.Aa.Da.Ba,P=this.Aa.Ca;g.Aa=g.Aa;var U=g.Aa.Da.Ba;for(g=g.Aa.Ca;x.Ga;)P=x.Qa(P),x=x.Ga;for(;U.Ga;)g=U.Qa(g),U=U.Ga;return x===U&&P===g},clone:function(){if(this.Aa.Ca||w1(this),this.Aa.Pa)return this.Aa.count.value+=1,this;var g=_1,x=Object,P=x.create,U=Object.getPrototypeOf(this),z=this.Aa;return g=g(P.call(x,U,{Aa:{value:{count:z.count,Oa:z.Oa,Pa:z.Pa,Ca:z.Ca,Da:z.Da,Fa:z.Fa,Ha:z.Ha}}})),g.Aa.count.value+=1,g.Aa.Oa=!1,g},delete(){if(this.Aa.Ca||w1(this),this.Aa.Oa&&!this.Aa.Pa)throw new k("Object already scheduled for deletion");S(this);var g=this.Aa;--g.count.value,g.count.value===0&&(g.Fa?g.Ha.Ka(g.Fa):g.Da.Ba.Ka(g.Ca)),this.Aa.Pa||(this.Aa.Fa=void 0,this.Aa.Ca=void 0)},isDeleted:function(){return!this.Aa.Ca},deleteLater:function(){if(this.Aa.Ca||w1(this),this.Aa.Oa&&!this.Aa.Pa)throw new k("Object already scheduled for deletion");return this.Aa.Oa=!0,this}}),Object.assign(S1.prototype,{cb(g){return this.Ya&&(g=this.Ya(g)),g},Wa(g){this.Ka?.(g)},Ia:8,readValueFromPointer:Q1,fromWireType:function(g){function x(){return this.Sa?A1(this.Ba.Ma,{Da:this.ib,Ca:P,Ha:this,Fa:g}):A1(this.Ba.Ma,{Da:this,Ca:g})}var P=this.cb(g);if(!P)return this.Wa(g),null;var U=K(this.Ba,P);if(U!==void 0)return U.Aa.count.value===0?(U.Aa.Ca=P,U.Aa.Fa=g,U.clone()):(U=U.clone(),this.Wa(g),U);if(U=this.Ba.bb(P),U=Y[U],!U)return x.call(this);U=this.Ra?U.Za:U.pointerType;var z=N(P,this.Ba,U.Ba);return z===null?x.call(this):this.Sa?A1(U.Ba.Ma,{Da:U,Ca:z,Ha:this,Fa:g}):A1(U.Ba.Ma,{Da:U,Ca:z})}}),S2=i.UnboundTypeError=((g,x)=>{var P=I1(x,function(U){this.name=x,this.message=U,U=Error(U).stack,U!==void 0&&(this.stack=this.toString()+`
`+U.replace(/^Error(:[^\n]*)?\n/,""))});return P.prototype=Object.create(g.prototype),P.prototype.constructor=P,P.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},P})(Error,"UnboundTypeError"),Y3.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>Y3.length/2-5-f0.length;var Dt={c:(g,x,P,U)=>e1(`Assertion failed: ${g?V1(g):""}, at: `+[x?x?V1(x):"":"unknown filename",P,U?U?V1(U):"":"unknown function"]),j:(g,x,P)=>{var U=new a1(g);throw w[U.Ca+16>>2]=0,w[U.Ca+4>>2]=x,w[U.Ca+8>>2]=P,u1=g,u1},P:()=>{},M:()=>{},N:()=>{},R:function(){},O:()=>{},T:()=>e1(""),w:g=>{var x=D1[g];delete D1[g];var P=x.Ua,U=x.Ka,z=x.Xa,t1=z.map(x1=>x1.gb).concat(z.map(x1=>x1.mb));$([g],t1,x1=>{var d1={};return z.forEach((W1,j1)=>{var $1=x1[j1],p2=W1.eb,w2=W1.fb,U3=x1[j1+z.length],H2=W1.lb,G2=W1.nb;d1[W1.ab]={read:le=>$1.fromWireType(p2(w2,le)),write:(le,fn)=>{var F3=[];H2(G2,le,U3.toWireType(F3,fn)),O1(F3)}}}),[{name:x.name,fromWireType:W1=>{var j1={},$1;for($1 in d1)j1[$1]=d1[$1].read(W1);return U(W1),j1},toWireType:(W1,j1)=>{for(var $1 in d1)if(!($1 in j1))throw new TypeError(`Missing field: "${$1}"`);var p2=P();for($1 in d1)d1[$1].write(p2,j1[$1]);return W1!==null&&W1.push(U,p2),p2},Ia:8,readValueFromPointer:Q1,Ja:U}]})},F:()=>{},_:(g,x,P,U)=>{x=h1(x),c1(g,{name:x,fromWireType:function(z){return!!z},toWireType:function(z,t1){return t1?P:U},Ia:8,readValueFromPointer:function(z){return this.fromWireType(d[z])},Ja:null})},m:(g,x,P,U,z,t1,x1,d1,W1,j1,$1,p2,w2)=>{$1=h1($1),t1=G1(z,t1),d1&&(d1=G1(x1,d1)),j1&&(j1=G1(W1,j1)),w2=G1(p2,w2);var U3=z1($1);T1(U3,function(){E3(`Cannot construct ${$1} due to unbound types`,[U])}),$([g,x,P],U?[U]:[],H2=>{if(H2=H2[0],U)var G2=H2.Ba,le=G2.Ma;else le=P1.prototype;H2=I1($1,function(...qr){if(Object.getPrototypeOf(this)!==fn)throw new k("Use 'new' to construct "+$1);if(F3.La===void 0)throw new k($1+" has no accessible constructor");var c4=F3.La[qr.length];if(c4===void 0)throw new k(`Tried to invoke ctor of ${$1} with invalid number of parameters (${qr.length}) - expected (${Object.keys(F3.La).toString()}) parameters instead!`);return c4.apply(this,qr)});var fn=Object.create(le,{constructor:{value:H2}});H2.prototype=fn;var F3=new U1($1,H2,fn,w2,G2,t1,d1,j1);if(F3.Ga){var dn;(dn=F3.Ga).Va??(dn.Va=[]),F3.Ga.Va.push(F3)}return G2=new S1($1,F3,!0,!1,!1),dn=new S1($1+"*",F3,!1,!1,!1),le=new S1($1+" const*",F3,!1,!0,!1),Y[g]={pointerType:dn,Za:le},N1(U3,H2),[G2,dn,le]})},r:(g,x,P,U,z,t1)=>{var x1=b3(x,P);z=G1(U,z),$([],[g],d1=>{d1=d1[0];var W1=`constructor ${d1.name}`;if(d1.Ba.La===void 0&&(d1.Ba.La=[]),d1.Ba.La[x-1]!==void 0)throw new k(`Cannot register multiple constructors with identical number of parameters (${x-1}) for class '${d1.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return d1.Ba.La[x-1]=()=>{E3(`Cannot construct ${d1.name} due to unbound types`,x1)},$([],x1,j1=>(j1.splice(1,0,null),d1.Ba.La[x-1]=oe(W1,j1,null,z,t1),[])),[]})},d:(g,x,P,U,z,t1,x1,d1)=>{var W1=b3(P,U);x=h1(x),x=h0(x),t1=G1(z,t1),$([],[g],j1=>{function $1(){E3(`Cannot call ${p2} due to unbound types`,W1)}j1=j1[0];var p2=`${j1.name}.${x}`;x.startsWith("@@")&&(x=Symbol[x.substring(2)]),d1&&j1.Ba.jb.push(x);var w2=j1.Ba.Ma,U3=w2[x];return U3===void 0||U3.Ea===void 0&&U3.className!==j1.name&&U3.Na===P-2?($1.Na=P-2,$1.className=j1.name,w2[x]=$1):(g1(w2,x,p2),w2[x].Ea[P-2]=$1),$([],W1,H2=>(H2=oe(p2,H2,j1,t1,x1),w2[x].Ea===void 0?(H2.Na=P-2,w2[x]=H2):w2[x].Ea[P-2]=H2,[])),[]})},Y:g=>c1(g,un),D:(g,x,P,U)=>{function z(){}x=h1(x),z.values={},c1(g,{name:x,constructor:z,fromWireType:function(t1){return this.constructor.values[t1]},toWireType:(t1,x1)=>x1.value,Ia:8,readValueFromPointer:ci(x,P,U),Ja:null}),T1(x,z)},l:(g,x,P)=>{var U=d0(g,"enum");x=h1(x),g=U.constructor,U=Object.create(U.constructor.prototype,{value:{value:P},constructor:{value:I1(`${U.name}_${x}`,function(){})}}),g.values[P]=U,g[x]=U},A:(g,x,P)=>{x=h1(x),c1(g,{name:x,fromWireType:U=>U,toWireType:(U,z)=>z,Ia:8,readValueFromPointer:Gr(x,P),Ja:null})},v:(g,x,P,U,z,t1)=>{var x1=b3(x,P);g=h1(g),g=h0(g),z=G1(U,z),T1(g,function(){E3(`Cannot call ${g} due to unbound types`,x1)},x-1),$([],x1,d1=>(N1(g,oe(g,[d1[0],null].concat(d1.slice(1)),null,z,t1),x-1),[]))},n:(g,x,P,U,z)=>{if(x=h1(x),z===-1&&(z=4294967295),z=d1=>d1,U===0){var t1=32-8*P;z=d1=>d1<<t1>>>t1}var x1=x.includes("unsigned")?function(d1,W1){return W1>>>0}:function(d1,W1){return W1};c1(g,{name:x,fromWireType:z,toWireType:x1,Ia:8,readValueFromPointer:Wr(x,P,U!==0),Ja:null})},g:(g,x,P)=>{function U(t1){return new z(m.buffer,w[t1+4>>2],w[t1>>2])}var z=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][x];P=h1(P),c1(g,{name:P,fromWireType:U,Ia:8,readValueFromPointer:U},{hb:!0})},q:g=>{c1(g,Xr)},u:(g,x,P,U,z,t1,x1,d1,W1,j1,$1,p2)=>{P=h1(P),t1=G1(z,t1),d1=G1(x1,d1),j1=G1(W1,j1),p2=G1($1,p2),$([g],[x],w2=>(w2=w2[0],[new S1(P,w2.Ba,!1,!1,!0,w2,U,t1,d1,j1,p2)]))},Z:(g,x)=>{x=h1(x),c1(g,{name:x,fromWireType:function(P){for(var U=w[P>>2],z=P+4,t1,x1=z,d1=0;d1<=U;++d1){var W1=z+d1;(d1==U||d[W1]==0)&&(x1=x1?V1(x1,W1-x1):"",t1===void 0?t1=x1:(t1+="\0",t1+=x1),x1=W1+1)}return O2(P),t1},toWireType:function(P,U){U instanceof ArrayBuffer&&(U=new Uint8Array(U));var z,t1=typeof U=="string";if(!(t1||U instanceof Uint8Array||U instanceof Uint8ClampedArray||U instanceof Int8Array))throw new k("Cannot pass non-string to std::string");if(t1)for(var x1=z=0;x1<U.length;++x1){var d1=U.charCodeAt(x1);127>=d1?z++:2047>=d1?z+=2:55296<=d1&&57343>=d1?(z+=4,++x1):z+=3}else z=U.length;if(x1=l3(4+z+1),d1=x1+4,w[x1>>2]=z,t1)M1(U,d1,z+1);else if(t1)for(t1=0;t1<z;++t1){var W1=U.charCodeAt(t1);if(255<W1)throw O2(d1),new k("String has UTF-16 code units that do not fit in 8 bits");d[d1+t1]=W1}else for(t1=0;t1<z;++t1)d[d1+t1]=U[t1];return P!==null&&P.push(O2,x1),x1},Ia:8,readValueFromPointer:Q1,Ja(P){O2(P)}})},y:(g,x,P)=>{if(P=h1(P),x===2)var U=R,z=H,t1=n1,x1=d1=>T[d1>>1];else x===4&&(U=r1,z=W,t1=v1,x1=d1=>w[d1>>2]);c1(g,{name:P,fromWireType:d1=>{for(var W1=w[d1>>2],j1,$1=d1+4,p2=0;p2<=W1;++p2){var w2=d1+4+p2*x;(p2==W1||x1(w2)==0)&&($1=U($1,w2-$1),j1===void 0?j1=$1:(j1+="\0",j1+=$1),$1=w2+x)}return O2(d1),j1},toWireType:(d1,W1)=>{if(typeof W1!="string")throw new k(`Cannot pass non-string to C++ string type ${P}`);var j1=t1(W1),$1=l3(4+j1+x);return w[$1>>2]=j1/x,z(W1,$1+4,j1+x),d1!==null&&d1.push(O2,$1),$1},Ia:8,readValueFromPointer:Q1,Ja(d1){O2(d1)}})},x:(g,x,P,U,z,t1)=>{D1[g]={name:h1(x),Ua:G1(P,U),Ka:G1(z,t1),Xa:[]}},i:(g,x,P,U,z,t1,x1,d1,W1,j1)=>{D1[g].Xa.push({ab:h1(x),gb:P,eb:G1(U,z),fb:t1,mb:x1,lb:G1(d1,W1),nb:j1})},$:(g,x)=>{x=h1(x),c1(g,{pb:!0,name:x,Ia:0,fromWireType:()=>{},toWireType:()=>{}})},K:()=>{l2=!1,C1=0},I:()=>{throw 1/0},C:(g,x,P)=>(g=Ne(g),x=d0(x,"emval::as"),k1(x,P,g)),p:(g,x,P,U)=>(g=F1[g],x=Ne(x),g(null,x,P,U)),W:st,E:(g,x)=>(g=Ne(g),x=Ne(x),g==x),o:(g,x,P)=>{var U=K1(g,x),z=U.shift();g--;var t1=Array(g);return x=`methodCaller<(${U.map(x1=>x1.name).join(", ")}) => ${z.name}>`,Y1(I1(x,(x1,d1,W1,j1)=>{for(var $1=0,p2=0;p2<g;++p2)t1[p2]=U[p2].readValueFromPointer(j1+$1),$1+=U[p2].Ia;return x1=P===1?X1(d1,t1):d1.apply(x1,t1),k1(z,W1,x1)}))},z:g=>{9<g&&(Y3[g+1]+=1)},ca:g=>{var x=Ne(g);O1(x),st(g)},t:(g,x)=>(g=d0(g,"_emval_take_value"),g=g.readValueFromPointer(x),Be(g)),G:(g,x)=>{if(i2[g]&&(clearTimeout(i2[g].id),delete i2[g]),!x)return 0;var P=setTimeout(()=>{delete i2[g],b2(()=>n3(g,performance.now()))},x);return i2[g]={id:P,qb:x},0},H:(g,x,P,U)=>{var z=new Date().getFullYear(),t1=new Date(z,0,1).getTimezoneOffset();z=new Date(z,6,1).getTimezoneOffset(),w[g>>2]=60*Math.max(t1,z),y[x>>2]=+(t1!=z),x=x1=>{var d1=Math.abs(x1);return`UTC${0<=x1?"-":"+"}${String(Math.floor(d1/60)).padStart(2,"0")}${String(d1%60).padStart(2,"0")}`},g=x(t1),x=x(z),z<t1?(M1(g,P,17),M1(x,U,17)):(M1(g,U,17),M1(x,P,17))},ba:()=>performance.now(),J:g=>{var x=d.length;if(g>>>=0,2147483648<g)return!1;for(var P=1;4>=P;P*=2){var U=x*(1+.2/P);U=Math.min(U,g+100663296);e:{U=(Math.min(2147483648,65536*Math.ceil(Math.max(g,U)/65536))-p.buffer.byteLength+65535)/65536|0;try{p.grow(U),L();var z=1;break e}catch{}z=void 0}if(z)return!0}return!1},V:(g,x)=>{var P=0;return q1().forEach((U,z)=>{var t1=x+P;for(z=w[g+4*z>>2]=t1,t1=0;t1<U.length;++t1)m[z++]=U.charCodeAt(t1);m[z]=0,P+=U.length+1}),0},X:(g,x)=>{var P=q1();w[g>>2]=P.length;var U=0;return P.forEach(z=>U+=z.length+1),w[x>>2]=U,0},S:()=>52,Q:()=>52,k:Q6,f:i5,e:a5,B:e5,aa:s5,a:t5,b:r5,h:n5,s:o5,U:P2,L:(g,x)=>(o3(d.subarray(g,g+x)),0)},Z1;(async function(){function g(U){return Z1=U.exports,p=Z1.da,L(),m1=Z1.ga,C.unshift(Z1.ea),X--,i.monitorRunDependencies?.(X),X==0&&s1&&(U=s1,s1=null,U()),Z1}X++,i.monitorRunDependencies?.(X);var x={a:Dt};if(i.instantiateWasm)try{return i.instantiateWasm(x,g)}catch(U){h(`Module.instantiateWasm callback failed with error: ${U}`),s(U)}Q??(Q=Z("DotLottiePlayer.wasm")?"DotLottiePlayer.wasm":i.locateFile?i.locateFile("DotLottiePlayer.wasm",c):c+"DotLottiePlayer.wasm");try{var P=await E1(x);return g(P.instance),P}catch(U){s(U)}})();var l3=g=>(l3=Z1.fa)(g),O2=g=>(O2=Z1.ha)(g),Z2=g=>(Z2=Z1.ia)(g),n3=(g,x)=>(n3=Z1.ja)(g,x),T3=(g,x)=>(T3=Z1.ka)(g,x),J2=g=>(J2=Z1.la)(g),Me=()=>(Me=Z1.ma)();i.dynCall_jiii=(g,x,P,U)=>(i.dynCall_jiii=Z1.na)(g,x,P,U),i.dynCall_jii=(g,x,P)=>(i.dynCall_jii=Z1.oa)(g,x,P),i.dynCall_vjii=(g,x,P,U,z)=>(i.dynCall_vjii=Z1.pa)(g,x,P,U,z),i.dynCall_vjfii=(g,x,P,U,z,t1)=>(i.dynCall_vjfii=Z1.qa)(g,x,P,U,z,t1),i.dynCall_vjiii=(g,x,P,U,z,t1)=>(i.dynCall_vjiii=Z1.ra)(g,x,P,U,z,t1),i.dynCall_vj=(g,x,P)=>(i.dynCall_vj=Z1.sa)(g,x,P),i.dynCall_vjiiiii=(g,x,P,U,z,t1,x1,d1)=>(i.dynCall_vjiiiii=Z1.ta)(g,x,P,U,z,t1,x1,d1),i.dynCall_vjiffii=(g,x,P,U,z,t1,x1,d1)=>(i.dynCall_vjiffii=Z1.ua)(g,x,P,U,z,t1,x1,d1),i.dynCall_vjiiii=(g,x,P,U,z,t1,x1)=>(i.dynCall_vjiiii=Z1.va)(g,x,P,U,z,t1,x1),i.dynCall_viijii=(g,x,P,U,z,t1,x1)=>(i.dynCall_viijii=Z1.wa)(g,x,P,U,z,t1,x1),i.dynCall_iiiiij=(g,x,P,U,z,t1,x1)=>(i.dynCall_iiiiij=Z1.xa)(g,x,P,U,z,t1,x1),i.dynCall_iiiiijj=(g,x,P,U,z,t1,x1,d1,W1)=>(i.dynCall_iiiiijj=Z1.ya)(g,x,P,U,z,t1,x1,d1,W1),i.dynCall_iiiiiijj=(g,x,P,U,z,t1,x1,d1,W1,j1)=>(i.dynCall_iiiiiijj=Z1.za)(g,x,P,U,z,t1,x1,d1,W1,j1);function Q6(g,x){var P=Me();try{return m1.get(g)(x)}catch(U){if(J2(P),U!==U+0)throw U;T3(1,0)}}function e5(g,x,P,U,z,t1){var x1=Me();try{return m1.get(g)(x,P,U,z,t1)}catch(d1){if(J2(x1),d1!==d1+0)throw d1;T3(1,0)}}function t5(g,x){var P=Me();try{m1.get(g)(x)}catch(U){if(J2(P),U!==U+0)throw U;T3(1,0)}}function n5(g,x,P,U){var z=Me();try{m1.get(g)(x,P,U)}catch(t1){if(J2(z),t1!==t1+0)throw t1;T3(1,0)}}function i5(g,x,P){var U=Me();try{return m1.get(g)(x,P)}catch(z){if(J2(U),z!==z+0)throw z;T3(1,0)}}function r5(g,x,P){var U=Me();try{m1.get(g)(x,P)}catch(z){if(J2(U),z!==z+0)throw z;T3(1,0)}}function s5(g){var x=Me();try{m1.get(g)()}catch(P){if(J2(x),P!==P+0)throw P;T3(1,0)}}function a5(g,x,P,U){var z=Me();try{return m1.get(g)(x,P,U)}catch(t1){if(J2(z),t1!==t1+0)throw t1;T3(1,0)}}function o5(g,x,P,U,z){var t1=Me();try{m1.get(g)(x,P,U,z)}catch(x1){if(J2(t1),x1!==x1+0)throw x1;T3(1,0)}}var hi;s1=function g(){hi||l4(),hi||(s1=g)};function l4(){function g(){if(!hi&&(hi=!0,i.calledRun=!0,!v)){if(B1(C),r(i),i.onRuntimeInitialized?.(),i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;){var x=i.postRun.shift();O.unshift(x)}B1(O)}}if(!(0<X)){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)G();B1(E),0<X||(i.setStatus?(i.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>i.setStatus(""),1),g()},1)):g())}}if(i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return l4(),t=a,t}})(),vg=gg,br=class{constructor(){throw new Error("RendererLoader is a static class and cannot be instantiated.")}static async _tryLoad(n){return await vg({locateFile:()=>n})}static async _loadWithBackup(){return this._ModulePromise||(this._ModulePromise=this._tryLoad(this._wasmURL).catch(async n=>{let e=`https://unpkg.com/${j6}@${Y6}/dist/dotlottie-player.wasm`;console.warn(`Primary WASM load failed from ${this._wasmURL}. Error: ${n.message}`),console.warn(`Attempting to load WASM from backup URL: ${e}`);try{return await this._tryLoad(e)}catch(t){throw console.error(`Primary WASM URL failed: ${n.message}`),console.error(`Backup WASM URL failed: ${t.message}`),new Error("WASM loading failed from all sources.")}})),this._ModulePromise}static async load(){return this._loadWithBackup()}static setWasmUrl(n){n!==this._wasmURL&&(this._wasmURL=n,this._ModulePromise=null)}};J1(br,"_ModulePromise",null),J1(br,"_wasmURL",`https://cdn.jsdelivr.net/npm/${j6}@${Y6}/dist/dotlottie-player.wasm`);var K6=class{constructor(){J1(this,"_eventListeners",new Map)}addEventListener(n,e){let t=this._eventListeners.get(n);t||(t=new Set,this._eventListeners.set(n,t)),t.add(e)}removeEventListener(n,e){let t=this._eventListeners.get(n);t&&(e?(t.delete(e),t.size===0&&this._eventListeners.delete(n)):this._eventListeners.delete(n))}dispatch(n){this._eventListeners.get(n.type)?.forEach(e=>e(n))}removeAllEventListeners(){this._eventListeners.clear()}},pe=class{static _initializeObserver(){if(this._observer)return;let n=e=>{e.forEach(t=>{let i=this._observedCanvases.get(t.target);i&&(t.isIntersecting?i.unfreeze():i.freeze())})};this._observer=new IntersectionObserver(n,{threshold:0})}static observe(n,e){this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,e),this._observer?.observe(n))}static unobserve(n){this._observer?.unobserve(n),this._observedCanvases.delete(n),this._observedCanvases.size===0&&(this._observer?.disconnect(),this._observer=null)}};J1(pe,"_observer",null),J1(pe,"_observedCanvases",new Map);var me=class{static _initializeObserver(){if(this._observer)return;let n=e=>{e.forEach(t=>{let i=this._observedCanvases.get(t.target);if(!i)return;let[r,s]=i;clearTimeout(s);let a=setTimeout(()=>{r.resize()},100);this._observedCanvases.set(t.target,[r,a])})};this._observer=new ResizeObserver(n)}static observe(n,e){this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,[e,0]),this._observer?.observe(n))}static unobserve(n){let e=this._observedCanvases.get(n);if(e){let t=e[1];t&&clearTimeout(t)}this._observer?.unobserve(n),this._observedCanvases.delete(n),!this._observedCanvases.size&&this._observer&&(this._observer.disconnect(),this._observer=null)}};J1(me,"_observer",null),J1(me,"_observedCanvases",new Map);function xg(n){return/^#([\da-f]{6}|[\da-f]{8})$/iu.test(n)}function yg(n){if(!xg(n))return 0;let e=n.replace("#","");return e=e.length===6?`${e}ff`:e,parseInt(e,16)}function tl(n){if(n.byteLength<4)return!1;let e=new Uint8Array(n.slice(0,qs.byteLength));for(let t=0;t<qs.length;t+=1)if(qs[t]!==e[t])return!1;return!0}function nl(n){return pg.every(e=>Object.prototype.hasOwnProperty.call(n,e))}function il(n){if(typeof n=="string")try{return nl(JSON.parse(n))}catch{return!1}else return nl(n)}function Zt(){return 1+((e3?window.devicePixelRatio:1)-1)*mg}function X0(n){let e=n.getBoundingClientRect(),t=window.innerHeight||document.documentElement.clientHeight,i=window.innerWidth||document.documentElement.clientWidth;return!(e.bottom<0||e.top>t||e.right<0||e.left>i)}function Q3(n){let e=n.target;if(e instanceof HTMLCanvasElement){let t=e.getBoundingClientRect();if(t.width===0||t.height===0||e.width===0||e.height===0)return null;let i=e.width/t.width,r=e.height/t.height,s=(n.clientX-t.left)*i,a=(n.clientY-t.top)*r;return!Number.isFinite(s)||!Number.isFinite(a)||Number.isNaN(s)||Number.isNaN(a)?null:{x:s,y:a}}return null}function Z6(n){let e=n.replace("OpenUrl: ",""),t=e.indexOf(" | Target: "),i,r;t===-1?(i=e,r="_blank"):(i=e.substring(0,t),r=e.substring(t+11)),window.open(i,r)}var $s=(n,e)=>n==="reverse"?e.Mode.Reverse:n==="bounce"?e.Mode.Bounce:n==="reverse-bounce"?e.Mode.ReverseBounce:e.Mode.Forward,Mg=(n,e)=>n==="contain"?e.Fit.Contain:n==="cover"?e.Fit.Cover:n==="fill"?e.Fit.Fill:n==="fit-height"?e.Fit.FitHeight:n==="fit-width"?e.Fit.FitWidth:e.Fit.None,Sg=(n,e)=>{let t=new e.VectorFloat;return t.push_back(n[0]),t.push_back(n[1]),t},Ys=(n,e)=>{let t=new e.VectorFloat;return n.length!==2||(t.push_back(n[0]),t.push_back(n[1])),t},js=(n,e)=>n?{align:Sg(n.align??[.5,.5],e),fit:Mg(n.fit??"contain",e)}:e.createDefaultLayout(),J6=class c2{constructor(e){J1(this,"_canvas"),J1(this,"_context",null),J1(this,"_eventManager"),J1(this,"_animationFrameId",null),J1(this,"_frameManager"),J1(this,"_dotLottieCore",null),J1(this,"_stateMachineId",""),J1(this,"_stateMachineConfig",null),J1(this,"_isStateMachineRunning",!1),J1(this,"_stateMachineObserverHandle",null),J1(this,"_stateMachineInternalMessageObserver",null),J1(this,"_dotLottieObserverHandle",null),J1(this,"_renderConfig",{}),J1(this,"_isFrozen",!1),J1(this,"_backgroundColor",null),J1(this,"_boundOnClick",null),J1(this,"_boundOnPointerUp",null),J1(this,"_boundOnPointerDown",null),J1(this,"_boundOnPointerMove",null),J1(this,"_boundOnPointerEnter",null),J1(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._eventManager=new K6,this._frameManager=new dg,this._renderConfig={...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||Zt(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0},br.load().then(t=>{c2._wasmModule=t;let i=new t.CallbackObserver;i.setOnLoad(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"load"})},0)}),i.setOnLoadError(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"loadError",error:new Error("failed to load")})},0)}),i.setOnPlay(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"play"})},0)}),i.setOnPause(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"pause"})},0)}),i.setOnStop(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"stop"})},0)}),i.setOnLoop(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"loop",loopCount:r})},0)}),i.setOnComplete(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"complete"})},0)}),i.setOnFrame(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:r})},0)}),i.setOnRender(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"render",currentFrame:r})},0)}),this._dotLottieCore=new t.DotLottiePlayer({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,loopCount:e.loopCount??0,mode:$s(e.mode??"forward",t),segment:Ys(e.segment??[],t),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:js(e.layout,t)}),this._stateMachineId=e.stateMachineId??"",this._stateMachineConfig=e.stateMachineConfig??null,this._dotLottieObserverHandle=this._dotLottieCore.subscribe(i),this._eventManager.dispatch({type:"ready"}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),e.backgroundColor&&this.setBackgroundColor(e.backgroundColor)}).catch(t=>{this._eventManager.dispatch({type:"loadError",error:new Error(`Failed to load wasm module: ${t}`)})})}_dispatchError(e){console.error(e),this._eventManager.dispatch({type:"loadError",error:new Error(e)})}async _fetchData(e){let t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch animation data from URL: ${e}. ${t.status}: ${t.statusText}`);let i=await t.arrayBuffer();return tl(i)?i:new TextDecoder().decode(i)}_loadFromData(e){if(this._dotLottieCore===null)return;let t=this._canvas.width,i=this._canvas.height,r=!1;if(typeof e=="string"){if(!il(e)){this._dispatchError("Invalid Lottie JSON string: The provided string does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(e,t,i)}else if(e instanceof ArrayBuffer){if(!tl(e)){this._dispatchError("Invalid dotLottie ArrayBuffer: The provided ArrayBuffer does not conform to the dotLottie format.");return}r=this._dotLottieCore.loadDotLottieData(e,t,i)}else if(typeof e=="object"){if(!il(e)){this._dispatchError("Invalid Lottie JSON object: The provided object does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(JSON.stringify(e),t,i)}else{this._dispatchError(`Unsupported data type for animation data. Expected: 
          - string (Lottie JSON),
          - ArrayBuffer (dotLottie),
          - object (Lottie JSON). 
          Received: ${typeof e}`);return}r&&(this._renderConfig.quality!==void 0&&this._dotLottieCore.setQuality(this._renderConfig.quality),e3&&this.resize(),setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame})},0),this._dotLottieCore.render(),this._draw(),this._stateMachineId?this.stateMachineLoad(this._stateMachineId)&&this.stateMachineStart()&&this._startAnimationLoop():this._dotLottieCore.isPlaying()&&this._startAnimationLoop(),e3&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.freezeOnOffscreen&&(pe.observe(this._canvas,this),X0(this._canvas)||this.freeze()),this._renderConfig.autoResize&&me.observe(this._canvas,this)))}_loadFromSrc(e){this._fetchData(e).then(t=>this._loadFromData(t)).catch(t=>this._dispatchError(`Failed to load animation data from URL: ${e}. ${t}`))}get buffer(){return this._dotLottieCore?this._dotLottieCore.buffer():null}get activeAnimationId(){return this._dotLottieCore?.activeAnimationId()}get activeThemeId(){return this._dotLottieCore?.activeThemeId()}get layout(){let e=this._dotLottieCore?.config().layout;if(e)return{align:[e.align.get(0),e.align.get(1)],fit:(()=>{switch(e.fit){case c2._wasmModule?.Fit.Contain:return"contain";case c2._wasmModule?.Fit.Cover:return"cover";case c2._wasmModule?.Fit.Fill:return"fill";case c2._wasmModule?.Fit.FitHeight:return"fit-height";case c2._wasmModule?.Fit.FitWidth:return"fit-width";case c2._wasmModule?.Fit.None:return"none";default:return"contain"}})()}}get marker(){return this._dotLottieCore?.config().marker}get manifest(){try{let e=this._dotLottieCore?.manifestString();if(this._dotLottieCore===null||!e)return null;let t=JSON.parse(e);return Object.keys(t).length===0?null:t}catch{return null}}get renderConfig(){return this._renderConfig}get segment(){let e=this._dotLottieCore?.config().segment;if(e&&e.size()===2)return[e.get(0),e.get(1)]}get loop(){return this._dotLottieCore?.config().loopAnimation??!1}get mode(){let e=this._dotLottieCore?.config().mode;return e===c2._wasmModule?.Mode.Reverse?"reverse":e===c2._wasmModule?.Mode.Bounce?"bounce":e===c2._wasmModule?.Mode.ReverseBounce?"reverse-bounce":"forward"}get isFrozen(){return this._isFrozen}get isStateMachineRunning(){return this._isStateMachineRunning}get backgroundColor(){return this._backgroundColor??""}get autoplay(){return this._dotLottieCore?.config().autoplay??!1}get useFrameInterpolation(){return this._dotLottieCore?.config().useFrameInterpolation??!1}get speed(){return this._dotLottieCore?.config().speed??0}get isReady(){return this._dotLottieCore!==null}get isLoaded(){return this._dotLottieCore?.isLoaded()??!1}get isPlaying(){return this._dotLottieCore?.isPlaying()??!1}get isPaused(){return this._dotLottieCore?.isPaused()??!1}get isStopped(){return this._dotLottieCore?.isStopped()??!1}get currentFrame(){return this._dotLottieCore?Math.round(this._dotLottieCore.currentFrame()*100)/100:0}get loopCount(){return this._dotLottieCore?.loopCount()??0}get totalFrames(){return this._dotLottieCore?.totalFrames()??0}get duration(){return this._dotLottieCore?.duration()??0}get segmentDuration(){return this._dotLottieCore?.segmentDuration()??0}get canvas(){return this._canvas}load(e){this._dotLottieCore===null||c2._wasmModule===null||(this._stopAnimationLoop(),e3&&this._canvas instanceof HTMLCanvasElement&&(pe.unobserve(this._canvas),me.unobserve(this._canvas),this._cleanupStateMachineListeners()),this._isFrozen=!1,this._dotLottieCore.setConfig({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,loopCount:e.loopCount??0,mode:$s(e.mode??"forward",c2._wasmModule),segment:Ys(e.segment??[],c2._wasmModule),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:js(e.layout,c2._wasmModule)}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),this.setBackgroundColor(e.backgroundColor??""))}_draw(){if(this._dotLottieCore!==null&&(!this._context&&"getContext"in this._canvas&&typeof this._canvas.getContext=="function"&&(this._context=this._canvas.getContext("2d")),this._context)){let e=this._dotLottieCore.buffer(),t=this._canvas.width*this._canvas.height*_g;if(e.byteLength!==t){console.warn(`Buffer size mismatch: got ${e.byteLength}, expected ${t}`);return}let i=null,r=new Uint8ClampedArray(e,0,e.byteLength);typeof ImageData>"u"?(i=this._context.createImageData(this._canvas.width,this._canvas.height),i.data.set(r)):i=new ImageData(r,this._canvas.width,this._canvas.height),this._context.putImageData(i,0,0)}}_stopAnimationLoop(){this._animationFrameId!==null&&(this._frameManager.cancelAnimationFrame(this._animationFrameId),this._animationFrameId=null)}_startAnimationLoop(){this._animationFrameId===null&&this._dotLottieCore&&!this._isFrozen&&(this._dotLottieCore.isPlaying()||this._isStateMachineRunning)&&(this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this)))}_animationLoop(){if(this._dotLottieCore===null){this._stopAnimationLoop();return}if(!this._dotLottieCore.isPlaying()&&!this._isStateMachineRunning){this._stopAnimationLoop();return}try{this._dotLottieCore.tick()&&this._draw(),this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this))}catch(e){console.error("Error in animation frame:",e),this._eventManager.dispatch({type:"renderError",error:e}),e instanceof WebAssembly.RuntimeError&&this.destroy()}}play(){this._dotLottieCore===null||!this.isLoaded||(this._stopAnimationLoop(),(this._dotLottieCore.play()||this._dotLottieCore.isPlaying())&&(this._isFrozen=!1,this._startAnimationLoop()),e3&&this._canvas instanceof HTMLCanvasElement&&this._renderConfig.freezeOnOffscreen&&!X0(this._canvas)&&this.freeze())}pause(){this._dotLottieCore!==null&&(this._dotLottieCore.pause(),this._stopAnimationLoop())}stop(){if(this._dotLottieCore===null)return;let e=this._dotLottieCore.stop();this._stopAnimationLoop(),e&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._dotLottieCore.render(),this._draw())}setFrame(e){this._dotLottieCore!==null&&this._dotLottieCore.seek(e)&&this._dotLottieCore.render()&&this._draw()}setSpeed(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),speed:e})}setBackgroundColor(e){this._dotLottieCore!==null&&(e3&&this._canvas instanceof HTMLCanvasElement?this._canvas.style.backgroundColor=e:this._dotLottieCore.setConfig({...this._dotLottieCore.config(),backgroundColor:yg(e)}),this._backgroundColor=e)}setLoop(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),loopAnimation:e})}setLoopCount(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),loopCount:e})}setUseFrameInterpolation(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),useFrameInterpolation:e})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}destroy(){this._stopAnimationLoop(),this._isStateMachineRunning=!1,e3&&this._canvas instanceof HTMLCanvasElement&&(pe.unobserve(this._canvas),me.unobserve(this._canvas)),this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null),this._dotLottieObserverHandle&&(this._dotLottieCore?.unsubscribe(this._dotLottieObserverHandle),this._dotLottieObserverHandle.delete(),this._dotLottieObserverHandle=null),this._dotLottieCore?.delete(),this._dotLottieCore=null,this._context=null,this._eventManager.dispatch({type:"destroy"}),this._eventManager.removeAllEventListeners(),this._cleanupStateMachineListeners()}freeze(){this._animationFrameId!==null&&(this._stopAnimationLoop(),this._isFrozen=!0,this._eventManager.dispatch({type:"freeze"}))}unfreeze(){this._animationFrameId===null&&(this._isFrozen=!1,this._eventManager.dispatch({type:"unfreeze"}),this._startAnimationLoop())}resize(){if(!(!this._dotLottieCore||!this.isLoaded)){if(e3&&this._canvas instanceof HTMLCanvasElement){let e=this._renderConfig.devicePixelRatio||window.devicePixelRatio||1,{height:t,width:i}=this._canvas.getBoundingClientRect();t!==0&&i!==0&&(this._canvas.width=i*e,this._canvas.height=t*e)}this._dotLottieCore.resize(this._canvas.width,this._canvas.height)&&this._draw()}}setTransform(e){if(!this._dotLottieCore||!c2._wasmModule)return!1;let t=new c2._wasmModule.VectorFloat;for(let r of e)t.push_back(r);let i=this._dotLottieCore.setTransform(t);return i&&this._dotLottieCore.render()&&this._draw(),i}getTransform(){if(!this._dotLottieCore)return;let e=[0,0,0,0,0,0,0,0,0],t=this._dotLottieCore.getTransform();for(let i=0;i<t.size();i+=1)e[i]=t.get(i);return e}setSegment(e,t){this._dotLottieCore===null||c2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),segment:Ys([e,t],c2._wasmModule)})}setMode(e){this._dotLottieCore===null||c2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),mode:$s(e,c2._wasmModule)})}setRenderConfig(e){let{devicePixelRatio:t,freezeOnOffscreen:i,quality:r,...s}=e;this._renderConfig={...this._renderConfig,...s,devicePixelRatio:t||Zt(),freezeOnOffscreen:i??!0,...r!==void 0&&{quality:r}},r!==void 0&&this._dotLottieCore&&this._dotLottieCore.setQuality(r),e3&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.autoResize?me.observe(this._canvas,this):me.unobserve(this._canvas),this._renderConfig.freezeOnOffscreen?(pe.observe(this._canvas,this),X0(this._canvas)||this.freeze()):(pe.unobserve(this._canvas),this._isFrozen&&this.unfreeze()))}loadAnimation(e){this._dotLottieCore===null||this._dotLottieCore.activeAnimationId()===e||this._dotLottieCore.loadAnimation(e,this._canvas.width,this._canvas.height)&&(this._renderConfig.quality!==void 0&&this._dotLottieCore.setQuality(this._renderConfig.quality),this.resize())}setMarker(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),marker:e})}markers(){let e=this._dotLottieCore?.markers();if(e){let t=[];for(let i=0;i<e.size();i+=1){let r=e.get(i);t.push({name:r.name,time:r.time,duration:r.duration})}return t}return[]}setTheme(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setTheme(e);return t&&(this._dotLottieCore.render(),this._draw()),t}resetTheme(){if(this._dotLottieCore===null)return!1;let e=this._dotLottieCore.resetTheme();return e&&(this._dotLottieCore.render(),this._draw()),e}setThemeData(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setThemeData(e);return t&&(this._dotLottieCore.render(),this._draw()),t}setSlots(e){this._dotLottieCore!==null&&this._dotLottieCore.setSlots(e)&&(this._dotLottieCore.render(),this._draw())}setLayout(e){this._dotLottieCore===null||c2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),layout:js(e,c2._wasmModule)})}setViewport(e,t,i,r){return this._dotLottieCore===null?!1:this._dotLottieCore.setViewport(e,t,i,r)}static setWasmUrl(e){br.setWasmUrl(e)}tween(e,t){if(!c2._wasmModule)return!1;let i=[0,0,1,1],r=new c2._wasmModule.VectorFloat;for(let s of i)r.push_back(s);return this._dotLottieCore?.tween(e,t,r)??!1}tweenToMarker(e,t){if(!c2._wasmModule)return!1;let i=[0,0,1,1],r=new c2._wasmModule.VectorFloat;for(let s of i)r.push_back(s);return this._dotLottieCore?.tweenToMarker(e,t,r)??!1}animationSize(){let e=this._dotLottieCore?.animationSize().get(0)??0,t=this._dotLottieCore?.animationSize().get(1)??0;return{width:e,height:t}}getLayerBoundingBox(e){let t=this._dotLottieCore?.getLayerBounds(e);if(!t||t.size()!==8)return;let i=[];for(let r=0;r<8;r+=1)i.push(t.get(r));return i}static transformThemeToLottieSlots(e,t){return c2._wasmModule?.transformThemeToLottieSlots(e,t)??""}_setupStateMachineObservers(){if(!this._dotLottieCore||!c2._wasmModule)return;let e=new c2._wasmModule.CallbackStateMachineObserver;e.setOnStart(()=>{setTimeout(()=>{this._isStateMachineRunning=!0,this._eventManager.dispatch({type:"stateMachineStart"}),this._startAnimationLoop()},0)}),e.setOnStop(()=>{setTimeout(()=>{this._isStateMachineRunning=!1,this._eventManager.dispatch({type:"stateMachineStop"}),this._dotLottieCore?.isPlaying()||this._stopAnimationLoop()},0)}),e.setOnCustomEvent(i=>{this._eventManager.dispatch({type:"stateMachineCustomEvent",eventName:i})}),e.setOnBooleanInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineBooleanInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnNumericInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineNumericInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnStringInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineStringInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnInputFired(i=>{this._eventManager.dispatch({type:"stateMachineInputFired",inputName:i})}),e.setOnTransition((i,r)=>{this._eventManager.dispatch({type:"stateMachineTransition",fromState:i,toState:r})}),e.setOnStateEntered(i=>{this._eventManager.dispatch({type:"stateMachineStateEntered",state:i})}),e.setOnStateExit(i=>{this._eventManager.dispatch({type:"stateMachineStateExit",state:i})}),e.setOnError(i=>{this._eventManager.dispatch({type:"stateMachineError",error:i})});let t=new c2._wasmModule.CallbackStateMachineInternalObserver;t.setOnMessage(i=>{e3?i.startsWith("OpenUrl: ")&&Z6(i):this._eventManager.dispatch({type:"stateMachineInternalMessage",message:i})}),this._stateMachineObserverHandle=this._dotLottieCore.stateMachineSubscribe(e),this._stateMachineInternalMessageObserver=this._dotLottieCore.stateMachineInternalSubscribe(t)}_cleanupStateMachineObservers(){this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null)}stateMachineLoad(e){if(!this._dotLottieCore||!c2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoad(e);return t&&this._setupStateMachineObservers(),t}stateMachineLoadData(e){if(!this._dotLottieCore||!c2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoadData(e);return t&&this._setupStateMachineObservers(),t}stateMachineSetConfig(e){this._stateMachineConfig=e}stateMachineStart(){if(c2._wasmModule===null||this._dotLottieCore===null)return!1;let e=c2._wasmModule.createDefaultOpenUrlPolicy();if(this._stateMachineConfig){let i=this._stateMachineConfig.openUrlPolicy;if(i&&typeof i.requireUserInteraction=="boolean"&&(e.requireUserInteraction=i.requireUserInteraction),i?.whitelist){e.whitelist=new c2._wasmModule.VectorString;for(let r of i.whitelist)e.whitelist.push_back(r)}}let t=this._dotLottieCore.stateMachineStart(e);return t&&(this._isStateMachineRunning=!0,this._setupStateMachineListeners(),this._startAnimationLoop()),t}stateMachineStop(){if(!this._dotLottieCore)return!1;let e=this._dotLottieCore.stateMachineStop();return e&&(this._cleanupStateMachineObservers(),this._isStateMachineRunning=!1,this._cleanupStateMachineListeners(),this._dotLottieCore.isPlaying()||this._stopAnimationLoop()),e}stateMachineGetStatus(){return this._dotLottieCore?.stateMachineStatus()??""}stateMachineGetCurrentState(){return this._dotLottieCore?.stateMachineCurrentState()??""}stateMachineGetActiveId(){return this._dotLottieCore?.activeStateMachineId()??""}stateMachineOverrideState(e,t=!1){return this._dotLottieCore?.stateMachineOverrideCurrentState(e,t)??!1}stateMachineGet(e){return this._dotLottieCore?.getStateMachine(e)??""}stateMachineGetListeners(){if(!this._dotLottieCore)return[];let e=this._dotLottieCore.stateMachineFrameworkSetup(),t=[];for(let i=0;i<e.size();i+=1)t.push(e.get(i));return t}stateMachineSetBooleanInput(e,t){return this._dotLottieCore?.stateMachineSetBooleanInput(e,t)??!1}stateMachineSetNumericInput(e,t){return this._dotLottieCore?.stateMachineSetNumericInput(e,t)??!1}stateMachineSetStringInput(e,t){return this._dotLottieCore?.stateMachineSetStringInput(e,t)??!1}stateMachineGetBooleanInput(e){return this._dotLottieCore?.stateMachineGetBooleanInput(e)}stateMachineGetNumericInput(e){return this._dotLottieCore?.stateMachineGetNumericInput(e)}stateMachineGetStringInput(e){return this._dotLottieCore?.stateMachineGetStringInput(e)}stateMachineFireEvent(e){this._dotLottieCore?.stateMachineFireEvent(e)}stateMachinePostClickEvent(e,t){this._dotLottieCore?.stateMachinePostClickEvent(e,t)}stateMachinePostPointerUpEvent(e,t){this._dotLottieCore?.stateMachinePostPointerUpEvent(e,t)}stateMachinePostPointerDownEvent(e,t){this._dotLottieCore?.stateMachinePostPointerDownEvent(e,t)}stateMachinePostPointerMoveEvent(e,t){this._dotLottieCore?.stateMachinePostPointerMoveEvent(e,t)}stateMachinePostPointerEnterEvent(e,t){this._dotLottieCore?.stateMachinePostPointerEnterEvent(e,t)}stateMachinePostPointerExitEvent(e,t){this._dotLottieCore?.stateMachinePostPointerExitEvent(e,t)}_onClick(e){let t=Q3(e);t&&this.stateMachinePostClickEvent(t.x,t.y)}_onPointerUp(e){let t=Q3(e);t&&this.stateMachinePostPointerUpEvent(t.x,t.y)}_onPointerDown(e){let t=Q3(e);t&&this.stateMachinePostPointerDownEvent(t.x,t.y)}_onPointerMove(e){let t=Q3(e);t&&this.stateMachinePostPointerMoveEvent(t.x,t.y)}_onPointerEnter(e){let t=Q3(e);t&&this.stateMachinePostPointerEnterEvent(t.x,t.y)}_onPointerLeave(e){let t=Q3(e);t&&this.stateMachinePostPointerExitEvent(t.x,t.y)}_setupStateMachineListeners(){if(e3&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieCore!==null&&this.isLoaded){let e=this.stateMachineGetListeners();this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){e3&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};J1(J6,"_wasmModule",null);var Eg=J6,bg=class{constructor(){if(typeof Worker>"u")throw new Error("Worker is not supported in this environment.");let n=new Blob([new Uint8Array([34,117,115,101,32,115,116,114,105,99,116,34,59,10,40,40,41,32,61,62,32,123,10,32,32,118,97,114,32,95,95,100,101,102,80,114,111,112,32,61,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,59,10,32,32,118,97,114,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,107,101,121,32,105,110,32,111,98,106,32,63,32,95,95,100,101,102,80,114,111,112,40,111,98,106,44,32,107,101,121,44,32,123,32,101,110,117,109,101,114,97,98,108,101,58,32,116,114,117,101,44,32,99,111,110,102,105,103,117,114,97,98,108,101,58,32,116,114,117,101,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,44,32,118,97,108,117,101,32,125,41,32,58,32,111,98,106,91,107,101,121,93,32,61,32,118,97,108,117,101,59,10,32,32,118,97,114,32,95,95,112,117,98,108,105,99,70,105,101,108,100,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,111,98,106,44,32,116,121,112,101,111,102,32,107,101,121,32,33,61,61,32,34,115,121,109,98,111,108,34,32,63,32,107,101,121,32,43,32,34,34,32,58,32,107,101,121,44,32,118,97,108,117,101,41,59,10,10,32,32,47,47,32,115,114,99,47,97,110,105,109,97,116,105,111,110,45,102,114,97,109,101,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,72,97,110,100,108,101,73,100,34,44,32,48,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,73,109,109,101,100,105,97,116,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,62,61,32,78,117,109,98,101,114,46,77,65,88,95,83,65,70,69,95,73,78,84,69,71,69,82,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,61,32,48,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,43,61,32,49,59,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,32,61,32,115,101,116,73,109,109,101,100,105,97,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,40,68,97,116,101,46,110,111,119,40,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,95,105,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,32,123,10,32,32,32,32,32,32,32,32,99,108,101,97,114,73,109,109,101,100,105,97,116,101,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,114,97,116,101,103,121,34,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,32,61,32,116,121,112,101,111,102,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,32,63,32,110,101,119,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,32,58,32,110,101,119,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,99,111,110,115,116,97,110,116,115,46,116,115,10,32,32,118,97,114,32,73,83,95,66,82,79,87,83,69,82,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,38,38,32,116,121,112,101,111,102,32,119,105,110,100,111,119,46,100,111,99,117,109,101,110,116,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,59,10,32,32,118,97,114,32,90,73,80,95,83,73,71,78,65,84,85,82,69,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,91,56,48,44,32,55,53,44,32,51,44,32,52,93,41,59,10,32,32,118,97,114,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,32,61,32,91,34,118,34,44,32,34,105,112,34,44,32,34,111,112,34,44,32,34,108,97,121,101,114,115,34,44,32,34,102,114,34,44,32,34,119,34,44,32,34,104,34,93,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,32,61,32,34,48,46,53,52,46,49,34,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,78,65,77,69,32,61,32,34,64,108,111,116,116,105,101,102,105,108,101,115,47,100,111,116,108,111,116,116,105,101,45,119,101,98,34,59,10,32,32,118,97,114,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,32,61,32,48,46,55,53,59,10,32,32,118,97,114,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,32,61,32,52,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,106,115,10,32,32,118,97,114,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,32,61,32,40,40,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,95,115,99,114,105,112,116,78,97,109,101,32,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,33,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,63,46,115,114,99,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,109,111,100,117,108,101,65,114,103,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,118,97,114,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,32,32,118,97,114,32,104,32,61,32,109,111,100,117,108,101,65,114,103,44,32,97,97,44,32,98,97,44,32,99,97,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,98,97,32,61,32,98,59,10,32,32,32,32,32,32,125,41,44,32,102,97,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,125,44,32,104,41,44,32,104,97,32,61,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,44,32,112,32,61,32,34,34,44,32,105,97,59,10,32,32,32,32,32,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,38,38,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,32,38,38,32,40,112,32,61,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,46,115,114,99,41,59,10,32,32,32,32,32,32,95,115,99,114,105,112,116,78,97,109,101,32,38,38,32,40,112,32,61,32,95,115,99,114,105,112,116,78,97,109,101,41,59,10,32,32,32,32,32,32,112,46,115,116,97,114,116,115,87,105,116,104,40,34,98,108,111,98,58,34,41,32,63,32,112,32,61,32,34,34,32,58,32,112,32,61,32,112,46,115,117,98,115,116,114,40,48,44,32,112,46,114,101,112,108,97,99,101,40,47,91,63,35,93,46,42,47,44,32,34,34,41,46,108,97,115,116,73,110,100,101,120,79,102,40,34,47,34,41,32,43,32,49,41,59,10,32,32,32,32,32,32,105,97,32,61,32,97,115,121,110,99,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,97,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,46,111,107,41,32,114,101,116,117,114,110,32,97,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,69,114,114,111,114,40,97,46,115,116,97,116,117,115,32,43,32,34,32,58,32,34,32,43,32,97,46,117,114,108,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,118,97,114,32,116,32,61,32,104,46,112,114,105,110,116,69,114,114,32,124,124,32,99,111,110,115,111,108,101,46,101,114,114,111,114,46,98,105,110,100,40,99,111,110,115,111,108,101,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,104,44,32,102,97,41,59,10,32,32,32,32,32,32,102,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,104,46,116,104,105,115,80,114,111,103,114,97,109,32,38,38,32,40,104,97,32,61,32,104,46,116,104,105,115,80,114,111,103,114,97,109,41,59,10,32,32,32,32,32,32,118,97,114,32,106,97,32,61,32,104,46,119,97,115,109,66,105,110,97,114,121,44,32,107,97,44,32,108,97,32,61,32,102,97,108,115,101,44,32,109,97,44,32,117,44,32,120,44,32,121,44,32,122,44,32,67,44,32,68,44,32,110,97,44,32,111,97,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,112,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,107,97,46,98,117,102,102,101,114,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,56,32,61,32,117,32,61,32,110,101,119,32,73,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,49,54,32,61,32,121,32,61,32,110,101,119,32,73,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,56,32,61,32,120,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,49,54,32,61,32,122,32,61,32,110,101,119,32,85,105,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,51,50,32,61,32,67,32,61,32,110,101,119,32,73,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,51,50,32,61,32,68,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,51,50,32,61,32,110,97,32,61,32,110,101,119,32,70,108,111,97,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,54,52,32,61,32,111,97,32,61,32,110,101,119,32,70,108,111,97,116,54,52,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,113,97,32,61,32,91,93,44,32,114,97,32,61,32,91,93,44,32,115,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,116,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,104,46,112,114,101,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,113,97,46,117,110,115,104,105,102,116,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,70,32,61,32,48,44,32,71,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,117,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,104,46,111,110,65,98,111,114,116,63,46,40,97,41,59,10,32,32,32,32,32,32,32,32,97,32,61,32,34,65,98,111,114,116,101,100,40,34,32,43,32,97,32,43,32,34,41,34,59,10,32,32,32,32,32,32,32,32,116,40,97,41,59,10,32,32,32,32,32,32,32,32,108,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,97,32,61,32,110,101,119,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,40,97,32,43,32,34,46,32,66,117,105,108,100,32,119,105,116,104,32,45,115,65,83,83,69,82,84,73,79,78,83,32,102,111,114,32,109,111,114,101,32,105,110,102,111,46,34,41,59,10,32,32,32,32,32,32,32,32,98,97,40,97,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,118,97,32,61,32,40,97,41,32,61,62,32,97,46,115,116,97,114,116,115,87,105,116,104,40,34,100,97,116,97,58,97,112,112,108,105,99,97,116,105,111,110,47,111,99,116,101,116,45,115,116,114,101,97,109,59,98,97,115,101,54,52,44,34,41,44,32,119,97,59,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,120,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,119,97,105,116,32,105,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,97,32,61,61,32,119,97,32,38,38,32,106,97,41,32,97,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,106,97,41,59,10,32,32,32,32,32,32,32,32,101,108,115,101,32,116,104,114,111,119,32,34,98,111,116,104,32,97,115,121,110,99,32,97,110,100,32,115,121,110,99,32,102,101,116,99,104,105,110,103,32,111,102,32,116,104,101,32,119,97,115,109,32,102,97,105,108,101,100,34,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,121,97,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,120,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,40,99,44,32,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,40,96,102,97,105,108,101,100,32,116,111,32,97,115,121,110,99,104,114,111,110,111,117,115,108,121,32,112,114,101,112,97,114,101,32,119,97,115,109,58,32,36,123,100,125,96,41,44,32,117,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,122,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,119,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,32,38,38,32,33,118,97,40,98,41,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,102,101,116,99,104,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,102,101,116,99,104,40,98,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,40,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,119,97,115,109,32,115,116,114,101,97,109,105,110,103,32,99,111,109,112,105,108,101,32,102,97,105,108,101,100,58,32,36,123,100,125,96,41,44,32,116,40,34,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,65,114,114,97,121,66,117,102,102,101,114,32,105,110,115,116,97,110,116,105,97,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,121,97,40,98,44,32,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,108,97,115,115,32,65,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,110,97,109,101,34,44,32,34,69,120,105,116,83,116,97,116,117,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,96,80,114,111,103,114,97,109,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,101,120,105,116,40,36,123,97,125,41,96,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,117,115,32,61,32,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,66,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,48,32,60,32,97,46,108,101,110,103,116,104,59,32,41,32,97,46,115,104,105,102,116,40,41,40,104,41,59,10,32,32,32,32,32,32,125,44,32,67,97,32,61,32,104,46,110,111,69,120,105,116,82,117,110,116,105,109,101,32,124,124,32,116,114,117,101,44,32,68,97,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,32,58,32,118,111,105,100,32,48,44,32,69,97,32,61,32,40,97,32,61,32,48,44,32,98,32,61,32,78,97,78,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,120,44,32,100,32,61,32,97,32,43,32,98,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,61,32,97,59,32,99,91,98,93,32,38,38,32,33,40,98,32,62,61,32,100,41,59,32,41,32,43,43,98,59,10,32,32,32,32,32,32,32,32,105,102,32,40,49,54,32,60,32,98,32,45,32,97,32,38,38,32,99,46,98,117,102,102,101,114,32,38,38,32,68,97,41,32,114,101,116,117,114,110,32,68,97,46,100,101,99,111,100,101,40,99,46,115,117,98,97,114,114,97,121,40,97,44,32,98,41,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,34,34,59,32,97,32,60,32,98,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,99,91,97,43,43,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,38,32,49,50,56,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,57,50,32,61,61,32,40,101,32,38,32,50,50,52,41,41,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,40,101,32,38,32,51,49,41,32,60,60,32,54,32,124,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,50,50,52,32,61,61,32,40,101,32,38,32,50,52,48,41,32,63,32,40,101,32,38,32,49,53,41,32,60,60,32,49,50,32,124,32,102,32,60,60,32,54,32,124,32,107,32,58,32,40,101,32,38,32,55,41,32,60,60,32,49,56,32,124,32,102,32,60,60,32,49,50,32,124,32,107,32,60,60,32,54,32,124,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,62,32,101,32,63,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,32,58,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,99,108,97,115,115,32,70,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,67,97,32,61,32,97,32,45,32,50,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,71,97,32,61,32,48,44,32,72,97,32,61,32,48,44,32,72,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,120,59,10,32,32,32,32,32,32,32,32,105,102,32,40,48,32,60,32,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,32,43,32,99,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,50,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,48,52,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,49,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,57,50,32,124,32,102,32,62,62,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,54,53,53,51,53,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,50,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,50,52,32,124,32,102,32,62,62,32,49,50,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,51,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,52,48,32,124,32,102,32,62,62,32,49,56,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,49,50,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,54,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,91,98,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,73,97,32,61,32,123,125,44,32,74,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,112,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,112,111,112,40,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,73,40,97,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,97,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,74,32,61,32,123,125,44,32,75,32,61,32,123,125,44,32,75,97,32,61,32,123,125,44,32,76,44,32,78,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,99,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,46,108,101,110,103,116,104,32,33,61,61,32,97,46,108,101,110,103,116,104,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,77,105,115,109,97,116,99,104,101,100,32,116,121,112,101,32,99,111,110,118,101,114,116,101,114,32,99,111,117,110,116,34,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,48,59,32,108,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,108,41,32,77,40,97,91,108,93,44,32,103,91,108,93,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,97,46,102,111,114,69,97,99,104,40,40,103,41,32,61,62,32,75,97,91,103,93,32,61,32,98,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,65,114,114,97,121,40,98,46,108,101,110,103,116,104,41,44,32,102,32,61,32,91,93,44,32,107,32,61,32,48,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,63,32,101,91,108,93,32,61,32,75,91,103,93,32,58,32,40,102,46,112,117,115,104,40,103,41,44,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,124,124,32,40,74,91,103,93,32,61,32,91,93,41,44,32,74,91,103,93,46,112,117,115,104,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,101,91,108,93,32,61,32,75,91,103,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,43,43,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,48,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,125,44,32,76,97,44,32,79,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,34,34,59,32,120,91,97,93,59,32,41,32,98,32,43,61,32,76,97,91,120,91,97,43,43,93,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,80,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,97,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,110,97,109,101,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,116,121,112,101,32,34,36,123,100,125,34,32,109,117,115,116,32,104,97,118,101,32,97,32,112,111,115,105,116,105,118,101,32,105,110,116,101,103,101,114,32,116,121,112,101,105,100,32,112,111,105,110,116,101,114,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,46,104,98,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,116,121,112,101,32,39,36,123,100,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,75,91,97,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,75,97,91,97,93,59,10,32,32,32,32,32,32,32,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,32,38,38,32,40,98,32,61,32,74,91,97,93,44,32,100,101,108,101,116,101,32,74,91,97,93,44,32,98,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,101,40,41,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,79,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,97,46,65,97,46,68,97,46,66,97,46,110,97,109,101,32,43,32,34,32,105,110,115,116,97,110,99,101,32,97,108,114,101,97,100,121,32,100,101,108,101,116,101,100,34,41,59,10,32,32,32,32,32,32,125,44,32,80,97,32,61,32,102,97,108,115,101,44,32,81,97,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,125,44,32,82,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,98,32,61,61,61,32,99,41,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,46,71,97,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,97,32,61,32,82,97,40,97,44,32,98,44,32,99,46,71,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,97,32,63,32,110,117,108,108,32,58,32,99,46,36,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,83,97,32,61,32,123,125,44,32,84,97,32,61,32,123,125,44,32,85,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,112,116,114,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,117,110,100,101,102,105,110,101,100,34,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,71,97,59,32,41,32,98,32,61,32,97,46,81,97,40,98,41,44,32,97,32,61,32,97,46,71,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,84,97,91,98,93,59,10,32,32,32,32,32,32,125,44,32,86,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,68,97,32,124,124,32,33,98,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,109,97,107,101,67,108,97,115,115,72,97,110,100,108,101,32,114,101,113,117,105,114,101,115,32,112,116,114,32,97,110,100,32,112,116,114,84,121,112,101,34,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,33,98,46,72,97,32,33,61,61,32,33,33,98,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,66,111,116,104,32,115,109,97,114,116,80,116,114,84,121,112,101,32,97,110,100,32,115,109,97,114,116,80,116,114,32,109,117,115,116,32,98,101,32,115,112,101,99,105,102,105,101,100,34,41,59,10,32,32,32,32,32,32,32,32,98,46,99,111,117,110,116,32,61,32,123,32,118,97,108,117,101,58,32,49,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,44,32,123,32,65,97,58,32,123,32,118,97,108,117,101,58,32,98,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,32,125,32,125,41,41,59,10,32,32,32,32,32,32,125,44,32,81,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,117,110,100,101,102,105,110,101,100,34,32,61,61,61,32,116,121,112,101,111,102,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,41,32,114,101,116,117,114,110,32,81,32,61,32,40,98,41,32,61,62,32,98,44,32,97,59,10,32,32,32,32,32,32,32,32,80,97,32,61,32,110,101,119,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,40,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,98,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,98,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,98,46,70,97,32,63,32,98,46,72,97,46,75,97,40,98,46,70,97,41,32,58,32,98,46,68,97,46,66,97,46,75,97,40,98,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,81,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,99,46,70,97,32,38,38,32,80,97,46,114,101,103,105,115,116,101,114,40,98,44,32,123,32,65,97,58,32,99,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,81,97,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,80,97,46,117,110,114,101,103,105,115,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,97,41,59,10,32,32,32,32,32,32,125,44,32,87,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,88,97,40,41,32,123,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,89,97,32,61,32,40,97,44,32,98,41,32,61,62,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,98,44,32,34,110,97,109,101,34,44,32,123,32,118,97,108,117,101,58,32,97,32,125,41,44,32,90,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,69,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,102,117,110,99,116,105,111,110,40,46,46,46,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,97,91,98,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,101,46,108,101,110,103,116,104,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,70,117,110,99,116,105,111,110,32,39,36,123,99,125,39,32,99,97,108,108,101,100,32,119,105,116,104,32,97,110,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,101,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,115,32,111,110,101,32,111,102,32,40,36,123,97,91,98,93,46,69,97,125,41,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,91,98,93,46,69,97,91,101,46,108,101,110,103,116,104,93,46,97,112,112,108,121,40,116,104,105,115,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,91,100,46,78,97,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,36,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,91,99,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,112,117,98,108,105,99,32,110,97,109,101,32,39,36,123,97,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,32,32,90,97,40,104,44,32,97,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,91,97,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,99,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,111,118,101,114,108,111,97,100,115,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,99,125,41,33,96,41,59,10,32,32,32,32,32,32,32,32,32,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,59,10,32,32,32,32,32,32,125,44,32,97,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,91,94,97,45,122,65,45,90,48,45,57,95,93,47,103,44,32,34,36,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,48,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,56,32,60,61,32,98,32,38,38,32,53,55,32,62,61,32,98,32,63,32,96,95,36,123,97,125,96,32,58,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,77,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,71,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,98,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,81,97,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,36,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,106,98,32,61,32,91,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,99,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,98,32,33,61,61,32,99,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,81,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,69,120,112,101,99,116,101,100,32,110,117,108,108,32,111,114,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,99,46,110,97,109,101,125,44,32,103,111,116,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,98,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,46,81,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,85,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,32,124,124,32,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,82,97,32,38,38,32,98,46,65,97,46,68,97,46,82,97,41,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,46,65,97,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,80,97,115,115,105,110,103,32,114,97,119,32,112,111,105,110,116,101,114,32,116,111,32,115,109,97,114,116,32,112,111,105,110,116,101,114,32,105,115,32,105,108,108,101,103,97,108,34,41,59,10,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,116,104,105,115,46,111,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,116,104,105,115,46,107,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,98,40,40,41,32,61,62,32,100,91,34,100,101,108,101,116,101,34,93,40,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,110,115,117,112,112,111,114,116,105,110,103,32,115,104,97,114,105,110,103,32,112,111,108,105,99,121,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,68,97,46,82,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,66,97,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,84,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,82,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,83,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,105,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,111,98,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,85,97,32,61,32,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,107,98,32,61,32,110,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,109,59,10,32,32,32,32,32,32,32,32,101,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,98,46,71,97,32,63,32,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,102,98,32,58,32,40,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,100,32,63,32,100,98,32,58,32,104,98,44,32,116,104,105,115,46,74,97,32,61,32,110,117,108,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,106,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,82,101,112,108,97,99,105,110,103,32,110,111,110,101,120,105,115,116,101,110,116,32,112,117,98,108,105,99,32,115,121,109,98,111,108,34,41,59,10,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,99,32,63,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,32,58,32,40,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,41,59,10,32,32,32,32,32,32,125,44,32,82,44,32,107,98,32,61,32,40,97,44,32,98,44,32,99,32,61,32,91,93,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,40,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,112,47,103,44,32,34,105,34,41,44,32,98,32,61,32,40,48,44,32,104,91,34,100,121,110,67,97,108,108,95,34,32,43,32,97,93,41,40,98,44,32,46,46,46,99,41,41,32,58,32,98,32,61,32,82,46,103,101,116,40,98,41,40,46,46,46,99,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,108,98,32,61,32,40,97,44,32,98,41,32,61,62,32,40,46,46,46,99,41,32,61,62,32,107,98,40,97,44,32,98,44,32,99,41,44,32,83,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,108,98,40,97,44,32,98,41,32,58,32,82,46,103,101,116,40,98,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,99,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,112,111,105,110,116,101,114,32,119,105,116,104,32,115,105,103,110,97,116,117,114,101,32,36,123,97,125,58,32,36,123,98,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,109,98,44,32,111,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,110,98,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,84,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,112,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,101,91,102,93,32,124,124,32,75,91,102,93,32,124,124,32,40,75,97,91,102,93,32,63,32,75,97,91,102,93,46,102,111,114,69,97,99,104,40,99,41,32,58,32,40,100,46,112,117,115,104,40,102,41,44,32,101,91,102,93,32,61,32,116,114,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,44,32,101,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,99,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,109,98,40,96,36,123,97,125,58,32,96,32,43,32,100,46,109,97,112,40,111,98,41,46,106,111,105,110,40,91,34,44,32,34,93,41,41,59,10,32,32,32,32,32,32,125,44,32,113,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,91,93,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,100,43,43,41,32,99,46,112,117,115,104,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,114,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,49,59,32,98,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,98,41,32,105,102,32,40,110,117,108,108,32,33,61,61,32,97,91,98,93,32,38,38,32,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,74,97,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,115,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,102,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,97,114,103,84,121,112,101,115,32,97,114,114,97,121,32,115,105,122,101,32,109,105,115,109,97,116,99,104,33,32,77,117,115,116,32,97,116,32,108,101,97,115,116,32,103,101,116,32,114,101,116,117,114,110,32,118,97,108,117,101,32,97,110,100,32,39,116,104,105,115,39,32,116,121,112,101,115,33,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,110,117,108,108,32,33,61,61,32,98,91,49,93,32,38,38,32,110,117,108,108,32,33,61,61,32,99,44,32,103,32,61,32,114,98,40,98,41,44,32,108,32,61,32,34,118,111,105,100,34,32,33,61,61,32,98,91,48,93,46,110,97,109,101,44,32,110,32,61,32,102,32,45,32,50,44,32,109,32,61,32,65,114,114,97,121,40,110,41,44,32,113,32,61,32,91,93,44,32,114,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,89,97,40,97,44,32,102,117,110,99,116,105,111,110,40,46,46,46,65,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,46,108,101,110,103,116,104,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,113,46,108,101,110,103,116,104,32,61,32,107,32,63,32,50,32,58,32,49,59,10,32,32,32,32,32,32,32,32,32,32,113,91,48,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,118,32,61,32,98,91,49,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,113,91,49,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,119,32,61,32,48,59,32,119,32,60,32,110,59,32,43,43,119,41,32,109,91,119,93,32,61,32,98,91,119,32,43,32,50,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,65,91,119,93,41,44,32,113,46,112,117,115,104,40,109,91,119,93,41,59,10,32,32,32,32,32,32,32,32,32,32,65,32,61,32,100,40,46,46,46,113,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,41,32,74,97,40,114,41,59,10,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,119,32,61,32,107,32,63,32,49,32,58,32,50,59,32,119,32,60,32,98,46,108,101,110,103,116,104,59,32,119,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,49,32,61,61,61,32,119,32,63,32,118,32,58,32,109,91,119,32,45,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,98,91,119,93,46,74,97,32,38,38,32,98,91,119,93,46,74,97,40,69,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,32,61,32,108,32,63,32,98,91,48,93,46,102,114,111,109,87,105,114,101,84,121,112,101,40,65,41,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,116,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,114,105,109,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,97,46,105,110,100,101,120,79,102,40,34,40,34,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,45,49,32,33,61,61,32,98,32,63,32,97,46,115,117,98,115,116,114,40,48,44,32,98,41,32,58,32,97,59,10,32,32,32,32,32,32,125,44,32,118,98,32,61,32,91,93,44,32,85,32,61,32,91,93,44,32,119,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,48,32,61,61,61,32,45,45,85,91,97,32,43,32,49,93,32,38,38,32,40,85,91,97,93,32,61,32,118,111,105,100,32,48,44,32,118,98,46,112,117,115,104,40,97,41,41,59,10,32,32,32,32,32,32,125,44,32,86,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,117,115,101,32,100,101,108,101,116,101,100,32,118,97,108,46,32,104,97,110,100,108,101,32,61,32,34,32,43,32,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,85,91,97,93,59,10,32,32,32,32,32,32,125,44,32,103,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,118,111,105,100,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,50,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,110,117,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,116,114,117,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,54,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,102,97,108,115,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,56,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,118,98,46,112,111,112,40,41,32,124,124,32,85,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,93,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,32,43,32,49,93,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,120,98,32,61,32,123,10,32,32,32,32,32,32,32,32,110,97,109,101,58,32,34,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,34,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,97,44,32,98,41,32,61,62,32,103,98,40,98,41,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,125,44,32,121,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,117,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,121,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,122,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,67,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,122,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,75,91,97,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,41,32,116,104,114,111,119,32,97,32,61,32,96,36,123,98,125,32,104,97,115,32,117,110,107,110,111,119,110,32,116,121,112,101,32,36,123,111,98,40,97,41,125,96,44,32,110,101,119,32,80,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,101,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,97,41,32,114,101,116,117,114,110,32,34,110,117,108,108,34,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,121,112,101,111,102,32,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,111,98,106,101,99,116,34,32,61,61,61,32,98,32,124,124,32,34,97,114,114,97,121,34,32,61,61,61,32,98,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,61,61,61,32,98,32,63,32,97,46,116,111,83,116,114,105,110,103,40,41,32,58,32,34,34,32,43,32,97,59,10,32,32,32,32,32,32,125,44,32,65,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,110,97,91,99,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,56,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,111,97,91,99,32,62,62,32,51,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,102,108,111,97,116,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,66,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,117,91,100,93,32,58,32,40,100,41,32,61,62,32,120,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,121,91,100,32,62,62,32,49,93,32,58,32,40,100,41,32,61,62,32,122,91,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,67,91,100,32,62,62,32,50,93,32,58,32,40,100,41,32,61,62,32,68,91,100,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,67,98,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,32,111,112,116,105,111,110,97,108,58,32,116,114,117,101,32,125,44,32,120,98,41,44,32,68,98,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,34,117,116,102,45,49,54,108,101,34,41,32,58,32,118,111,105,100,32,48,44,32,69,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,32,62,62,32,49,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,99,32,43,32,98,32,47,32,50,59,32,33,40,99,32,62,61,32,100,41,32,38,38,32,122,91,99,93,59,32,41,32,43,43,99,59,10,32,32,32,32,32,32,32,32,99,32,60,60,61,32,49,59,10,32,32,32,32,32,32,32,32,105,102,32,40,51,50,32,60,32,99,32,45,32,97,32,38,38,32,68,98,41,32,114,101,116,117,114,110,32,68,98,46,100,101,99,111,100,101,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,99,41,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,34,34,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,48,59,32,33,40,100,32,62,61,32,98,32,47,32,50,41,59,32,43,43,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,121,91,97,32,43,32,50,32,42,32,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,70,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,63,63,32,40,99,32,61,32,50,49,52,55,52,56,51,54,52,55,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,99,32,45,61,32,50,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,32,60,32,50,32,42,32,97,46,108,101,110,103,116,104,32,63,32,99,32,47,32,50,32,58,32,97,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,99,59,32,43,43,101,41,32,121,91,98,32,62,62,32,49,93,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,44,32,98,32,43,61,32,50,59,10,32,32,32,32,32,32,32,32,121,91,98,32,62,62,32,49,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,71,98,32,61,32,40,97,41,32,61,62,32,50,32,42,32,97,46,108,101,110,103,116,104,44,32,72,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,48,44,32,100,32,61,32,34,34,59,32,33,40,99,32,62,61,32,98,32,47,32,52,41,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,67,91,97,32,43,32,52,32,42,32,99,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,60,61,32,101,32,63,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,32,58,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,44,32,73,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,63,63,32,40,99,32,61,32,50,49,52,55,52,56,51,54,52,55,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,52,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,100,32,43,32,99,32,45,32,52,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,52,32,62,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,74,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,48,44,32,99,32,61,32,48,59,32,99,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,53,53,50,57,54,32,60,61,32,100,32,38,38,32,53,55,51,52,51,32,62,61,32,100,32,38,38,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,75,98,32,61,32,48,44,32,76,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,111,87,105,114,101,84,121,112,101,40,100,44,32,99,41,59,10,32,32,32,32,32,32,32,32,100,46,108,101,110,103,116,104,32,38,38,32,40,68,91,98,32,62,62,32,50,93,32,61,32,103,98,40,100,41,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,44,32,77,98,32,61,32,91,93,44,32,78,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,77,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,77,98,46,112,117,115,104,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,79,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,65,114,114,97,121,40,97,41,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,43,43,100,41,32,99,91,100,93,32,61,32,122,98,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,44,32,34,112,97,114,97,109,101,116,101,114,32,34,32,43,32,100,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,80,98,32,61,32,82,101,102,108,101,99,116,46,99,111,110,115,116,114,117,99,116,44,32,81,98,32,61,32,123,125,44,32,82,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,97,32,105,110,115,116,97,110,99,101,111,102,32,65,97,32,124,124,32,34,117,110,119,105,110,100,34,32,61,61,32,97,41,41,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,44,32,83,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,109,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,67,97,32,124,124,32,48,32,60,32,75,98,32,124,124,32,40,104,46,111,110,69,120,105,116,63,46,40,97,41,44,32,108,97,32,61,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,65,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,84,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,108,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,97,40,41,44,32,33,40,67,97,32,124,124,32,48,32,60,32,75,98,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,32,61,32,97,32,61,32,109,97,44,32,83,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,85,98,32,61,32,123,125,44,32,87,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,86,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,85,83,69,82,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,79,71,78,65,77,69,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,65,84,72,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,87,68,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,72,79,77,69,58,32,34,47,104,111,109,101,47,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,65,78,71,58,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,110,97,118,105,103,97,116,111,114,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,91,48,93,32,124,124,32,34,67,34,41,46,114,101,112,108,97,99,101,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,45,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,95,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,32,43,32,34,46,85,84,70,45,56,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,95,58,32,104,97,32,124,124,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,85,98,41,32,118,111,105,100,32,48,32,61,61,61,32,85,98,91,98,93,32,63,32,100,101,108,101,116,101,32,97,91,98,93,32,58,32,97,91,98,93,32,61,32,85,98,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,97,41,32,99,46,112,117,115,104,40,96,36,123,98,125,61,36,123,97,91,98,93,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,86,98,32,61,32,99,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,86,98,59,10,32,32,32,32,32,32,125,44,32,86,98,44,32,88,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,41,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,97,41,32,61,62,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,97,41,59,10,32,32,32,32,32,32,32,32,117,97,40,34,105,110,105,116,82,97,110,100,111,109,68,101,118,105,99,101,34,41,59,10,32,32,32,32,32,32,125,44,32,89,98,32,61,32,40,97,41,32,61,62,32,40,89,98,32,61,32,88,98,40,41,41,40,97,41,59,10,32,32,32,32,32,32,76,32,61,32,104,46,73,110,116,101,114,110,97,108,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,73,110,116,101,114,110,97,108,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,90,98,32,61,32,65,114,114,97,121,40,50,53,54,41,44,32,36,98,32,61,32,48,59,32,50,53,54,32,62,32,36,98,59,32,43,43,36,98,41,32,90,98,91,36,98,93,32,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,36,98,41,59,10,32,32,32,32,32,32,76,97,32,61,32,90,98,59,10,32,32,32,32,32,32,80,32,61,32,104,46,66,105,110,100,105,110,103,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,66,105,110,100,105,110,103,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,88,97,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,105,115,65,108,105,97,115,79,102,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,116,104,105,115,32,105,110,115,116,97,110,99,101,111,102,32,88,97,32,38,38,32,97,32,105,110,115,116,97,110,99,101,111,102,32,88,97,41,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,104,105,115,46,65,97,46,68,97,46,66,97,44,32,99,32,61,32,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,32,61,32,97,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,65,97,46,68,97,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,97,32,61,32,97,46,65,97,46,67,97,59,32,98,46,71,97,59,32,41,32,99,32,61,32,98,46,81,97,40,99,41,44,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,100,46,71,97,59,32,41,32,97,32,61,32,100,46,81,97,40,97,41,44,32,100,32,61,32,100,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,61,61,61,32,100,32,38,38,32,99,32,61,61,61,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,108,111,110,101,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,80,97,41,32,114,101,116,117,114,110,32,116,104,105,115,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,44,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,81,44,32,98,32,61,32,79,98,106,101,99,116,44,32,99,32,61,32,98,46,99,114,101,97,116,101,44,32,100,32,61,32,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,44,32,101,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,99,46,99,97,108,108,40,98,44,32,100,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,65,97,58,32,123,32,118,97,108,117,101,58,32,123,32,99,111,117,110,116,58,32,101,46,99,111,117,110,116,44,32,79,97,58,32,101,46,79,97,44,32,80,97,58,32,101,46,80,97,44,32,67,97,58,32,101,46,67,97,44,32,68,97,58,32,101,46,68,97,44,32,70,97,58,32,101,46,70,97,44,32,72,97,58,32,101,46,72,97,32,125,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,79,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,91,34,100,101,108,101,116,101,34,93,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,97,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,97,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,97,46,70,97,32,63,32,97,46,72,97,46,75,97,40,97,46,70,97,41,32,58,32,97,46,68,97,46,66,97,46,75,97,40,97,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,80,97,32,124,124,32,40,116,104,105,115,46,65,97,46,70,97,32,61,32,118,111,105,100,32,48,44,32,116,104,105,115,46,65,97,46,67,97,32,61,32,118,111,105,100,32,48,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,115,68,101,108,101,116,101,100,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,76,97,116,101,114,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,87,97,46,112,117,115,104,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,79,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,105,98,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,99,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,38,38,32,40,97,32,61,32,116,104,105,115,46,89,97,40,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,63,46,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,83,97,32,63,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,46,105,98,44,32,67,97,58,32,99,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,44,32,67,97,58,32,97,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,99,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,99,41,32,114,101,116,117,114,110,32,116,104,105,115,46,87,97,40,97,41,44,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,85,97,40,116,104,105,115,46,66,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,41,32,114,101,116,117,114,110,32,100,46,65,97,46,67,97,32,61,32,99,44,32,100,46,65,97,46,70,97,32,61,32,97,44,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,87,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,66,97,46,98,98,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,83,97,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,100,41,32,114,101,116,117,114,110,32,98,46,99,97,108,108,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,82,97,32,63,32,100,46,90,97,32,58,32,100,46,112,111,105,110,116,101,114,84,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,82,97,40,99,44,32,116,104,105,115,46,66,97,44,32,100,46,66,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,101,32,63,32,98,46,99,97,108,108,40,116,104,105,115,41,32,58,32,116,104,105,115,46,83,97,32,63,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,109,98,32,61,32,104,46,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,32,61,32,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,89,97,40,98,44,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,69,114,114,111,114,40,100,41,46,115,116,97,99,107,59,10,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,100,32,38,38,32,40,116,104,105,115,46,115,116,97,99,107,32,61,32,116,104,105,115,46,116,111,83,116,114,105,110,103,40,41,32,43,32,34,92,110,34,32,43,32,100,46,114,101,112,108,97,99,101,40,47,94,69,114,114,111,114,40,58,91,94,92,110,93,42,41,63,92,110,47,44,32,34,34,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,46,112,114,111,116,111,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,99,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,116,111,83,116,114,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,32,61,61,61,32,116,104,105,115,46,109,101,115,115,97,103,101,32,63,32,116,104,105,115,46,110,97,109,101,32,58,32,96,36,123,116,104,105,115,46,110,97,109,101,125,58,32,36,123,116,104,105,115,46,109,101,115,115,97,103,101,125,96,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,41,40,69,114,114,111,114,44,32,34,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,34,41,59,10,32,32,32,32,32,32,85,46,112,117,115,104,40,48,44,32,49,44,32,118,111,105,100,32,48,44,32,49,44,32,110,117,108,108,44,32,49,44,32,116,114,117,101,44,32,49,44,32,102,97,108,115,101,44,32,49,41,59,10,32,32,32,32,32,32,104,46,99,111,117,110,116,95,101,109,118,97,108,95,104,97,110,100,108,101,115,32,61,32,40,41,32,61,62,32,85,46,108,101,110,103,116,104,32,47,32,50,32,45,32,53,32,45,32,118,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,118,97,114,32,108,99,32,61,32,123,10,32,32,32,32,32,32,32,32,99,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,117,97,40,10,32,32,32,32,32,32,32,32,32,32,96,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,36,123,97,32,63,32,69,97,40,97,41,32,58,32,34,34,125,44,32,97,116,58,32,96,32,43,32,91,98,32,63,32,98,32,63,32,69,97,40,98,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,105,108,101,110,97,109,101,34,44,32,99,44,32,100,32,63,32,100,32,63,32,69,97,40,100,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,34,93,10,32,32,32,32,32,32,32,32,41,44,10,32,32,32,32,32,32,32,32,106,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,110,101,119,32,70,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,49,54,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,52,32,62,62,32,50,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,56,32,62,62,32,50,93,32,61,32,99,59,10,32,32,32,32,32,32,32,32,32,32,71,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,72,97,43,43,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,71,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,80,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,77,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,78,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,82,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,79,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,84,58,32,40,41,32,61,62,32,117,97,40,34,34,41,44,10,32,32,32,32,32,32,32,32,119,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,85,97,44,32,100,32,61,32,98,46,75,97,44,32,101,32,61,32,98,46,88,97,44,32,102,32,61,32,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,103,98,41,46,99,111,110,99,97,116,40,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,109,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,102,44,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,46,102,111,114,69,97,99,104,40,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,107,91,110,93,44,32,113,32,61,32,108,46,101,98,44,32,114,32,61,32,108,46,102,98,44,32,65,32,61,32,107,91,110,32,43,32,101,46,108,101,110,103,116,104,93,44,32,118,32,61,32,108,46,108,98,44,32,119,32,61,32,108,46,110,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,91,108,46,97,98,93,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,58,32,40,69,41,32,61,62,32,109,46,102,114,111,109,87,105,114,101,84,121,112,101,40,113,40,114,44,32,69,41,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,119,114,105,116,101,58,32,40,69,44,32,100,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,40,119,44,32,69,44,32,65,46,116,111,87,105,114,101,84,121,112,101,40,66,44,32,100,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,123,125,44,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,110,91,109,93,32,61,32,103,91,109,93,46,114,101,97,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,105,110,32,103,41,32,105,102,32,40,33,40,109,32,105,110,32,110,41,41,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,77,105,115,115,105,110,103,32,102,105,101,108,100,58,32,34,36,123,109,125,34,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,99,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,103,91,109,93,46,119,114,105,116,101,40,113,44,32,110,91,109,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,108,32,38,38,32,108,46,112,117,115,104,40,100,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,113,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,100,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,70,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,95,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,33,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,32,63,32,99,32,58,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,101,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,109,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,44,32,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,109,32,61,32,79,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,40,103,32,61,32,83,40,107,44,32,103,41,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,38,38,32,40,110,32,61,32,83,40,108,44,32,110,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,32,61,32,83,40,113,44,32,114,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,65,32,61,32,97,98,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,65,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,109,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,44,32,98,44,32,99,93,44,32,100,32,63,32,91,100,93,32,58,32,91,93,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,118,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,119,32,61,32,118,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,119,46,77,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,69,32,61,32,88,97,46,112,114,111,116,111,116,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,89,97,40,109,44,32,102,117,110,99,116,105,111,110,40,46,46,46,78,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,32,33,61,61,32,100,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,115,101,32,39,110,101,119,39,32,116,111,32,99,111,110,115,116,114,117,99,116,32,34,32,43,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,66,46,76,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,109,32,43,32,34,32,104,97,115,32,110,111,32,97,99,99,101,115,115,105,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,117,98,32,61,32,66,46,76,97,91,78,97,46,108,101,110,103,116,104,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,117,98,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,84,114,105,101,100,32,116,111,32,105,110,118,111,107,101,32,99,116,111,114,32,111,102,32,36,123,109,125,32,119,105,116,104,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,78,97,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,101,100,32,40,36,123,79,98,106,101,99,116,46,107,101,121,115,40,66,46,76,97,41,46,116,111,83,116,114,105,110,103,40,41,125,41,32,112,97,114,97,109,101,116,101,114,115,32,105,110,115,116,101,97,100,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,117,98,46,97,112,112,108,121,40,116,104,105,115,44,32,78,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,97,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,69,44,32,123,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,118,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,46,112,114,111,116,111,116,121,112,101,32,61,32,100,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,110,101,119,32,98,98,40,109,44,32,118,44,32,100,97,44,32,114,44,32,119,44,32,102,44,32,103,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,66,46,71,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,101,97,32,61,32,66,46,71,97,41,46,86,97,32,63,63,32,40,101,97,46,86,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,46,71,97,46,86,97,46,112,117,115,104,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,119,32,61,32,110,101,119,32,105,98,40,109,44,32,66,44,32,116,114,117,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,97,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,42,34,44,32,66,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,69,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,32,99,111,110,115,116,42,34,44,32,66,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,83,97,91,97,93,32,61,32,123,32,112,111,105,110,116,101,114,84,121,112,101,58,32,101,97,44,32,90,97,58,32,69,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,65,44,32,118,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,119,44,32,101,97,44,32,69,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,114,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,103,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,96,99,111,110,115,116,114,117,99,116,111,114,32,36,123,103,46,110,97,109,101,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,103,46,66,97,46,76,97,32,38,38,32,40,103,46,66,97,46,76,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,99,111,110,115,116,114,117,99,116,111,114,115,32,119,105,116,104,32,105,100,101,110,116,105,99,97,108,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,98,32,45,32,49,125,41,32,102,111,114,32,99,108,97,115,115,32,39,36,123,103,46,110,97,109,101,125,39,33,32,79,118,101,114,108,111,97,100,32,114,101,115,111,108,117,116,105,111,110,32,105,115,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,112,101,114,102,111,114,109,101,100,32,117,115,105,110,103,32,116,104,101,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,44,32,110,111,116,32,97,99,116,117,97,108,32,116,121,112,101,32,105,110,102,111,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,103,46,110,97,109,101,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,46,115,112,108,105,99,101,40,49,44,32,48,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,115,98,40,108,44,32,110,44,32,110,117,108,108,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,113,98,40,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,116,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,109,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,113,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,110,32,61,32,110,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,96,36,123,110,46,110,97,109,101,125,46,36,123,98,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,98,46,115,116,97,114,116,115,87,105,116,104,40,34,64,64,34,41,32,38,38,32,40,98,32,61,32,83,121,109,98,111,108,91,98,46,115,117,98,115,116,114,105,110,103,40,50,41,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,110,46,66,97,46,106,98,46,112,117,115,104,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,110,46,66,97,46,77,97,44,32,65,32,61,32,114,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,65,32,124,124,32,118,111,105,100,32,48,32,61,61,61,32,65,46,69,97,32,38,38,32,65,46,99,108,97,115,115,78,97,109,101,32,33,61,61,32,110,46,110,97,109,101,32,38,38,32,65,46,78,97,32,61,61,61,32,99,32,45,32,50,32,63,32,40,109,46,78,97,32,61,32,99,32,45,32,50,44,32,109,46,99,108,97,115,115,78,97,109,101,32,61,32,110,46,110,97,109,101,44,32,114,91,98,93,32,61,32,109,41,32,58,32,40,90,97,40,114,44,32,98,44,32,113,41,44,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,108,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,115,98,40,113,44,32,118,44,32,110,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,114,91,98,93,46,69,97,32,63,32,40,118,46,78,97,32,61,32,99,32,45,32,50,44,32,114,91,98,93,32,61,32,118,41,32,58,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,89,58,32,40,97,41,32,61,62,32,77,40,97,44,32,120,98,41,44,10,32,32,32,32,32,32,32,32,68,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,101,46,118,97,108,117,101,115,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,46,118,97,108,117,101,115,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,102,44,32,107,41,32,61,62,32,107,46,118,97,108,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,121,98,40,98,44,32,99,44,32,100,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,98,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,108,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,122,98,40,97,44,32,34,101,110,117,109,34,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,100,46,99,111,110,115,116,114,117,99,116,111,114,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,100,46,99,111,110,115,116,114,117,99,116,111,114,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,58,32,123,32,118,97,108,117,101,58,32,99,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,89,97,40,96,36,123,100,46,110,97,109,101,125,95,36,123,98,125,96,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,118,97,108,117,101,115,91,99,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,65,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,100,41,32,61,62,32,100,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,100,44,32,101,41,32,61,62,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,65,98,40,98,44,32,99,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,118,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,116,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,97,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,97,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,98,32,45,32,49,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,97,44,32,115,98,40,97,44,32,91,103,91,48,93,44,32,110,117,108,108,93,46,99,111,110,99,97,116,40,103,46,115,108,105,99,101,40,49,41,41,44,32,110,117,108,108,44,32,101,44,32,102,41,44,32,98,32,45,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,110,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,45,49,32,61,61,61,32,101,32,38,38,32,40,101,32,61,32,52,50,57,52,57,54,55,50,57,53,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,51,50,32,45,32,56,32,42,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,32,60,60,32,102,32,62,62,62,32,102,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,98,46,105,110,99,108,117,100,101,115,40,34,117,110,115,105,103,110,101,100,34,41,32,63,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,32,62,62,62,32,48,59,10,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,98,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,101,44,32,116,111,87,105,114,101,84,121,112,101,58,32,107,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,66,98,40,98,44,32,99,44,32,48,32,33,61,61,32,100,41,44,32,74,97,58,32,110,117,108,108,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,103,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,101,40,117,46,98,117,102,102,101,114,44,32,68,91,102,32,43,32,52,32,62,62,32,50,93,44,32,68,91,102,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,91,73,110,116,56,65,114,114,97,121,44,32,85,105,110,116,56,65,114,114,97,121,44,32,73,110,116,49,54,65,114,114,97,121,44,32,85,105,110,116,49,54,65,114,114,97,121,44,32,73,110,116,51,50,65,114,114,97,121,44,32,85,105,110,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,54,52,65,114,114,97,121,93,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,99,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,100,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,100,32,125,44,32,123,32,104,98,58,32,116,114,117,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,113,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,67,98,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,117,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,83,40,107,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,61,32,83,40,108,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,113,32,61,32,83,40,109,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,91,98,93,44,32,40,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,32,61,32,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,110,101,119,32,105,98,40,99,44,32,114,46,66,97,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,114,44,32,100,44,32,102,44,32,103,44,32,110,44,32,113,41,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,90,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,68,91,99,32,62,62,32,50,93,44,32,101,32,61,32,99,32,43,32,52,44,32,102,44,32,107,32,61,32,101,44,32,103,32,61,32,48,59,32,103,32,60,61,32,100,59,32,43,43,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,101,32,43,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,61,61,32,100,32,124,124,32,48,32,61,61,32,120,91,108,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,107,32,63,32,69,97,40,107,44,32,108,32,45,32,107,41,32,58,32,34,34,44,32,118,111,105,100,32,48,32,61,61,61,32,102,32,63,32,102,32,61,32,107,32,58,32,40,102,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,102,32,43,61,32,107,41,44,32,107,32,61,32,108,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,32,38,38,32,40,100,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,100,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,44,32,102,32,61,32,34,115,116,114,105,110,103,34,32,61,61,32,116,121,112,101,111,102,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,102,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,73,110,116,56,65,114,114,97,121,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,115,116,100,58,58,115,116,114,105,110,103,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,107,32,61,32,101,32,61,32,48,59,32,107,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,50,55,32,62,61,32,103,32,63,32,101,43,43,32,58,32,50,48,52,55,32,62,61,32,103,32,63,32,101,32,43,61,32,50,32,58,32,53,53,50,57,54,32,60,61,32,103,32,38,38,32,53,55,51,52,51,32,62,61,32,103,32,63,32,40,101,32,43,61,32,52,44,32,43,43,107,41,32,58,32,101,32,43,61,32,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,101,32,61,32,100,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,97,99,40,52,32,43,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,107,32,43,32,52,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,107,32,62,62,32,50,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,32,72,40,100,44,32,103,44,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,53,53,32,60,32,108,41,32,116,104,114,111,119,32,84,40,103,41,44,32,110,101,119,32,80,40,34,83,116,114,105,110,103,32,104,97,115,32,85,84,70,45,49,54,32,99,111,100,101,32,117,110,105,116,115,32,116,104,97,116,32,100,111,32,110,111,116,32,102,105,116,32,105,110,32,56,32,98,105,116,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,91,103,32,43,32,102,93,32,61,32,108,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,120,91,103,32,43,32,102,93,32,61,32,100,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,99,32,38,38,32,99,46,112,117,115,104,40,84,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,121,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,69,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,70,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,71,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,40,103,41,32,61,62,32,122,91,103,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,52,32,61,61,61,32,98,32,38,38,32,40,100,32,61,32,72,98,44,32,101,32,61,32,73,98,44,32,102,32,61,32,74,98,44,32,107,32,61,32,40,103,41,32,61,62,32,68,91,103,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,68,91,103,32,62,62,32,50,93,44,32,110,44,32,109,32,61,32,103,32,43,32,52,44,32,113,32,61,32,48,59,32,113,32,60,61,32,108,59,32,43,43,113,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,103,32,43,32,52,32,43,32,113,32,42,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,113,32,61,61,32,108,32,124,124,32,48,32,61,61,32,107,40,114,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,100,40,109,44,32,114,32,45,32,109,41,44,32,118,111,105,100,32,48,32,61,61,61,32,110,32,63,32,110,32,61,32,109,32,58,32,40,110,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,110,32,43,61,32,109,41,44,32,109,32,61,32,114,32,43,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,34,115,116,114,105,110,103,34,32,33,61,32,116,121,112,101,111,102,32,108,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,67,43,43,32,115,116,114,105,110,103,32,116,121,112,101,32,36,123,99,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,102,40,108,41,44,32,109,32,61,32,97,99,40,52,32,43,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,109,32,62,62,32,50,93,32,61,32,110,32,47,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,40,108,44,32,109,32,43,32,52,44,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,103,32,38,38,32,103,46,112,117,115,104,40,84,44,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,120,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,32,61,32,123,32,110,97,109,101,58,32,79,40,98,41,44,32,85,97,58,32,83,40,99,44,32,100,41,44,32,75,97,58,32,83,40,101,44,32,102,41,44,32,88,97,58,32,91,93,32,125,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,46,88,97,46,112,117,115,104,40,123,32,97,98,58,32,79,40,98,41,44,32,103,98,58,32,99,44,32,101,98,58,32,83,40,100,44,32,101,41,44,32,102,98,58,32,102,44,32,109,98,58,32,107,44,32,108,98,58,32,83,40,103,44,32,108,41,44,32,110,98,58,32,110,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,36,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,112,98,58,32,116,114,117,101,44,32,110,97,109,101,58,32,98,44,32,73,97,58,32,48,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,44,32,116,111,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,75,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,75,98,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,73,110,102,105,110,105,116,121,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,67,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,122,98,40,98,44,32,34,101,109,118,97,108,58,58,97,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,98,44,32,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,112,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,77,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,40,110,117,108,108,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,58,32,119,98,44,10,32,32,32,32,32,32,32,32,69,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,32,61,61,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,111,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,79,98,40,97,44,32,98,41,44,32,101,32,61,32,100,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,45,45,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,96,109,101,116,104,111,100,67,97,108,108,101,114,60,40,36,123,100,46,109,97,112,40,40,107,41,32,61,62,32,107,46,110,97,109,101,41,46,106,111,105,110,40,34,44,32,34,41,125,41,32,61,62,32,36,123,101,46,110,97,109,101,125,62,96,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,78,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,89,97,40,98,44,32,40,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,61,32,48,44,32,113,32,61,32,48,59,32,113,32,60,32,97,59,32,43,43,113,41,32,102,91,113,93,32,61,32,100,91,113,93,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,110,32,43,32,109,41,44,32,109,32,43,61,32,100,91,113,93,46,73,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,49,32,61,61,61,32,99,32,63,32,80,98,40,103,44,32,102,41,32,58,32,103,46,97,112,112,108,121,40,107,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,101,44,32,108,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,122,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,40,85,91,97,32,43,32,49,93,32,43,61,32,49,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,97,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,74,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,122,98,40,97,44,32,34,95,101,109,118,97,108,95,116,97,107,101,95,118,97,108,117,101,34,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,103,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,71,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,38,38,32,40,99,108,101,97,114,84,105,109,101,111,117,116,40,81,98,91,97,93,46,105,100,41,44,32,100,101,108,101,116,101,32,81,98,91,97,93,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,81,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,84,98,40,40,41,32,61,62,32,98,99,40,97,44,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,41,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,61,32,123,32,105,100,58,32,99,44,32,113,98,58,32,98,32,125,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,72,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,40,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,68,97,116,101,40,41,41,46,103,101,116,70,117,108,108,89,101,97,114,40,41,44,32,102,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,48,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,54,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,54,48,32,42,32,77,97,116,104,46,109,97,120,40,102,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,78,117,109,98,101,114,40,102,32,33,61,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,77,97,116,104,46,97,98,115,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,96,85,84,67,36,123,48,32,60,61,32,107,32,63,32,34,45,34,32,58,32,34,43,34,125,36,123,83,116,114,105,110,103,40,77,97,116,104,46,102,108,111,111,114,40,103,32,47,32,54,48,41,41,46,112,97,100,83,116,97,114,116,40,50,44,32,34,48,34,41,125,36,123,83,116,114,105,110,103,40,103,32,37,32,54,48,41,46,112,97,100,83,116,97,114,116,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,50,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,125,96,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,60,32,102,32,63,32,40,72,40,97,44,32,99,44,32,49,55,41,44,32,72,40,98,44,32,100,44,32,49,55,41,41,32,58,32,40,72,40,97,44,32,100,44,32,49,55,41,44,32,72,40,98,44,32,99,44,32,49,55,41,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,98,97,58,32,40,41,32,61,62,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,44,10,32,32,32,32,32,32,32,32,74,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,120,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,97,32,62,62,62,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,49,52,55,52,56,51,54,52,56,32,60,32,97,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,49,59,32,52,32,62,61,32,99,59,32,99,32,42,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,32,42,32,40,49,32,43,32,48,46,50,32,47,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,77,97,116,104,46,109,105,110,40,100,44,32,97,32,43,32,49,48,48,54,54,51,50,57,54,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,40,77,97,116,104,46,109,105,110,40,50,49,52,55,52,56,51,54,52,56,44,32,54,53,53,51,54,32,42,32,77,97,116,104,46,99,101,105,108,40,77,97,116,104,46,109,97,120,40,97,44,32,100,41,32,47,32,54,53,53,51,54,41,41,32,45,32,107,97,46,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,43,32,54,53,53,51,53,41,32,47,32,54,53,53,51,54,32,124,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,97,46,103,114,111,119,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,86,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,87,98,40,41,46,102,111,114,69,97,99,104,40,40,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,68,91,97,32,43,32,52,32,42,32,101,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,102,41,32,117,91,101,43,43,93,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,91,101,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,100,46,108,101,110,103,116,104,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,88,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,87,98,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,99,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,99,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,100,32,43,61,32,101,46,108,101,110,103,116,104,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,98,32,62,62,32,50,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,83,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,81,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,107,58,32,99,99,44,10,32,32,32,32,32,32,32,32,102,58,32,100,99,44,10,32,32,32,32,32,32,32,32,101,58,32,101,99,44,10,32,32,32,32,32,32,32,32,66,58,32,102,99,44,10,32,32,32,32,32,32,32,32,97,97,58,32,103,99,44,10,32,32,32,32,32,32,32,32,97,58,32,104,99,44,10,32,32,32,32,32,32,32,32,98,58,32,105,99,44,10,32,32,32,32,32,32,32,32,104,58,32,106,99,44,10,32,32,32,32,32,32,32,32,115,58,32,107,99,44,10,32,32,32,32,32,32,32,32,85,58,32,83,98,44,10,32,32,32,32,32,32,32,32,76,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,89,98,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,97,32,43,32,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,87,59,10,32,32,32,32,32,32,40,97,115,121,110,99,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,87,32,61,32,100,46,101,120,112,111,114,116,115,59,10,32,32,32,32,32,32,32,32,32,32,107,97,32,61,32,87,46,100,97,59,10,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,82,32,61,32,87,46,103,97,59,10,32,32,32,32,32,32,32,32,32,32,114,97,46,117,110,115,104,105,102,116,40,87,46,101,97,41,59,10,32,32,32,32,32,32,32,32,32,32,70,45,45,59,10,32,32,32,32,32,32,32,32,32,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,63,46,40,70,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,32,70,32,38,38,32,71,32,38,38,32,40,100,32,61,32,71,44,32,71,32,61,32,110,117,108,108,44,32,100,40,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,87,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,70,43,43,59,10,32,32,32,32,32,32,32,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,63,46,40,70,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,123,32,97,58,32,108,99,32,125,59,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,40,98,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,77,111,100,117,108,101,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,32,119,105,116,104,32,101,114,114,111,114,58,32,36,123,100,125,96,41,44,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,119,97,32,63,63,32,40,119,97,32,61,32,118,97,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,32,63,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,32,58,32,104,46,108,111,99,97,116,101,70,105,108,101,32,63,32,104,46,108,111,99,97,116,101,70,105,108,101,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,44,32,112,41,32,58,32,112,32,43,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,122,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,40,99,46,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,40,41,59,10,32,32,32,32,32,32,118,97,114,32,97,99,32,61,32,40,97,41,32,61,62,32,40,97,99,32,61,32,87,46,102,97,41,40,97,41,44,32,84,32,61,32,40,97,41,32,61,62,32,40,84,32,61,32,87,46,104,97,41,40,97,41,44,32,110,98,32,61,32,40,97,41,32,61,62,32,40,110,98,32,61,32,87,46,105,97,41,40,97,41,44,32,98,99,32,61,32,40,97,44,32,98,41,32,61,62,32,40,98,99,32,61,32,87,46,106,97,41,40,97,44,32,98,41,44,32,88,32,61,32,40,97,44,32,98,41,32,61,62,32,40,88,32,61,32,87,46,107,97,41,40,97,44,32,98,41,44,32,89,32,61,32,40,97,41,32,61,62,32,40,89,32,61,32,87,46,108,97,41,40,97,41,44,32,90,32,61,32,40,41,32,61,62,32,40,90,32,61,32,87,46,109,97,41,40,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,87,46,110,97,41,40,97,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,87,46,111,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,87,46,112,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,87,46,113,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,87,46,114,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,87,46,115,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,87,46,116,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,87,46,117,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,87,46,118,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,87,46,119,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,87,46,120,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,87,46,121,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,87,46,122,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,33,61,61,32,103,32,43,32,48,41,32,116,104,114,111,119,32,103,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,106,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,103,99,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,33,61,61,32,99,32,43,32,48,41,32,116,104,114,111,119,32,99,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,107,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,32,33,61,61,32,107,32,43,32,48,41,32,116,104,114,111,119,32,107,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,109,99,59,10,32,32,32,32,32,32,71,32,61,32,102,117,110,99,116,105,111,110,32,110,99,40,41,32,123,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,111,99,40,41,59,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,40,71,32,61,32,110,99,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,111,99,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,109,99,32,38,38,32,40,109,99,32,61,32,116,114,117,101,44,32,104,46,99,97,108,108,101,100,82,117,110,32,61,32,116,114,117,101,44,32,33,108,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,114,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,97,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,104,46,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,101,100,63,46,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,111,115,116,82,117,110,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,111,115,116,82,117,110,32,38,38,32,40,104,46,112,111,115,116,82,117,110,32,61,32,91,104,46,112,111,115,116,82,117,110,93,41,59,32,104,46,112,111,115,116,82,117,110,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,104,46,112,111,115,116,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,46,117,110,115,104,105,102,116,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,115,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,48,32,60,32,70,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,82,117,110,41,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,82,117,110,32,38,38,32,40,104,46,112,114,101,82,117,110,32,61,32,91,104,46,112,114,101,82,117,110,93,41,59,32,104,46,112,114,101,82,117,110,46,108,101,110,103,116,104,59,32,41,32,116,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,66,97,40,113,97,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,60,32,70,32,124,124,32,40,104,46,115,101,116,83,116,97,116,117,115,32,63,32,40,104,46,115,101,116,83,116,97,116,117,115,40,34,82,117,110,110,105,110,103,46,46,46,34,41,44,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,104,46,115,101,116,83,116,97,116,117,115,40,34,34,41,44,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,49,41,41,32,58,32,97,40,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,73,110,105,116,41,10,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,73,110,105,116,32,38,38,32,40,104,46,112,114,101,73,110,105,116,32,61,32,91,104,46,112,114,101,73,110,105,116,93,41,59,32,48,32,60,32,104,46,112,114,101,73,110,105,116,46,108,101,110,103,116,104,59,32,41,32,104,46,112,114,101,73,110,105,116,46,112,111,112,40,41,40,41,59,10,32,32,32,32,32,32,111,99,40,41,59,10,32,32,32,32,32,32,109,111,100,117,108,101,82,116,110,32,61,32,99,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,125,59,10,32,32,125,41,40,41,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,32,61,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,119,97,115,109,45,108,111,97,100,101,114,46,116,115,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,82,101,110,100,101,114,101,114,76,111,97,100,101,114,32,105,115,32,97,32,115,116,97,116,105,99,32,99,108,97,115,115,32,97,110,100,32,99,97,110,110,111,116,32,98,101,32,105,110,115,116,97,110,116,105,97,116,101,100,46,34,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,116,114,121,76,111,97,100,40,117,114,108,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,117,108,101,32,61,32,97,119,97,105,116,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,40,123,32,108,111,99,97,116,101,70,105,108,101,58,32,40,41,32,61,62,32,117,114,108,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,84,114,105,101,115,32,116,111,32,108,111,97,100,32,116,104,101,32,87,65,83,77,32,109,111,100,117,108,101,32,102,114,111,109,32,116,104,101,32,112,114,105,109,97,114,121,32,85,82,76,44,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,97,32,98,97,99,107,117,112,32,85,82,76,32,105,102,32,110,101,99,101,115,115,97,114,121,46,10,32,32,32,32,32,42,32,84,104,114,111,119,115,32,97,110,32,101,114,114,111,114,32,105,102,32,98,111,116,104,32,85,82,76,115,32,102,97,105,108,32,116,111,32,108,111,97,100,32,116,104,101,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,116,104,105,115,46,95,119,97,115,109,85,82,76,41,46,99,97,116,99,104,40,97,115,121,110,99,32,40,105,110,105,116,105,97,108,69,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,117,112,85,114,108,32,61,32,96,104,116,116,112,115,58,47,47,117,110,112,107,103,46,99,111,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,108,111,97,100,32,102,97,105,108,101,100,32,102,114,111,109,32,36,123,116,104,105,115,46,95,119,97,115,109,85,82,76,125,46,32,69,114,114,111,114,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,65,116,116,101,109,112,116,105,110,103,32,116,111,32,108,111,97,100,32,87,65,83,77,32,102,114,111,109,32,98,97,99,107,117,112,32,85,82,76,58,32,36,123,98,97,99,107,117,112,85,114,108,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,98,97,99,107,117,112,85,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,97,99,107,117,112,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,66,97,99,107,117,112,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,98,97,99,107,117,112,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,87,65,83,77,32,108,111,97,100,105,110,103,32,102,97,105,108,101,100,32,102,114,111,109,32,97,108,108,32,115,111,117,114,99,101,115,46,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,80,117,98,108,105,99,32,109,101,116,104,111,100,32,116,111,32,108,111,97,100,32,116,104,101,32,87,101,98,65,115,115,101,109,98,108,121,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,85,116,105,108,105,122,101,115,32,97,32,112,114,105,109,97,114,121,32,97,110,100,32,98,97,99,107,117,112,32,85,82,76,32,102,111,114,32,114,111,98,117,115,116,110,101,115,115,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,108,111,97,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,83,101,116,115,32,97,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,32,97,110,100,32,105,110,118,97,108,105,100,97,116,101,115,32,116,104,101,32,99,117,114,114,101,110,116,32,109,111,100,117,108,101,32,112,114,111,109,105,115,101,46,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,114,105,110,103,32,45,32,32,84,104,101,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,105,102,32,40,117,114,108,32,61,61,61,32,116,104,105,115,46,95,119,97,115,109,85,82,76,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,119,97,115,109,85,82,76,32,61,32,117,114,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,64,116,121,112,101,115,99,114,105,112,116,45,101,115,108,105,110,116,47,110,97,109,105,110,103,45,99,111,110,118,101,110,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,77,111,100,117,108,101,80,114,111,109,105,115,101,34,44,32,110,117,108,108,41,59,10,32,32,47,47,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,44,32,99,111,110,115,116,114,117,99,116,101,100,32,117,115,105,110,103,32,112,97,99,107,97,103,101,32,105,110,102,111,114,109,97,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,119,97,115,109,85,82,76,34,44,32,96,104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,41,59,10,10,32,32,47,47,32,115,114,99,47,101,118,101,110,116,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,69,118,101,110,116,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,108,101,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,83,101,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,115,101,116,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,97,100,100,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,100,105,115,112,97,116,99,104,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,101,118,101,110,116,46,116,121,112,101,41,59,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,63,46,102,111,114,69,97,99,104,40,40,108,105,115,116,101,110,101,114,41,32,61,62,32,108,105,115,116,101,110,101,114,40,101,118,101,110,116,41,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,99,108,101,97,114,40,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,111,102,102,115,99,114,101,101,110,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,110,116,114,121,46,105,115,73,110,116,101,114,115,101,99,116,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,73,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,40,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,44,32,123,10,32,32,32,32,32,32,32,32,116,104,114,101,115,104,111,108,100,58,32,48,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,114,101,115,105,122,101,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,32,61,32,49,48,48,59,10,32,32,118,97,114,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,72,97,110,100,108,101,114,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,101,108,101,109,101,110,116,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,116,105,109,101,111,117,116,93,32,61,32,101,108,101,109,101,110,116,59,10,32,32,32,32,32,32,32,32,32,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,110,101,119,84,105,109,101,111,117,116,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,110,101,119,84,105,109,101,111,117,116,93,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,82,101,115,105,122,101,79,98,115,101,114,118,101,114,40,114,101,115,105,122,101,72,97,110,100,108,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,48,93,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,116,105,109,101,111,117,116,73,100,32,61,32,101,108,101,109,101,110,116,91,49,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,105,109,101,111,117,116,73,100,41,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,73,100,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,38,38,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,117,116,105,108,115,46,116,115,10,32,32,102,117,110,99,116,105,111,110,32,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,47,94,35,40,91,92,100,97,45,102,93,123,54,125,124,91,92,100,97,45,102,93,123,56,125,41,36,47,105,117,46,116,101,115,116,40,99,111,108,111,114,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,72,101,120,41,32,123,10,32,32,32,32,105,102,32,40,33,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,72,101,120,41,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,125,10,32,32,32,32,108,101,116,32,104,101,120,32,61,32,99,111,108,111,114,72,101,120,46,114,101,112,108,97,99,101,40,34,35,34,44,32,34,34,41,59,10,32,32,32,32,104,101,120,32,61,32,104,101,120,46,108,101,110,103,116,104,32,61,61,61,32,54,32,63,32,96,36,123,104,101,120,125,102,102,96,32,58,32,104,101,120,59,10,32,32,32,32,114,101,116,117,114,110,32,112,97,114,115,101,73,110,116,40,104,101,120,44,32,49,54,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,68,111,116,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,102,105,108,101,68,97,116,97,46,98,121,116,101,76,101,110,103,116,104,32,60,32,52,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,99,111,110,115,116,32,102,105,108,101,83,105,103,110,97,116,117,114,101,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,102,105,108,101,68,97,116,97,46,115,108,105,99,101,40,48,44,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,98,121,116,101,76,101,110,103,116,104,41,41,59,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,108,101,110,103,116,104,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,105,102,32,40,90,73,80,95,83,73,71,78,65,84,85,82,69,91,105,93,32,33,61,61,32,102,105,108,101,83,105,103,110,97,116,117,114,101,91,105,93,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,106,115,111,110,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,46,101,118,101,114,121,40,40,102,105,101,108,100,41,32,61,62,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,46,99,97,108,108,40,106,115,111,110,44,32,102,105,101,108,100,41,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,102,105,108,101,68,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,74,83,79,78,46,112,97,114,115,101,40,102,105,108,101,68,97,116,97,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,102,105,108,101,68,97,116,97,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,32,123,10,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,73,83,95,66,82,79,87,83,69,82,32,63,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,58,32,49,59,10,32,32,32,32,114,101,116,117,114,110,32,49,32,43,32,40,100,112,114,32,45,32,49,41,32,42,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,101,108,101,109,101,110,116,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,72,101,105,103,104,116,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,72,101,105,103,104,116,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,87,105,100,116,104,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,87,105,100,116,104,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,87,105,100,116,104,59,10,32,32,32,32,114,101,116,117,114,110,32,33,40,114,101,99,116,46,98,111,116,116,111,109,32,60,32,48,32,124,124,32,114,101,99,116,46,116,111,112,32,62,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,124,124,32,114,101,99,116,46,114,105,103,104,116,32,60,32,48,32,124,124,32,114,101,99,116,46,108,101,102,116,32,62,32,118,105,101,119,112,111,114,116,87,105,100,116,104,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,97,110,118,97,115,32,61,32,101,118,101,110,116,46,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,99,116,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,114,101,99,116,46,104,101,105,103,104,116,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,88,32,61,32,99,97,110,118,97,115,46,119,105,100,116,104,32,47,32,114,101,99,116,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,89,32,61,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,47,32,114,101,99,116,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,88,32,45,32,114,101,99,116,46,108,101,102,116,41,32,42,32,115,99,97,108,101,88,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,89,32,45,32,114,101,99,116,46,116,111,112,41,32,42,32,115,99,97,108,101,89,59,10,32,32,32,32,32,32,105,102,32,40,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,120,41,32,124,124,32,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,121,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,120,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,121,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,32,120,44,32,121,32,125,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,110,116,101,110,116,32,61,32,109,101,115,115,97,103,101,46,114,101,112,108,97,99,101,40,34,79,112,101,110,85,114,108,58,32,34,44,32,34,34,41,59,10,32,32,32,32,99,111,110,115,116,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,32,99,111,110,116,101,110,116,46,105,110,100,101,120,79,102,40,34,32,124,32,84,97,114,103,101,116,58,32,34,41,59,10,32,32,32,32,108,101,116,32,117,114,108,84,111,79,112,101,110,59,10,32,32,32,32,108,101,116,32,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,61,61,32,45,49,41,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,34,95,98,108,97,110,107,34,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,48,44,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,41,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,43,32,34,32,124,32,84,97,114,103,101,116,58,32,34,46,108,101,110,103,116,104,41,59,10,32,32,32,32,125,10,32,32,32,32,119,105,110,100,111,119,46,111,112,101,110,40,117,114,108,84,111,79,112,101,110,44,32,116,97,114,103,101,116,41,59,10,32,32,125,10,10,32,32,47,47,32,115,114,99,47,100,111,116,108,111,116,116,105,101,46,116,115,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,32,61,32,40,109,111,100,101,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,70,111,114,119,97,114,100,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,70,105,116,32,61,32,40,102,105,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,110,116,97,105,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,110,116,97,105,110,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,118,101,114,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,118,101,114,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,108,108,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,108,108,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,104,101,105,103,104,116,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,72,101,105,103,104,116,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,119,105,100,116,104,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,87,105,100,116,104,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,78,111,110,101,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,32,61,32,40,97,108,105,103,110,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,65,108,105,103,110,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,48,93,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,65,108,105,103,110,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,32,61,32,40,115,101,103,109,101,110,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,115,101,103,109,101,110,116,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,46,108,101,110,103,116,104,32,33,61,61,32,50,41,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,48,93,41,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,32,61,32,40,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,33,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,76,97,121,111,117,116,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,97,108,105,103,110,58,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,40,108,97,121,111,117,116,46,97,108,105,103,110,32,63,63,32,91,48,46,53,44,32,48,46,53,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,102,105,116,58,32,99,114,101,97,116,101,67,111,114,101,70,105,116,40,108,97,121,111,117,116,46,102,105,116,32,63,63,32,34,99,111,110,116,97,105,110,34,44,32,109,111,100,117,108,101,41,10,32,32,32,32,125,59,10,32,32,125,59,10,32,32,118,97,114,32,95,68,111,116,76,111,116,116,105,101,32,61,32,99,108,97,115,115,32,95,68,111,116,76,111,116,116,105,101,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,97,110,118,97,115,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,111,110,116,101,120,116,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,102,114,97,109,101,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,67,111,114,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,34,44,32,34,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,114,101,110,100,101,114,67,111,110,102,105,103,34,44,32,123,125,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,70,114,111,122,101,110,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,47,47,32,66,111,117,110,100,32,101,118,101,110,116,32,108,105,115,116,101,110,101,114,115,32,102,111,114,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,67,108,105,99,107,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,32,61,32,99,111,110,102,105,103,46,99,97,110,118,97,115,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,32,61,32,110,101,119,32,69,118,101,110,116,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,32,61,32,110,101,119,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,47,47,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,105,115,32,116,114,117,101,32,98,121,32,100,101,102,97,117,108,116,32,116,111,32,112,114,101,118,101,110,116,32,117,110,110,101,99,101,115,115,97,114,121,32,114,101,110,100,101,114,105,110,103,32,119,104,101,110,32,116,104,101,32,99,97,110,118,97,115,32,105,115,32,111,102,102,115,99,114,101,101,110,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,108,111,97,100,40,41,46,116,104,101,110,40,40,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,32,109,111,100,117,108,101,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,109,111,100,117,108,101,46,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,69,114,114,111,114,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,34,102,97,105,108,101,100,32,116,111,32,108,111,97,100,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,108,97,121,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,108,97,121,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,97,117,115,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,97,117,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,115,116,111,112,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,111,112,40,40,108,111,111,112,67,111,117,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,111,109,112,108,101,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,99,111,109,112,108,101,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,70,114,97,109,101,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,82,101,110,100,101,114,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,101,119,32,109,111,100,117,108,101,46,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,40,123,10,32,32,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,47,47,32,70,73,88,77,69,58,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,105,100,32,105,115,32,110,111,116,32,117,115,101,102,117,108,44,32,115,105,110,99,101,32,116,104,101,32,108,111,97,100,32,97,110,100,32,115,116,97,114,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,114,101,113,117,105,114,101,32,116,111,32,98,101,32,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,32,102,114,97,109,101,119,111,114,107,10,32,32,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,99,111,110,102,105,103,46,108,111,111,112,67,111,117,110,116,32,63,63,32,48,44,10,32,32,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,63,63,32,34,34,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,63,63,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,117,98,115,99,114,105,98,101,40,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,97,100,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,119,97,115,109,32,109,111,100,117,108,101,58,32,36,123,101,114,114,111,114,125,96,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,115,121,110,99,32,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,115,114,99,41,59,10,32,32,32,32,32,32,105,102,32,40,33,114,101,115,112,111,110,115,101,46,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,102,101,116,99,104,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,125,58,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,84,101,120,116,125,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,100,97,116,97,32,61,32,97,119,97,105,116,32,114,101,115,112,111,110,115,101,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,97,116,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,46,100,101,99,111,100,101,40,100,97,116,97,41,59,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,108,101,116,32,108,111,97,100,101,100,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,115,116,114,105,110,103,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,100,97,116,97,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,100,111,116,76,111,116,116,105,101,32,65,114,114,97,121,66,117,102,102,101,114,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,65,114,114,97,121,66,117,102,102,101,114,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,100,111,116,76,111,116,116,105,101,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,68,111,116,76,111,116,116,105,101,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,111,98,106,101,99,116,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,111,98,106,101,99,116,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,74,83,79,78,46,115,116,114,105,110,103,105,102,121,40,100,97,116,97,41,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,96,85,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,116,121,112,101,32,102,111,114,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,46,32,69,120,112,101,99,116,101,100,58,32,10,32,32,32,32,32,32,32,32,32,32,45,32,115,116,114,105,110,103,32,40,76,111,116,116,105,101,32,74,83,79,78,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,65,114,114,97,121,66,117,102,102,101,114,32,40,100,111,116,76,111,116,116,105,101,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,111,98,106,101,99,116,32,40,76,111,116,116,105,101,32,74,83,79,78,41,46,32,10,32,32,32,32,32,32,32,32,32,32,82,101,99,101,105,118,101,100,58,32,36,123,116,121,112,101,111,102,32,100,97,116,97,125,96,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,76,111,97,100,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,83,116,97,114,116,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,83,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,83,114,99,40,115,114,99,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,46,116,104,101,110,40,40,100,97,116,97,41,32,61,62,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,101,114,114,111,114,125,96,41,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,117,102,102,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,97,121,111,117,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,105,102,32,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,32,32,97,108,105,103,110,58,32,91,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,48,41,44,32,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,49,41,93,44,10,32,32,32,32,32,32,32,32,32,32,102,105,116,58,32,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,108,97,121,111,117,116,46,102,105,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,110,116,97,105,110,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,118,101,114,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,118,101,114,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,108,108,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,72,101,105,103,104,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,104,101,105,103,104,116,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,87,105,100,116,104,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,119,105,100,116,104,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,78,111,110,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,110,111,110,101,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,40,41,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,114,107,101,114,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,114,107,101,114,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,110,105,102,101,115,116,40,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,110,105,102,101,115,116,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,109,97,110,105,102,101,115,116,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,74,115,111,110,32,61,32,74,83,79,78,46,112,97,114,115,101,40,109,97,110,105,102,101,115,116,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,107,101,121,115,40,109,97,110,105,102,101,115,116,74,115,111,110,41,46,108,101,110,103,116,104,32,61,61,61,32,48,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,110,105,102,101,115,116,74,115,111,110,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,114,114,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,114,101,110,100,101,114,67,111,110,102,105,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,32,38,38,32,115,101,103,109,101,110,116,46,115,105,122,101,40,41,32,61,61,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,115,101,103,109,101,110,116,46,103,101,116,40,48,41,44,32,115,101,103,109,101,110,116,46,103,101,116,40,49,41,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,111,111,112,65,110,105,109,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,111,100,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,111,100,101,59,10,32,32,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,111,114,119,97,114,100,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,70,114,111,122,101,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,117,116,111,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,112,101,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,112,101,101,100,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,82,101,97,100,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,76,111,97,100,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,76,111,97,100,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,108,97,121,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,97,117,115,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,97,117,115,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,111,112,112,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,83,116,111,112,112,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,116,104,46,114,111,117,110,100,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,42,32,49,48,48,41,32,47,32,49,48,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,67,111,117,110,116,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,108,111,111,112,67,111,117,110,116,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,116,111,116,97,108,70,114,97,109,101,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,111,116,97,108,70,114,97,109,101,115,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,100,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,97,110,118,97,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,99,97,110,118,97,115,59,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,99,111,110,102,105,103,46,108,111,111,112,67,111,117,110,116,32,63,63,32,48,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,114,97,119,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,99,111,110,116,101,120,116,32,38,38,32,34,103,101,116,67,111,110,116,101,120,116,34,32,105,110,32,116,104,105,115,46,95,99,97,110,118,97,115,32,38,38,32,116,121,112,101,111,102,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,40,34,50,100,34,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,99,111,110,116,101,120,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,117,102,102,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,42,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,42,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,33,61,61,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,66,117,102,102,101,114,32,115,105,122,101,32,109,105,115,109,97,116,99,104,58,32,103,111,116,32,36,123,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,125,44,32,101,120,112,101,99,116,101,100,32,36,123,101,120,112,101,99,116,101,100,76,101,110,103,116,104,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,101,116,32,105,109,97,103,101,68,97,116,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,108,97,109,112,101,100,66,117,102,102,101,114,32,61,32,110,101,119,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,40,98,117,102,102,101,114,44,32,48,44,32,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,73,109,97,103,101,68,97,116,97,32,61,61,61,32,34,117,110,100,101,102,105,110,101,100,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,99,114,101,97,116,101,73,109,97,103,101,68,97,116,97,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,46,100,97,116,97,46,115,101,116,40,99,108,97,109,112,101,100,66,117,102,102,101,114,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,110,101,119,32,73,109,97,103,101,68,97,116,97,40,99,108,97,109,112,101,100,66,117,102,102,101,114,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,112,117,116,73,109,97,103,101,68,97,116,97,40,105,109,97,103,101,68,97,116,97,44,32,48,44,32,48,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,38,38,32,33,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,38,38,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,124,124,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,97,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,38,38,32,33,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,97,100,118,97,110,99,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,116,105,99,107,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,100,118,97,110,99,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,34,69,114,114,111,114,32,105,110,32,97,110,105,109,97,116,105,111,110,32,102,114,97,109,101,58,34,44,32,101,114,114,111,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,101,114,114,111,114,32,105,110,115,116,97,110,99,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,105,110,103,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,108,97,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,112,108,97,121,105,110,103,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,38,38,32,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,97,117,115,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,85,112,100,97,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,101,107,40,102,114,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,102,114,97,109,101,85,112,100,97,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,114,101,110,100,101,114,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,115,116,121,108,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,40,108,111,111,112,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,108,111,111,112,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,67,111,117,110,116,40,108,111,111,112,67,111,117,110,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,100,101,115,116,114,111,121,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,117,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,100,101,115,116,114,111,121,34,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,10,32,32,32,32,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,117,110,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,117,110,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,105,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,49,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,58,32,99,108,105,101,110,116,72,101,105,103,104,116,44,32,119,105,100,116,104,58,32,99,108,105,101,110,116,87,105,100,116,104,32,125,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,108,105,101,110,116,72,101,105,103,104,116,32,33,61,61,32,48,32,38,38,32,99,108,105,101,110,116,87,105,100,116,104,32,33,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,99,108,105,101,110,116,87,105,100,116,104,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,99,108,105,101,110,116,72,101,105,103,104,116,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,105,122,101,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,115,105,122,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,114,97,110,115,102,111,114,109,40,116,114,97,110,115,102,111,114,109,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,116,114,97,110,115,102,111,114,109,41,32,123,10,32,32,32,32,32,32,32,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,114,97,110,115,102,111,114,109,40,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,111,107,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,84,114,97,110,115,102,111,114,109,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,32,61,32,91,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,103,101,116,84,114,97,110,115,102,111,114,109,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,116,114,97,110,115,102,111,114,109,91,105,93,32,61,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,114,97,110,115,102,111,114,109,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,40,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,91,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,111,100,101,40,109,111,100,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,109,111,100,101,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,44,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,44,32,113,117,97,108,105,116,121,44,32,46,46,46,114,101,115,116,67,111,110,102,105,103,32,125,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,46,46,46,114,101,115,116,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,47,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,105,115,32,97,32,115,112,101,99,105,97,108,32,99,97,115,101,44,32,105,116,32,115,104,111,117,108,100,32,98,101,32,115,101,116,32,116,111,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,105,102,32,105,116,39,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,46,46,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,32,38,38,32,123,32,113,117,97,108,105,116,121,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,105,102,32,40,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,105,115,70,114,111,122,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,61,61,61,32,97,110,105,109,97,116,105,111,110,73,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,109,97,114,107,101,114,115,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,114,107,101,114,115,40,41,59,10,32,32,32,32,32,32,105,102,32,40,109,97,114,107,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,109,97,114,107,101,114,115,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,109,97,114,107,101,114,115,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,115,117,108,116,46,112,117,115,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,109,97,114,107,101,114,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,105,109,101,58,32,109,97,114,107,101,114,46,116,105,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,109,97,114,107,101,114,46,100,117,114,97,116,105,111,110,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,115,117,108,116,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,101,116,84,104,101,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,82,101,115,101,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,101,116,84,104,101,109,101,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,82,101,115,101,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,82,101,115,101,116,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,98,101,116,119,101,101,110,32,116,119,111,32,102,114,97,109,101,32,118,97,108,117,101,115,32,119,105,116,104,32,99,117,115,116,111,109,32,101,97,115,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,102,114,97,109,101,32,45,32,83,116,97,114,116,105,110,103,32,102,114,97,109,101,32,118,97,108,117,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,100,117,114,97,116,105,111,110,32,45,32,68,117,114,97,116,105,111,110,32,111,102,32,116,104,101,32,116,119,101,101,110,32,105,110,32,115,101,99,111,110,100,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,116,111,32,97,32,115,112,101,99,105,102,105,99,32,109,97,114,107,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,109,97,114,107,101,114,32,45,32,84,104,101,32,109,97,114,107,101,114,32,110,97,109,101,32,116,111,32,116,119,101,101,110,32,116,111,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,48,41,32,63,63,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,49,41,32,63,63,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,119,105,100,116,104,44,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,79,114,105,101,110,116,101,100,32,66,111,117,110,100,105,110,103,32,66,111,120,32,40,79,66,66,41,32,112,111,105,110,116,115,32,111,102,32,97,32,108,97,121,101,114,32,98,121,32,105,116,115,32,110,97,109,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,108,97,121,101,114,78,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,108,97,121,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,110,32,97,114,114,97,121,32,111,102,32,56,32,110,117,109,98,101,114,115,32,114,101,112,114,101,115,101,110,116,105,110,103,32,52,32,112,111,105,110,116,115,32,40,120,44,121,41,32,111,102,32,116,104,101,32,79,66,66,32,105,110,32,99,108,111,99,107,119,105,115,101,32,111,114,100,101,114,32,115,116,97,114,116,105,110,103,32,102,114,111,109,32,116,111,112,45,108,101,102,116,10,32,32,32,32,32,42,32,32,32,32,32,32,32,32,32,32,91,120,48,44,32,121,48,44,32,120,49,44,32,121,49,44,32,120,50,44,32,121,50,44,32,120,51,44,32,121,51,93,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,101,120,97,109,112,108,101,10,32,32,32,32,32,42,32,96,96,96,116,121,112,101,115,99,114,105,112,116,10,32,32,32,32,32,42,32,47,47,32,68,114,97,119,32,97,32,112,111,108,121,103,111,110,32,97,114,111,117,110,100,32,116,104,101,32,108,97,121,101,114,32,39,76,97,121,101,114,32,49,39,10,32,32,32,32,32,42,32,100,111,116,76,111,116,116,105,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,39,114,101,110,100,101,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,32,42,32,32,32,99,111,110,115,116,32,111,98,98,80,111,105,110,116,115,32,61,32,100,111,116,76,111,116,116,105,101,46,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,39,76,97,121,101,114,32,49,39,41,59,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,32,32,105,102,32,40,111,98,98,80,111,105,110,116,115,41,32,123,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,98,101,103,105,110,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,109,111,118,101,84,111,40,111,98,98,80,111,105,110,116,115,91,48,93,44,32,111,98,98,80,111,105,110,116,115,91,49,93,41,59,32,47,47,32,70,105,114,115,116,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,50,93,44,32,111,98,98,80,111,105,110,116,115,91,51,93,41,59,32,47,47,32,83,101,99,111,110,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,52,93,44,32,111,98,98,80,111,105,110,116,115,91,53,93,41,59,32,47,47,32,84,104,105,114,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,54,93,44,32,111,98,98,80,111,105,110,116,115,91,55,93,41,59,32,47,47,32,70,111,117,114,116,104,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,99,108,111,115,101,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,115,116,114,111,107,101,40,41,59,10,32,32,32,32,32,42,32,32,32,125,10,32,32,32,32,32,42,32,125,41,59,10,32,32,32,32,32,42,32,96,96,96,10,32,32,32,32,32,42,47,10,32,32,32,32,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,108,97,121,101,114,78,97,109,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,98,111,117,110,100,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,76,97,121,101,114,66,111,117,110,100,115,40,108,97,121,101,114,78,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,98,111,117,110,100,115,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,105,102,32,40,98,111,117,110,100,115,46,115,105,122,101,40,41,32,33,61,61,32,56,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,105,110,116,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,56,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,112,111,105,110,116,115,46,112,117,115,104,40,98,111,117,110,100,115,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,112,111,105,110,116,115,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,114,101,103,105,111,110,32,83,116,97,116,101,32,77,97,99,104,105,110,101,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,114,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,117,115,116,111,109,69,118,101,110,116,40,40,101,118,101,110,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,32,101,118,101,110,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,73,110,112,117,116,70,105,114,101,100,40,40,105,110,112,117,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,32,105,110,112,117,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,84,114,97,110,115,105,116,105,111,110,40,40,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,32,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,110,116,101,114,101,100,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,120,105,116,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,69,114,114,111,114,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,115,101,116,79,110,77,101,115,115,97,103,101,40,40,109,101,115,115,97,103,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,109,101,115,115,97,103,101,46,115,116,97,114,116,115,87,105,116,104,40,34,79,112,101,110,85,114,108,58,32,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,32,109,101,115,115,97,103,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,117,98,115,99,114,105,98,101,40,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,83,117,98,115,99,114,105,98,101,40,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,108,111,97,100,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,102,114,111,109,32,100,97,116,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,99,111,110,102,105,103,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,114,101,79,112,101,110,85,114,108,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,79,112,101,110,85,114,108,80,111,108,105,99,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,111,112,101,110,85,114,108,80,111,108,105,99,121,32,61,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,46,111,112,101,110,85,114,108,80,111,108,105,99,121,59,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,32,38,38,32,116,121,112,101,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,61,61,32,34,98,111,111,108,101,97,110,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,63,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,117,114,108,32,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,46,112,117,115,104,95,98,97,99,107,40,117,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,114,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,99,111,114,101,79,112,101,110,85,114,108,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,97,114,116,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,111,112,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,111,112,112,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,112,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,111,112,112,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,111,112,112,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,117,115,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,83,116,97,116,101,77,97,99,104,105,110,101,73,100,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,79,118,101,114,114,105,100,101,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,32,45,32,84,104,101,32,115,116,97,116,101,32,116,111,32,111,118,101,114,114,105,100,101,32,116,111,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,105,109,109,101,100,105,97,116,101,32,45,32,87,104,101,116,104,101,114,32,116,111,32,105,109,109,101,100,105,97,116,101,108,121,32,116,114,97,110,115,105,116,105,111,110,32,116,111,32,116,104,101,32,115,116,97,116,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,111,118,101,114,114,105,100,101,32,119,97,115,32,115,117,99,99,101,115,115,102,117,108,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,32,61,32,102,97,108,115,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,67,117,114,114,101,110,116,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,112,101,99,105,102,105,99,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,103,101,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,108,105,115,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,108,105,115,116,101,110,101,114,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,114,114,97,121,32,111,102,32,108,105,115,116,101,110,101,114,32,110,97,109,101,115,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,114,97,109,101,119,111,114,107,83,101,116,117,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,112,117,115,104,40,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,105,115,116,101,110,101,114,115,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,70,105,114,101,32,97,110,32,101,118,101,110,116,32,105,110,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,101,118,101,110,116,32,116,111,32,102,105,114,101,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,99,108,105,99,107,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,117,112,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,100,111,119,110,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,109,111,118,101,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,110,116,101,114,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,120,105,116,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,67,108,105,99,107,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,85,112,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,68,111,119,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,77,111,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,67,108,105,99,107,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,116,104,105,115,46,95,111,110,67,108,105,99,107,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,85,112,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,85,112,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,68,111,119,110,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,68,111,119,110,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,77,111,118,101,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,77,111,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,110,116,101,114,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,120,105,116,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,101,110,100,114,101,103,105,111,110,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,95,68,111,116,76,111,116,116,105,101,44,32,34,95,119,97,115,109,77,111,100,117,108,101,34,44,32,110,117,108,108,41,59,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,32,61,32,95,68,111,116,76,111,116,116,105,101,59,10,10,32,32,47,47,32,115,114,99,47,119,111,114,107,101,114,47,100,111,116,108,111,116,116,105,101,46,119,111,114,107,101,114,46,116,115,10,32,32,118,97,114,32,105,110,115,116,97,110,99,101,115,77,97,112,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,59,10,32,32,118,97,114,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,32,61,32,123,10,32,32,32,32,114,101,97,100,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,111,109,112,108,101,116,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,67,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,108,97,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,108,97,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,97,117,115,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,97,117,115,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,97,109,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,97,109,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,117,110,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,85,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,117,110,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,100,101,115,116,114,111,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,68,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,100,101,115,116,114,111,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,110,111,45,115,101,99,114,101,116,115,47,110,111,45,115,101,99,114,101,116,115,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,111,109,109,97,110,100,115,32,61,32,123,10,32,32,32,32,115,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,114,97,110,115,102,111,114,109,41,59,10,32,32,32,32,125,44,10,32,32,32,32,103,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,103,101,116,84,114,97,110,115,102,111,114,109,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,103,101,116,68,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,83,116,97,116,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,123,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,67,111,117,110,116,44,10,32,32,32,32,32,32,32,32,105,115,76,111,97,100,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,76,111,97,100,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,97,117,115,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,80,97,117,115,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,108,97,121,105,110,103,58,32,105,110,115,116,97,110,99,101,46,105,115,80,108,97,121,105,110,103,44,10,32,32,32,32,32,32,32,32,105,115,83,116,111,112,112,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,83,116,111,112,112,101,100,44,10,32,32,32,32,32,32,32,32,105,115,70,114,111,122,101,110,58,32,105,110,115,116,97,110,99,101,46,105,115,70,114,111,122,101,110,44,10,32,32,32,32,32,32,32,32,108,111,111,112,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,105,110,115,116,97,110,99,101,46,109,111,100,101,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,105,110,115,116,97,110,99,101,46,115,112,101,101,100,44,10,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,105,110,115,116,97,110,99,101,46,99,117,114,114,101,110,116,70,114,97,109,101,44,10,32,32,32,32,32,32,32,32,116,111,116,97,108,70,114,97,109,101,115,58,32,105,110,115,116,97,110,99,101,46,116,111,116,97,108,70,114,97,109,101,115,44,10,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,100,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,114,101,110,100,101,114,67,111,110,102,105,103,58,32,105,110,115,116,97,110,99,101,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,105,110,115,116,97,110,99,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,115,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,115,40,41,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,84,104,101,109,101,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,84,104,101,109,101,73,100,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,105,110,115,116,97,110,99,101,46,97,117,116,111,112,108,97,121,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,105,110,115,116,97,110,99,101,46,108,97,121,111,117,116,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,105,115,82,101,97,100,121,58,32,105,110,115,116,97,110,99,101,46,105,115,82,101,97,100,121,44,10,32,32,32,32,32,32,32,32,109,97,110,105,102,101,115,116,58,32,105,110,115,116,97,110,99,101,46,109,97,110,105,102,101,115,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,116,97,116,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,109,109,101,100,105,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,109,109,101,100,105,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,114,101,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,115,77,97,112,46,104,97,115,40,105,110,115,116,97,110,99,101,73,100,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,110,101,119,32,68,111,116,76,111,116,116,105,101,40,99,111,110,102,105,103,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,115,101,116,40,105,110,115,116,97,110,99,101,73,100,44,32,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,115,32,61,32,91,10,32,32,32,32,32,32,32,32,34,99,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,34,112,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,34,112,108,97,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,34,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,117,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,10,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,101,118,101,110,116,115,46,102,111,114,69,97,99,104,40,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,101,118,101,110,116,44,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,91,101,118,101,110,116,93,40,105,110,115,116,97,110,99,101,73,100,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,100,101,108,101,116,101,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,97,110,105,109,97,116,105,111,110,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,97,110,105,109,97,116,105,111,110,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,108,97,121,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,115,105,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,70,114,97,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,111,100,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,111,100,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,111,100,101,40,109,111,100,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,114,101,110,100,101,114,67,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,101,103,109,101,110,116,40,115,101,103,109,101,110,116,91,48,93,44,32,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,112,101,101,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,112,101,101,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,112,101,101,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,87,97,115,109,85,114,108,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,46,115,101,116,87,97,115,109,85,114,108,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,114,108,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,44,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,44,32,119,105,100,116,104,32,125,32,61,32,105,110,115,116,97,110,99,101,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,44,10,32,32,32,32,32,32,32,32,119,105,100,116,104,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,40,108,111,111,112,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,67,111,117,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,67,111,117,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,67,111,117,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,67,111,117,110,116,40,108,111,111,112,67,111,117,110,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,102,117,110,99,116,105,111,110,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,114,112,99,82,101,113,117,101,115,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,116,104,111,100,32,61,32,114,112,99,82,101,113,117,101,115,116,46,109,101,116,104,111,100,59,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,40,114,112,99,82,101,113,117,101,115,116,41,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,77,101,116,104,111,100,32,36,123,109,101,116,104,111,100,125,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,99,111,109,109,97,110,100,115,46,96,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,115,101,108,102,46,111,110,109,101,115,115,97,103,101,32,61,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,101,118,101,110,116,46,100,97,116,97,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,114,114,111,114,82,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,101,114,114,111,114,46,109,101,115,115,97,103,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,101,114,114,111,114,82,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,100,117,109,109,121,32,61,32,34,34,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,119,111,114,107,101,114,95,100,101,102,97,117,108,116,32,61,32,100,117,109,109,121,59,10,125,41,40,41,59,10])],{type:"application/javascript"}),e=URL.createObjectURL(n),t=new Worker(e);return URL.revokeObjectURL(e),t}},Tg=bg,wg=class{constructor(){J1(this,"_workers",new Map),J1(this,"_animationWorkerMap",new Map)}getWorker(n){return this._workers.has(n)||this._workers.set(n,new Tg),this._workers.get(n)}assignAnimationToWorker(n,e){this._animationWorkerMap.set(n,e)}unassignAnimationFromWorker(n){this._animationWorkerMap.delete(n)}sendMessage(n,e,t){this.getWorker(n).postMessage(e,t||[])}terminateWorker(n){let e=this._workers.get(n);e&&(e.terminate(),this._workers.delete(n))}};function rl(n,e){if(n instanceof HTMLCanvasElement){let{height:t,width:i}=n.getBoundingClientRect();if(t!==0&&i!==0)return{width:i*e,height:t*e}}return{width:n.width,height:n.height}}function sl(){return Date.now().toString(36)+Math.random().toString(36).substr(2,9)}var al=class Yt{constructor(e){J1(this,"_eventManager",new K6),J1(this,"_id"),J1(this,"_worker"),J1(this,"_canvas"),J1(this,"_dotLottieInstanceState",{loopCount:0,markers:[],autoplay:!1,backgroundColor:"",currentFrame:0,duration:0,loop:!1,mode:"forward",segment:[0,0],segmentDuration:0,speed:1,totalFrames:0,isLoaded:!1,isPlaying:!1,isPaused:!1,isStopped:!0,isFrozen:!1,useFrameInterpolation:!1,renderConfig:{devicePixelRatio:Zt()},activeAnimationId:"",activeThemeId:"",layout:void 0,marker:void 0,isReady:!1,manifest:null}),J1(this,"_created",!1),J1(this,"_boundOnClick",null),J1(this,"_boundOnPointerUp",null),J1(this,"_boundOnPointerDown",null),J1(this,"_boundOnPointerMove",null),J1(this,"_boundOnPointerEnter",null),J1(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._id=`dotlottie-${sl()}`;let t=e.workerId||"defaultWorker";this._worker=Yt._workerManager.getWorker(t),Yt._workerManager.assignAnimationToWorker(this._id,t),Yt._wasmUrl&&this._sendMessage("setWasmUrl",{url:Yt._wasmUrl}),this._create({...e,renderConfig:{...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||Zt(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0}}),this._worker.addEventListener("message",this._handleWorkerEvent.bind(this))}async _handleWorkerEvent(e){let t=e.data;if(!t.id&&(t.method==="onLoad"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event),e3&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&(pe.observe(this._canvas,this),X0(this._canvas)||await this.freeze()),this._dotLottieInstanceState.renderConfig.autoResize&&me.observe(this._canvas,this))),t.method==="onComplete"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onDestroy"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onUnfreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._dotLottieInstanceState.isFrozen=!1,this._eventManager.dispatch(t.result.event)),t.method==="onFrame"&&t.result.instanceId===this._id&&(this._dotLottieInstanceState.currentFrame=t.result.event.currentFrame,this._eventManager.dispatch(t.result.event)),t.method==="onRender"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onFreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPause"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPlay"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoadError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onRenderError"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onReady"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStart"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._setupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._cleanupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineTransition"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateEntered"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateExit"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineCustomEvent"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineBooleanInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineNumericInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStringInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInputFired"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInternalMessage"&&t.result.instanceId===this._id)){await this._updateDotLottieInstanceState();let i=t.result.event;i.message.startsWith("OpenUrl: ")&&Z6(i.message)}}async _create(e){let t;this._canvas instanceof HTMLCanvasElement?t=this._canvas.transferControlToOffscreen():t=this._canvas;let{instanceId:i}=await this._sendMessage("create",{instanceId:this._id,config:{...e,canvas:t},...rl(this._canvas,e.renderConfig?.devicePixelRatio||Zt())},[t]);if(i!==this._id)throw new Error("Instance ID mismatch");this._created=!0,await this._updateDotLottieInstanceState()}get loopCount(){return this._dotLottieInstanceState.loopCount}get isLoaded(){return this._dotLottieInstanceState.isLoaded}get isPlaying(){return this._dotLottieInstanceState.isPlaying}get isPaused(){return this._dotLottieInstanceState.isPaused}get isStopped(){return this._dotLottieInstanceState.isStopped}get currentFrame(){return this._dotLottieInstanceState.currentFrame}get isFrozen(){return this._dotLottieInstanceState.isFrozen}get segmentDuration(){return this._dotLottieInstanceState.segmentDuration}get totalFrames(){return this._dotLottieInstanceState.totalFrames}get segment(){return this._dotLottieInstanceState.segment}get speed(){return this._dotLottieInstanceState.speed}get duration(){return this._dotLottieInstanceState.duration}get isReady(){return this._dotLottieInstanceState.isReady}get mode(){return this._dotLottieInstanceState.mode}get canvas(){return this._canvas}get autoplay(){return this._dotLottieInstanceState.autoplay}get backgroundColor(){return this._dotLottieInstanceState.backgroundColor}get loop(){return this._dotLottieInstanceState.loop}get useFrameInterpolation(){return this._dotLottieInstanceState.useFrameInterpolation}get renderConfig(){return this._dotLottieInstanceState.renderConfig}get manifest(){return this._dotLottieInstanceState.manifest}get activeAnimationId(){return this._dotLottieInstanceState.activeAnimationId}get marker(){return this._dotLottieInstanceState.marker}get activeThemeId(){return this._dotLottieInstanceState.activeThemeId}get layout(){return this._dotLottieInstanceState.layout}async play(){this._created&&(await this._sendMessage("play",{instanceId:this._id}),await this._updateDotLottieInstanceState(),e3&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&!X0(this._canvas)&&await this.freeze())}async pause(){this._created&&(await this._sendMessage("pause",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async stop(){this._created&&(await this._sendMessage("stop",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSpeed(e){this._created&&(await this._sendMessage("setSpeed",{instanceId:this._id,speed:e}),await this._updateDotLottieInstanceState())}async setMode(e){this._created&&(await this._sendMessage("setMode",{instanceId:this._id,mode:e}),await this._updateDotLottieInstanceState())}async setFrame(e){this._created&&(await this._sendMessage("setFrame",{frame:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSegment(e,t){this._created&&(await this._sendMessage("setSegment",{instanceId:this._id,segment:[e,t]}),await this._updateDotLottieInstanceState())}async setRenderConfig(e){if(!this._created)return;let{devicePixelRatio:t,freezeOnOffscreen:i,quality:r,...s}=e;await this._sendMessage("setRenderConfig",{instanceId:this._id,renderConfig:{...this._dotLottieInstanceState.renderConfig,...s,devicePixelRatio:t||Zt(),freezeOnOffscreen:i??!0,...r!==void 0&&{quality:r}}}),await this._updateDotLottieInstanceState(),e3&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.autoResize?me.observe(this._canvas,this):me.unobserve(this._canvas),this._dotLottieInstanceState.renderConfig.freezeOnOffscreen?(pe.observe(this._canvas,this),X0(this._canvas)||await this.freeze()):(pe.unobserve(this._canvas),this._dotLottieInstanceState.isFrozen&&await this.unfreeze()))}async setUseFrameInterpolation(e){this._created&&(await this._sendMessage("setUseFrameInterpolation",{instanceId:this._id,useFrameInterpolation:e}),await this._updateDotLottieInstanceState())}async setTheme(e){if(!this._created)return!1;let t=this._sendMessage("setTheme",{instanceId:this._id,themeId:e});return await this._updateDotLottieInstanceState(),t}async load(e){this._created&&(await this._sendMessage("load",{config:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLoop(e){this._created&&(await this._sendMessage("setLoop",{instanceId:this._id,loop:e}),await this._updateDotLottieInstanceState())}async setLoopCount(e){this._created&&(await this._sendMessage("setLoopCount",{instanceId:this._id,loopCount:e}),await this._updateDotLottieInstanceState())}async resize(){if(!this._created)return;let{height:e,width:t}=rl(this._canvas,this._dotLottieInstanceState.renderConfig.devicePixelRatio||Zt());await this._sendMessage("resize",{height:e,instanceId:this._id,width:t}),await this._updateDotLottieInstanceState()}async destroy(){this._created&&(this._created=!1,await this._sendMessage("destroy",{instanceId:this._id}),this._cleanupStateMachineListeners(),Yt._workerManager.unassignAnimationFromWorker(this._id),this._eventManager.removeAllEventListeners(),e3&&this._canvas instanceof HTMLCanvasElement&&(pe.unobserve(this._canvas),me.unobserve(this._canvas)))}async freeze(){this._created&&(await this._sendMessage("freeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async unfreeze(){this._created&&(await this._sendMessage("unfreeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setBackgroundColor(e){this._created&&(await this._sendMessage("setBackgroundColor",{instanceId:this._id,backgroundColor:e}),await this._updateDotLottieInstanceState())}async loadAnimation(e){this._created&&(await this._sendMessage("loadAnimation",{animationId:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLayout(e){this._created&&(await this._sendMessage("setLayout",{instanceId:this._id,layout:e}),await this._updateDotLottieInstanceState())}async _updateDotLottieInstanceState(){if(!this._created)return;let e=await this._sendMessage("getDotLottieInstanceState",{instanceId:this._id});this._dotLottieInstanceState=e.state}markers(){return this._dotLottieInstanceState.markers}async setMarker(e){this._created&&(await this._sendMessage("setMarker",{instanceId:this._id,marker:e}),await this._updateDotLottieInstanceState())}async setThemeData(e){if(!this._created)return!1;let t=await this._sendMessage("setThemeData",{instanceId:this._id,themeData:e});return await this._updateDotLottieInstanceState(),t}async setViewport(e,t,i,r){return this._created?this._sendMessage("setViewport",{x:e,y:t,width:i,height:r,instanceId:this._id}):!1}async animationSize(){return this._created?this._sendMessage("animationSize",{instanceId:this._id}):{height:0,width:0}}async tween(e,t){return this._created?this._sendMessage("tween",{instanceId:this._id,frame:e,duration:t}):!1}async tweenToMarker(e,t){return this._created?this._sendMessage("tweenToMarker",{instanceId:this._id,marker:e,duration:t}):!1}async setTransform(e){return this._created?this._sendMessage("setTransform",{instanceId:this._id,transform:e}):!1}async getTransform(){if(this._created)return this._sendMessage("getTransform",{instanceId:this._id})}async _sendMessage(e,t,i){let r={id:`dotlottie-request-${sl()}`,method:e,params:t};return this._worker.postMessage(r,i||[]),new Promise((s,a)=>{let o=l=>{let c=l.data;c.id===r.id&&(this._worker.removeEventListener("message",o),c.error?a(new Error(`Failed to execute method ${e}: ${c.error}`)):s(c.result))};this._worker.addEventListener("message",o)})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}static setWasmUrl(e){Yt._wasmUrl=e}async stateMachineLoad(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoad",{instanceId:this._id,stateMachineId:e});return await this._updateDotLottieInstanceState(),t}async stateMachineLoadData(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoadData",{instanceId:this._id,stateMachineData:e});return await this._updateDotLottieInstanceState(),t}async stateMachineStart(){if(!this._created)return!1;let e=await this._sendMessage("stateMachineStart",{instanceId:this._id});return e&&(this._setupStateMachineListeners(),await this._updateDotLottieInstanceState()),e}async stateMachineStop(){return this._created?(this._cleanupStateMachineListeners(),this._sendMessage("stateMachineStop",{instanceId:this._id})):!1}async stateMachineSetNumericInput(e,t){return this._created?this._sendMessage("stateMachineSetNumericInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetBooleanInput(e,t){return this._created?this._sendMessage("stateMachineSetBooleanInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetConfig(e){this._created&&this._sendMessage("stateMachineSetConfig",{instanceId:this._id,config:e})}async stateMachineSetStringInput(e,t){return this._created?this._sendMessage("stateMachineSetStringInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineGetNumericInput(e){if(this._created)return this._sendMessage("stateMachineGetNumericInput",{instanceId:this._id,name:e})}async stateMachineGetBooleanInput(e){if(this._created)return this._sendMessage("stateMachineGetBooleanInput",{instanceId:this._id,name:e})}async stateMachineGetStringInput(e){if(this._created)return this._sendMessage("stateMachineGetStringInput",{instanceId:this._id,name:e})}async stateMachineFireEvent(e){this._created&&this._sendMessage("stateMachineFireEvent",{instanceId:this._id,name:e})}async stateMachineGetStatus(){return this._created?this._sendMessage("stateMachineGetStatus",{instanceId:this._id}):""}async stateMachineGetCurrentState(){return this._created?this._sendMessage("stateMachineGetCurrentState",{instanceId:this._id}):""}async stateMachineGetActiveId(){return this._created?this._sendMessage("stateMachineGetActiveId",{instanceId:this._id}):""}async stateMachineOverrideState(e,t=!1){return this._created?this._sendMessage("stateMachineOverrideState",{instanceId:this._id,state:e,immediate:t}):!1}async stateMachineGet(e){return this._created?this._sendMessage("stateMachineGet",{instanceId:this._id,stateMachineId:e}):""}async stateMachineGetListeners(){return this._created?this._sendMessage("stateMachineGetListeners",{instanceId:this._id}):[]}async stateMachinePostClickEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerUpEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerDownEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerMoveEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerEnterEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerExitEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:e,y:t})}_onClick(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerUp(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerDown(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerMove(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerEnter(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerLeave(e){let t=Q3(e);t&&this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:t.x,y:t.y})}async _setupStateMachineListeners(){if(e3&&this._canvas instanceof HTMLCanvasElement&&this.isLoaded){let e=await this._sendMessage("stateMachineGetListeners",{instanceId:this._id});if(e.length===0)return;this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){e3&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};J1(al,"_workerManager",new wg),J1(al,"_wasmUrl","");var Ag=au({props:{animationId:{type:String,required:!1},autoplay:{type:Boolean,required:!1},backgroundColor:{type:String,required:!1},data:{type:[String,ArrayBuffer],required:!1},loop:{type:Boolean,required:!1},mode:{type:String,required:!1},renderConfig:{type:Object,required:!1},segment:{type:Array,required:!1},speed:{type:Number,required:!1},src:{type:String,required:!1},useFrameInterpolation:{type:Boolean,required:!1},marker:{type:String,required:!1},playOnHover:{type:Boolean,required:!1},themeData:{type:String,required:!1},themeId:{type:String,required:!1},layout:{type:Object,required:!1},stateMachineId:{type:String,required:!1},stateMachineConfig:{type:Object,required:!1}},setup(n,{attrs:e,expose:t}){const i=k3(void 0),{animationId:r,backgroundColor:s,data:a,layout:o,loop:l,marker:c,mode:u,playOnHover:h,renderConfig:f,segment:p,speed:v,src:_,stateMachineConfig:m,stateMachineId:d,themeId:b,useFrameInterpolation:T}=q5(n);let y=null;const w=Io(()=>{let L=n.autoplay;return typeof h?.value<"u"&&h.value&&(L=!1),L}),I=(L={})=>{y!==null&&y.load({animationId:r?.value,backgroundColor:s?.value,data:a?.value,layout:o?.value,loop:l?.value,marker:c?.value,mode:u?.value,autoplay:w.value,renderConfig:f?.value,segment:p?.value,speed:v?.value,src:_?.value,stateMachineConfig:m?.value,stateMachineId:d?.value,themeId:b?.value,useFrameInterpolation:T?.value,...L})};N2(()=>s?.value,L=>{y&&typeof L<"u"&&y.setBackgroundColor(L)}),N2(()=>c?.value,L=>{y&&typeof L<"u"&&y.setMarker(L)}),N2(()=>l?.value,L=>{y&&typeof L<"u"&&y.setLoop(L)}),N2(()=>u?.value,L=>{y&&typeof L<"u"&&y.setMode(L)}),N2(()=>p?.value,L=>{if(!y)return;const E=L?.[0],C=L?.[1];typeof E=="number"&&typeof C=="number"&&y.setSegment(E,C)}),N2(()=>v?.value,L=>{y&&typeof L<"u"&&y.setSpeed(L)}),N2(()=>T?.value,L=>{y&&typeof L<"u"&&y.setUseFrameInterpolation(L)}),N2(()=>r?.value,L=>{y&&y.isLoaded&&typeof L<"u"&&L!==y.activeAnimationId&&y.loadAnimation(L)}),N2(()=>n.themeData,L=>{y&&typeof L<"u"&&y.setTheme(L)}),N2(()=>b?.value,L=>{y&&typeof L<"u"&&y.setTheme(L)});function D(L){L.type==="mouseenter"?y?.play():y?.pause()}return N2(()=>h?.value,L=>{y&&typeof L<"u"&&L?(i.value?.addEventListener("mouseenter",D),i.value?.addEventListener("mouseleave",D)):(i.value?.removeEventListener("mouseenter",D),i.value?.removeEventListener("mouseleave",D))}),N2(()=>o?.value,L=>{y&&typeof L<"u"&&y.setLayout(L)},{deep:!0}),N2(()=>f?.value,L=>{y&&typeof L<"u"&&y.setRenderConfig(L)},{deep:!0}),N2(()=>a?.value,L=>{y&&(typeof L=="object"||typeof L=="string")&&I({data:L})},{deep:!0}),N2(()=>_?.value,L=>{y&&typeof L<"u"&&I({src:L})}),N2(()=>d?.value,L=>{y&&y.isLoaded&&(typeof L=="string"&&L?y.stateMachineLoad(L)&&y.stateMachineStart():y.stateMachineStop())}),N2(()=>m?.value,L=>{y&&y.stateMachineSetConfig(L??null)},{deep:!0}),an(()=>{i.value&&(y=new Eg({canvas:i.value,...n,autoplay:w.value}),h?.value&&(i.value.addEventListener("mouseenter",D),i.value.addEventListener("mouseleave",D)))}),Wl(()=>{i.value?.addEventListener("mouseenter",D),i.value?.addEventListener("mouseleave",D),y?.destroy()}),t({getDotLottieInstance:()=>y}),()=>T4("div",{...e},T4("canvas",{style:"height: 100%; width: 100%",ref:i}))}});const Cg={class:"background-container"},Rg={__name:"InteractiveBackground",props:{theme:Object},setup(n){const e=n,t=k3(null),i=k3(null),r=k3(null),s=k3(null),a=k3(null);return an(()=>{t.value&&e.theme.backgroundAnimation?.init&&e.theme.backgroundAnimation.init(t.value,e.theme),i.value&&e.theme.vortexLayer?.animation?.init&&e.theme.vortexLayer.animation.init(i.value,e.theme),e.theme.overlayLayer?.type==="dotlottie-vue"&&s.value&&e.theme.overlayLayer?.animation?.init?e.theme.overlayLayer.animation.init(s.value,e.theme):r.value&&e.theme.overlayLayer?.animation?.init&&e.theme.overlayLayer?.type!=="dotlottie-vue"&&e.theme.overlayLayer.animation.init(r.value,e.theme),a.value&&e.theme.iconLayer?.animation?.init&&e.theme.iconLayer.animation.init(a.value,e.theme)}),Ir(()=>{e.theme.backgroundAnimation?.destroy&&e.theme.backgroundAnimation.destroy(),e.theme.vortexLayer?.animation?.destroy&&e.theme.vortexLayer.animation.destroy(),e.theme.overlayLayer?.type==="dotlottie-vue"&&e.theme.overlayLayer?.animation?.destroy?e.theme.overlayLayer.animation.destroy(s.value):e.theme.overlayLayer?.animation?.destroy&&e.theme.overlayLayer?.type!=="dotlottie-vue"&&e.theme.overlayLayer.animation.destroy(r.value),e.theme.iconLayer?.animation?.destroy&&e.theme.iconLayer.animation.destroy()}),(o,l)=>(x3(),ee("div",Cg,[q0("canvas",{ref_key:"canvasEl",ref:t,class:"background-canvas"},null,512),n.theme.overlayLayer?.type==="dotlottie-vue"?(x3(),ee("div",{key:0,ref_key:"lottieContainer",ref:s,class:"lottie-overlay"},[d3(Il(Ag),{src:n.theme.overlayLayer.lottieSrc,autoplay:"",loop:"",style:{width:"100%",height:"100%"}},null,8,["src"])],512)):mi("",!0),n.theme.vortexLayer?(x3(),ee("div",{key:1,ref_key:"vortexEl",ref:i,style:W3(n.theme.vortexLayer.styles)},null,4)):mi("",!0),n.theme.overlayLayer?(x3(),ee("div",{key:2,ref_key:"overlayEl",ref:r,style:W3(n.theme.overlayLayer.styles)},null,4)):mi("",!0),n.theme.iconLayer?(x3(),ee("div",{key:3,ref_key:"iconLayerEl",ref:a,style:W3(n.theme.iconLayer.styles)},null,4)):mi("",!0)]))}},Lg=Vr(Rg,[["__scopeId","data-v-77461f1c"]]),Pg=["src"],Ig=["innerHTML"],Dg={__name:"CharacterIcon",props:{svgCode:String,theme:Object,iconVisible:{type:Boolean,default:!1}},setup(n){const e=n,t=Io(()=>e.svgCode&&e.svgCode.startsWith("/"));return(i,r)=>(x3(),ee("div",{class:"search-icon",style:W3({width:n.theme?.searchBar?.icon?.size?.width||"72px",height:n.theme?.searchBar?.icon?.size?.height||"72px"})},[t.value?(x3(),ee("img",{key:0,src:n.svgCode,alt:"Character Icon",style:W3({width:"100%",height:"100%",filter:n.theme?.searchBar?.icon?.effects?.filter||"drop-shadow(0 0 4px var(--theme-primary)) drop-shadow(0 0 12px var(--theme-primary))",opacity:n.iconVisible?n.theme?.searchBar?.icon?.effects?.opacity?.visible||1:n.theme?.searchBar?.icon?.effects?.opacity?.initial||0,transform:n.iconVisible?n.theme?.searchBar?.icon?.effects?.transform?.visible||"scale(1)":n.theme?.searchBar?.icon?.effects?.transform?.initial||"scale(0.3)",transition:n.theme?.searchBar?.icon?.effects?.transition||"all 0.8s ease-out"})},null,12,Pg)):(x3(),ee("div",{key:1,innerHTML:n.svgCode,style:W3({width:"100%",height:"100%",filter:n.theme?.searchBar?.icon?.effects?.filter||"drop-shadow(0 0 4px var(--theme-primary)) drop-shadow(0 0 12px var(--theme-primary))",opacity:n.iconVisible?n.theme?.searchBar?.icon?.effects?.opacity?.visible||1:n.theme?.searchBar?.icon?.effects?.opacity?.initial||0,transform:n.iconVisible?n.theme?.searchBar?.icon?.effects?.transform?.visible||"scale(1)":n.theme?.searchBar?.icon?.effects?.transform?.initial||"scale(0.3)",transition:n.theme?.searchBar?.icon?.effects?.transition||"all 0.8s ease-out"})},null,12,Ig))],4))}},Ug=Vr(Dg,[["__scopeId","data-v-25553235"]]);function Fg(n,e,t=45,i="Search...",r=null){let s=0;function a(){if(s>=e.length){o();return}const l=e[s];let c=0;n.value.placeholder="";function u(){if(c<l.length){n.value.placeholder+=l.charAt(c),c++;const h=Math.random()*60+30;setTimeout(u,h)}else{let h=2e3+l.length*15;setTimeout(()=>{n.value.placeholder="",s++,a()},h)}}u()}function o(){const l=i;let c=0;n.value.placeholder="";function u(){if(c<l.length){n.value.placeholder+=l.charAt(c),c++;const h=Math.random()*60+30;setTimeout(u,h)}else{let h=!0;setInterval(()=>{h?n.value.placeholder=l+" █":n.value.placeholder=l,h=!h},500),setTimeout(()=>{r&&r()},1e3)}}u()}return{startTyping:()=>{setTimeout(()=>{a()},3e3)}}}const Og={__name:"ThemedSearchBar",props:{theme:Object},setup(n){ph(l=>({v6e6a58bb:n.theme.searchBar.position?.top||"40%",aa7a9444:n.theme.searchBar.position?.left||"50%",v58472f36:n.theme.searchBar.size?.width||"580px",v6f5e2404:n.theme.searchBar.size?.mobileWidth||"80vw"}));const e=n,t=k3(null),i=k3(null),r=k3(!1),s=k3(!1),a=()=>{if(i.value){const l=i.value.$el;l&&l.classList.add("glitching")}},{startTyping:o}=Fg(t,e.theme.searchBar.placeholder?.animation?.phrases||e.theme.searchBar.placeholder?.phrases||[],e.theme.searchBar.placeholder?.animation?.typingSpeed||e.theme.searchBar.placeholder?.typingSpeed||45,e.theme.searchBar.placeholder?.animation?.initialText||e.theme.searchBar.placeholder?.initialText||"Search...",a);return an(()=>{const l=e.theme.searchBar.loadAnimation?.searchBarDelay||3e3,c=e.theme.searchBar.loadAnimation?.iconDelay||800;setTimeout(()=>{r.value=!0,setTimeout(()=>{s.value=!0,o()},c)},l)}),(l,c)=>(x3(),ee("div",{class:O0(["search-container",`icon-pos-${n.theme.searchBar.icon?.position||"inline"}`]),style:W3({top:n.theme.searchBar.container?.position?.top||"40%",left:n.theme.searchBar.container?.position?.left||"50%",zIndex:n.theme.searchBar.container?.zIndex||1e3,textAlign:n.theme.searchBar.container?.textAlign||"center"})},[q0("form",{action:"https://www.google.com/search",method:"get",target:"_blank",class:O0(["search-box",{visible:r.value}]),style:W3({opacity:r.value?n.theme.searchBar.loadAnimation?.effects?.opacity?.visible??1:n.theme.searchBar.loadAnimation?.effects?.opacity?.initial??0,transform:r.value?n.theme.searchBar.loadAnimation?.effects?.transform?.visible||"scale(1)":n.theme.searchBar.loadAnimation?.effects?.transform?.initial||"scale(1.1)",transition:n.theme.searchBar.loadAnimation?.effects?.transition||"opacity 1s ease-out"})},[q0("input",{ref_key:"inputRef",ref:t,type:"text",id:"searchInput",name:"q",autocomplete:"off",placeholder:"",style:W3({width:n.theme.searchBar.input?.size?.width||"580px",height:n.theme.searchBar.input?.size?.height||"auto",background:n.theme.searchBar.input?.background?.color||"rgba(0, 0, 0, 0.9)",border:`${n.theme.searchBar.input?.border?.width||"2px"} ${n.theme.searchBar.input?.border?.style||"solid"} ${n.theme.searchBar.input?.border?.color||"currentColor"}`,borderRadius:n.theme.searchBar.input?.shape?.borderRadius||"24px",color:n.theme.searchBar.input?.text?.color||n.theme.colors.primary,fontFamily:n.theme.searchBar.input?.text?.fontFamily||n.theme.font.family,fontSize:n.theme.searchBar.input?.text?.fontSize||n.theme.font.size,fontWeight:n.theme.searchBar.input?.text?.fontWeight||n.theme.searchBar.input?.effects?.fontWeight||"normal",letterSpacing:n.theme.searchBar.input?.text?.letterSpacing||"normal",verticalAlign:n.theme.searchBar.input?.text?.verticalAlign||"baseline",boxShadow:n.theme.searchBar.input?.effects?.boxShadow||"var(--theme-box-shadow)",transition:n.theme.searchBar.input?.effects?.transition||"all 0.3s",padding:n.theme.searchBar.input?.padding||"15px 70px 15px 20px","--placeholder-font-weight":n.theme.searchBar.placeholder?.text?.fontWeight||"normal","--placeholder-top":n.theme.searchBar.placeholder?.position?.top||"auto","--placeholder-color":n.theme.searchBar.placeholder?.text?.color||"var(--theme-placeholder-color)"})},null,4)],6),d3(Ug,{ref_key:"iconRef",ref:i,"svg-code":n.theme.searchBar.icon?.svg||n.theme.searchBar.iconSvg,class:O0([{visible:s.value},"search-icon-wrapper"]),theme:n.theme,"icon-visible":s.value},null,8,["svg-code","class","theme","icon-visible"])],6))}},Ng=Vr(Og,[["__scopeId","data-v-b0bd35f3"]]),Bg={__name:"App",setup(n){const e={matrix:ur,vader:$6},t=k3(ur),i=k3({});function r(o){const l=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(o);return l?{r:parseInt(l[1],16),g:parseInt(l[2],16),b:parseInt(l[3],16)}:null}function s(o){document.title=o.pageTitle;let l=document.querySelector("link[rel~='icon']");l||(l=document.createElement("link"),l.rel="icon",document.head.appendChild(l)),l.href=o.favicon;const c=r(o.colors.primary);i.value={"--theme-background":o.colors.background,"--theme-primary":o.colors.primary,"--theme-accent":o.colors.accent,"--theme-box-shadow":`0 0 20px rgba(${c.r}, ${c.g}, ${c.b}, 0.3)`,"--theme-box-shadow-focus":`0 0 30px rgba(${c.r}, ${c.g}, ${c.b}, 0.6)`,"--theme-placeholder-color":`rgba(${c.r}, ${c.g}, ${c.b}, 0.5)`,"font-family":o.font.family,"font-size":o.font.size,color:o.colors.primary,"background-color":o.colors.background}}function a(o){o.themeId!==t.value.themeId&&r2.to(["#themed-search-bar","#interactive-background"],{opacity:0,duration:.5,onComplete:()=>{t.value=o}})}return an(()=>{const l=new URLSearchParams(window.location.search).get("theme"),c=localStorage.getItem("activeThemeId"),u=l||c||"matrix";e[u]&&(t.value=e[u]),s(t.value)}),N2(t,o=>{r2.fromTo(["#themed-search-bar","#interactive-background"],{opacity:0},{opacity:1,duration:.5,delay:.1}),s(o),localStorage.setItem("activeThemeId",o.themeId);const l=new URLSearchParams(window.location.search);l.set("theme",o.themeId),window.history.replaceState({},"",`${window.location.pathname}?${l}`)}),(o,l)=>(x3(),ee("div",{id:"app",style:W3(i.value)},[d3(lg,{onThemeChanged:a}),(x3(),ra(Lg,{key:t.value.themeId+"-bg",theme:t.value,id:"interactive-background"},null,8,["theme"])),(x3(),ra(Ng,{key:t.value.themeId+"-search",theme:t.value,id:"themed-search-bar"},null,8,["theme"]))],4))}};Lh(Bg).mount("#app");
